<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NCS.SilverlightLib</name>
    </assembly>
    <members>
        <member name="T:NCS.Cache.CacheBase`1">
            <summary>
            缓存基类，根据设置更新缓存数据，并提供缓存数据功能；#注意#不要直接创建缓存对象，对缓存类的访问，应由CacheManager处理
            </summary>
            <typeparam name="M">被缓存的数据类型，需要是EntityViewBase的子类</typeparam>
        </member>
        <member name="M:NCS.Cache.CacheBase`1.#ctor">
            <summary>
            构造函数，可以在这里初始化各个参数
            </summary>
        </member>
        <member name="E:NCS.Cache.CacheBase`1.CacheDataUpdated">
            <summary>
            当缓存数据被更新后触发
            </summary>
        </member>
        <member name="P:NCS.Cache.CacheBase`1.AutoClearCacheWhenUpdate">
            <summary>
            当更新缓存时，是否自动清除缓存。默认为true，只有当需要手工增量/分批更新缓存时才需要设为false。
            </summary>
        </member>
        <member name="M:NCS.Cache.CacheBase`1.OnCacheDataUpdated">
            <summary>
            触发CacheDataUpdated事件，可以在子类中重写，附加额外逻辑
            </summary>
        </member>
        <member name="P:NCS.Cache.CacheBase`1.DataUpdateMode">
            <summary>
            缓存数据更新模式
            </summary>
        </member>
        <member name="P:NCS.Cache.CacheBase`1.LastDataUpdateTime">
            <summary>
            数据的时间戳，为数据的最近更新时间
            </summary>
        </member>
        <member name="P:NCS.Cache.CacheBase`1.DataExpireTime">
            <summary>
            定义数据超时时间，如5分钟后超时
            </summary>
        </member>
        <member name="P:NCS.Cache.CacheBase`1.DataUpdateMark">
            <summary>
            数据更新标志，当更新模式包含标志位更新时，若值为true，则立即更新缓存数据
            </summary>
        </member>
        <member name="P:NCS.Cache.CacheBase`1.InvokeCount">
            <summary>
            调用计数器，表明被缓存的数据在其生命周期内被调用的次数
            </summary>
        </member>
        <member name="P:NCS.Cache.CacheBase`1.CacheData">
            <summary>
            获取缓存数据，并自动根据更新模式和参数更新缓存
            </summary>
        </member>
        <member name="M:NCS.Cache.CacheBase`1.CloneCacheData">
            <summary>
            获取缓存数据的副本
            </summary>
            <returns></returns>
        </member>
        <member name="M:NCS.Cache.CacheBase`1.GetAllDataFromServerAsync">
            <summary>
            需要实现，用于缓存从服务器获取完整待缓存数据的异步方法，请在回调方法中，调用UpdateCacheData方法更新缓存。
            </summary>
            <returns></returns>
        </member>
        <member name="M:NCS.Cache.CacheBase`1.UpdateCacheData(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            更新缓存内容的方法，请在调用GetAllDataFromServerAsync后，相应的回调函数中调用该方法。
            </summary>
        </member>
        <member name="M:NCS.Cache.CacheBase`1.CheckCondtionInCacheRange(NCS.DataAccess.QuerySubConditions)">
            <summary>
            检查提供的条件，是否在缓存范围内
            </summary>
            <param name="conditions"></param>
            <returns></returns>
        </member>
        <member name="M:NCS.Cache.CacheBase`1.CustomCheckIsExpire">
            <summary>
            判断当前缓存是否需要刷新，仅当缓存模式设置为Custom时会使用该方法判断
            </summary>
            <returns></returns>
        </member>
        <member name="T:NCS.Cache.CacheManager">
            <summary>
            缓存管理器，为继承自CacheBase的缓存提供可靠的单例模式
            </summary>
        </member>
        <member name="M:NCS.Cache.CacheManager.GetInstance``2">
            <summary>
            获取缓存对象
            </summary>
            <typeparam name="C">缓存类</typeparam>
            <typeparam name="M">实体类</typeparam>
            <returns></returns>
        </member>
        <member name="T:NCS.Cache.CacheUpdateMode">
            <summary>
            缓存模式
            </summary>
        </member>
        <member name="F:NCS.Cache.CacheUpdateMode.NoCache">
            <summary>
            无缓存
            </summary>
        </member>
        <member name="F:NCS.Cache.CacheUpdateMode.Timing">
            <summary>
            定时更新
            </summary>
        </member>
        <member name="F:NCS.Cache.CacheUpdateMode.Mark">
            <summary>
            标志位指定更新
            </summary>
        </member>
        <member name="F:NCS.Cache.CacheUpdateMode.TimeStamp">
            <summary>
            时间戳，每次调用更新时间戳，通常与定时更新联合使用
            </summary>
        </member>
        <member name="F:NCS.Cache.CacheUpdateMode.Custom">
            <summary>
            自定义，通过实现 CustomCheckIsExpire() 函数实现
            </summary>
        </member>
        <member name="T:NCS.Cache.CacheLocalStorageBase`1">
            <summary>
            半永久的缓存，数据将序列化后保存在独立存储区，避免每次都从服务器读取，主要用于极少更新或变动的数据
            </summary>
            <typeparam name="M"></typeparam>
        </member>
        <member name="P:NCS.Cache.CacheLocalStorageBase`1.CacheGroupName">
            <summary>
            若缓存根据不同登录用户或其他逻辑有所不同，可以重写该属性，返回分组名称依据
            </summary>
        </member>
        <member name="T:NCS.Cache.CacheBaseSettingsItem">
            <summary>
            缓存对象中的设置项，主要用于序列化配置的保存
            </summary>
        </member>
        <member name="T:NCS.Cache.CacheNetworkdFile">
            <summary>
            用于缓存网络文件
            </summary>
        </member>
        <member name="P:NCS.Cache.CacheNetworkdFile.CacheExpire">
            <summary>
            获取或设置过期时间
            </summary>
        </member>
        <member name="M:NCS.Cache.CacheNetworkdFile.AddBind(System.Uri,System.Windows.DependencyObject,System.Windows.DependencyProperty)">
            <summary>
            添加绑定
            </summary>
            <param name="uri">指向数据的网址</param>
            <param name="obj">被绑定对象</param>
            <param name="property">绑定属性</param>
        </member>
        <member name="M:NCS.Cache.CacheNetworkdFile.RemoveBind(System.Uri,System.Windows.DependencyObject,System.Windows.DependencyProperty)">
            <summary>
            移除绑定
            </summary>
            <param name="uri">指向数据的网址</param>
            <param name="obj">被绑定对象</param>
            <param name="property">绑定属性</param>
        </member>
        <member name="T:NCS.DataAccess.QueryConditions">
            <summary>
            描述查询条件的类
            </summary>
        </member>
        <member name="P:NCS.DataAccess.QueryConditions.PageIndex">
            <summary>
            页号
            </summary>
        </member>
        <member name="P:NCS.DataAccess.QueryConditions.PageSize">
            <summary>
            每页数据量
            </summary>
        </member>
        <member name="P:NCS.DataAccess.QueryConditions.OrderBy">
            <summary>
            排序字段列表
            </summary>
        </member>
        <member name="P:NCS.DataAccess.QueryConditions.Conditions">
            <summary>
            查询条件列表
            </summary>
        </member>
        <member name="M:NCS.DataAccess.QueryConditions.#ctor(NCS.View.QueryConditionEntityViewBase,System.Int32,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="conditionentity">用于描述查询条件的实体类实例</param>
            <param name="pageindex">页号</param>
            <param name="pagesize">每页数据量</param>
        </member>
        <member name="M:NCS.DataAccess.QueryConditions.ToString">
            <summary>
            获取可描述包含条件的字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:NCS.DataAccess.QueryConditions.ToString(System.String)">
            <summary>
            获取可描述包含条件的字符串
            </summary>
            <param name="splitconditions">各个条件之间的分隔符</param>
            <returns></returns>
        </member>
        <member name="T:NCS.DataAccess.QueryCondition">
            <summary>
            描述单个条件项
            </summary>
        </member>
        <member name="E:NCS.DataAccess.QueryCondition.PropertyChanged">
            <summary>
            属性改变时触发
            </summary>
        </member>
        <member name="M:NCS.DataAccess.QueryCondition.OnPropertyChanged(System.String)">
            <summary>
            触发PropertyChanged事件
            </summary>
            <param name="property"></param>
        </member>
        <member name="P:NCS.DataAccess.QueryCondition.Checked">
            <summary>
            条件是否有效
            </summary>
        </member>
        <member name="P:NCS.DataAccess.QueryCondition.Property">
            <summary>
            条件针的对字段名
            </summary>
        </member>
        <member name="P:NCS.DataAccess.QueryCondition.DisplayName">
            <summary>
            字段显示名称
            </summary>
        </member>
        <member name="P:NCS.DataAccess.QueryCondition.Value">
            <summary>
            条件值
            </summary>
        </member>
        <member name="P:NCS.DataAccess.QueryCondition.Operator">
            <summary>
            操作符
            </summary>
        </member>
        <member name="P:NCS.DataAccess.QueryCondition.Value2">
            <summary>
            条件值2，主要用于数值区间（Between操作符）
            </summary>
        </member>
        <member name="P:NCS.DataAccess.QueryCondition.Target">
            <summary>
            目标，暂时无用，保留字段
            </summary>
        </member>
        <member name="T:NCS.DataAccess.QueryOrderByProperty">
            <summary>
            用于描述排序字段
            </summary>
        </member>
        <member name="E:NCS.DataAccess.QueryOrderByProperty.PropertyChanged">
            <summary>
            属性改变时触发
            </summary>
        </member>
        <member name="M:NCS.DataAccess.QueryOrderByProperty.OnPropertyChanged(System.String)">
            <summary>
            触发PropertyChanged事件
            </summary>
            <param name="property"></param>
        </member>
        <member name="P:NCS.DataAccess.QueryOrderByProperty.Checked">
            <summary>
            字段是否有效
            </summary>
        </member>
        <member name="P:NCS.DataAccess.QueryOrderByProperty.Property">
            <summary>
            字段名
            </summary>
        </member>
        <member name="P:NCS.DataAccess.QueryOrderByProperty.Priority">
            <summary>
            排序优先级，越小，优先级越高
            </summary>
        </member>
        <member name="P:NCS.DataAccess.QueryOrderByProperty.Sort">
            <summary>
            排序方式
            </summary>
        </member>
        <member name="P:NCS.DataAccess.QueryOrderByProperty.DisplayName">
            <summary>
            显示名称
            </summary>
        </member>
        <member name="M:NCS.DataAccess.QueryOrderByProperty.GetOrderByPropertiesByConditions(NCS.View.QueryConditionEntityViewBase)">
            <summary>
            根据条件字段的定义，直接获取相应的排序字段定义
            </summary>
            <param name="conditionentity">描述查询条件的实体类</param>
            <returns></returns>
        </member>
        <member name="M:NCS.DataAccess.QueryOrderByProperty.GetOrderByPropertiesByConditions``1">
            <summary>
            根据条件字段的定义，直接获取相应的排序字段定义
            </summary>
            <typeparam name="T">描述查询条件的实体类型</typeparam>
            <returns></returns>
        </member>
        <member name="M:NCS.DataAccess.QueryOrderByProperty.GetOrderByPropertiesByEntity``1">
            <summary>
            根据实体字段的定义，直接获取相应的排序字段定义
            </summary>
            <typeparam name="T">描述实体结果的类型</typeparam>
            <returns></returns>
        </member>
        <member name="T:NCS.DataAccess.QuerySubConditions">
            <summary>
            描述一组查询条件
            </summary>
        </member>
        <member name="M:NCS.DataAccess.QuerySubConditions.GetString(System.String)">
            <summary>
            获取可描述包含条件的字符串
            </summary>
            <param name="splitconditions">各个条件之间的分隔符</param>
            <returns></returns>
        </member>
        <member name="T:NCS.DataAccess.QueryConditionOperator">
            <summary>
            各种条件运算方式
            </summary>
        </member>
        <member name="F:NCS.DataAccess.QueryConditionOperator.None">
            <summary>
            无
            </summary>
        </member>
        <member name="F:NCS.DataAccess.QueryConditionOperator.Equal">
            <summary>
            等于
            </summary>
        </member>
        <member name="F:NCS.DataAccess.QueryConditionOperator.Contain">
            <summary>
            包含（like）
            </summary>
        </member>
        <member name="F:NCS.DataAccess.QueryConditionOperator.BiggerThan">
            <summary>
            大于
            </summary>
        </member>
        <member name="F:NCS.DataAccess.QueryConditionOperator.LessThan">
            <summary>
            小于
            </summary>
        </member>
        <member name="F:NCS.DataAccess.QueryConditionOperator.BiggerOrEqual">
            <summary>
            大于等于
            </summary>
        </member>
        <member name="F:NCS.DataAccess.QueryConditionOperator.LessOrEqual">
            <summary>
            小于等于
            </summary>
        </member>
        <member name="F:NCS.DataAccess.QueryConditionOperator.Between">
            <summary>
            在2值之间
            </summary>
        </member>
        <member name="F:NCS.DataAccess.QueryConditionOperator.BitAnd">
            <summary>
            按位与
            </summary>
        </member>
        <member name="F:NCS.DataAccess.QueryConditionOperator.BitOr">
            <summary>
            按位或
            </summary>
        </member>
        <member name="F:NCS.DataAccess.QueryConditionOperator.In">
            <summary>
            在一组值之间
            </summary>
        </member>
        <member name="F:NCS.DataAccess.QueryConditionOperator.Not">
            <summary>
            非，无直接操作符，用于和其他操作符组合使用
            </summary>
        </member>
        <member name="F:NCS.DataAccess.QueryConditionOperator.NotEqual">
            <summary>
            不等于
            </summary>
        </member>
        <member name="F:NCS.DataAccess.QueryConditionOperator.NotContain">
            <summary>
            不包含
            </summary>
        </member>
        <member name="F:NCS.DataAccess.QueryConditionOperator.NotBetween">
            <summary>
            不间于
            </summary>
        </member>
        <member name="T:NCS.DataAccess.ConditionRelation">
            <summary>
            用于连接各个条件的方式，AND或OR
            </summary>
        </member>
        <member name="F:NCS.DataAccess.ConditionRelation.AND">
            <summary>
            且，条件都满足才为True
            </summary>
        </member>
        <member name="F:NCS.DataAccess.ConditionRelation.OR">
            <summary>
            或，条件有一条满足即为True
            </summary>
        </member>
        <member name="T:NCS.DataAccess.QuerySortIn">
            <summary>
            排序方式，（默认通常为升序）
            </summary>
        </member>
        <member name="F:NCS.DataAccess.QuerySortIn.Default">
            <summary>
            默认，通常=升序
            </summary>
        </member>
        <member name="F:NCS.DataAccess.QuerySortIn.Ascending">
            <summary>
            升序
            </summary>
        </member>
        <member name="F:NCS.DataAccess.QuerySortIn.Descending">
            <summary>
            降序
            </summary>
        </member>
        <member name="T:NCS.DataAccess.QueryConditionExpressionType">
            <summary>
            表达式条件的类型
            </summary>
        </member>
        <member name="F:NCS.DataAccess.QueryConditionExpressionType.Property">
            <summary>
            仅仅将字段作为表达式
            </summary>
        </member>
        <member name="F:NCS.DataAccess.QueryConditionExpressionType.Expression">
            <summary>
            表达式包含一个符合E-SQL语法的字符串
            </summary>
        </member>
        <member name="T:NCS.DataAccess.QueryConditionExpression">
            <summary>
            表达式条件的内容
            </summary>
        </member>
        <member name="F:NCS.DataAccess.QueryConditionExpression.TableNamePlaceholder">
            <summary>
            表达式中，代表表名的占位符，对于单个字段可以省略，但若包含E-SQL表达式，则需要在用到的字段前加占位符
            </summary>
        </member>
        <member name="P:NCS.DataAccess.QueryConditionExpression.Expression">
            <summary>
            表达式，根据Type指定，可以为单独的字段，也可以为符合E-SQL语法的表达式，当需要使用到字段时，需要在字段前加上TableNamePlaceholder定义的占位符。如 $T$.Field
            </summary>
        </member>
        <member name="P:NCS.DataAccess.QueryConditionExpression.Type">
            <summary>
            表达式类型
            </summary>
        </member>
        <member name="T:NCS.DataBind.CacheNetworkImageConvert">
            <summary>
            URL-图片转换器，可用来替换默认转换器，在数据绑定时指定，可以缓存网络图片，在一定时间内避免反复下载，节省时间和流量
            </summary>
        </member>
        <member name="M:NCS.DataBind.CacheNetworkImageConvert.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            转换
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:NCS.DataBind.CacheNetworkImageConvert.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            逆向转换，没有实现
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="T:NCS.DataBind.AmountConverter">
            <summary>
            金额转换器，将数值类型格式化转换成字符窜，默认保留2位小数，可在parameter参数中指定输出格式
            </summary>
        </member>
        <member name="M:NCS.DataBind.AmountConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            转换
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:NCS.DataBind.AmountConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            逆向转换
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="T:NCS.DataBind.DateTimeConverter">
            <summary>
            日期转换器，将日期型数据格式化输出，输出含完整日期和时间，若时间部分为0，则只输出日期部分
            </summary>
        </member>
        <member name="M:NCS.DataBind.DateTimeConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            转换
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:NCS.DataBind.DateTimeConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            逆向转换
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="T:NCS.DataBind.UpperCharConverter">
            <summary>
            默认将传入的字符串按大写输出
            </summary>
        </member>
        <member name="M:NCS.DataBind.UpperCharConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            转换
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:NCS.DataBind.UpperCharConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            逆向转换
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="T:NCS.DataBind.LowerCharConverter">
            <summary>
            默认将传入的字符串按小写输出
            </summary>
        </member>
        <member name="M:NCS.DataBind.LowerCharConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            转换
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:NCS.DataBind.LowerCharConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            逆向转换
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="T:NCS.DataBind.KeyValueMappingConverter`2">
            <summary>
            抽象类，提供映射关系转换的转换器，只需实现KeyValueDictionary属性即可
            </summary>
            <typeparam name="Key">key对应的类型</typeparam>
            <typeparam name="Val">值对应的类型</typeparam>
        </member>
        <member name="P:NCS.DataBind.KeyValueMappingConverter`2.KeyValueDictionary">
            <summary>
            必须实现，用于返回一个key-value对应的hash表
            </summary>
        </member>
        <member name="M:NCS.DataBind.KeyValueMappingConverter`2.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            转换
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:NCS.DataBind.KeyValueMappingConverter`2.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            逆向转换
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="T:NCS.DataBind.ResourceMappingConvert">
            <summary>
            抽象类，提供映射资源文件的转换器，只需指定资源名称的字符串样式和资源对象即可
            </summary>
        </member>
        <member name="P:NCS.DataBind.ResourceMappingConvert.ResourceKeyPatten">
            <summary>
            资源名称的字符串样式，如：XXX_UI_{0}_Name，注意：必须包含{0}，用以和传入的值合并为资源文件中的资源名称
            </summary>
        </member>
        <member name="P:NCS.DataBind.ResourceMappingConvert.ResourceManager">
            <summary>
            资源对象，可以返回执行资源文件中的同名属性
            </summary>
        </member>
        <member name="T:NCS.DataBind.AsciiOnlyConverter">
            <summary>
            将非Ascii字符移除的转换器。首先将全角字母数字等转换为半角，剩余的全角字符都会被删除
            </summary>
        </member>
        <member name="M:NCS.DataBind.AsciiOnlyConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            转换
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:NCS.DataBind.AsciiOnlyConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            逆向转换，将值原样返回
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="T:NCS.DataBind.EnumConverter`1">
            <summary>
            转换枚举类型为友好显示名称
            </summary>
            <typeparam name="E">枚举类型</typeparam>
        </member>
        <member name="P:NCS.DataBind.EnumConverter`1.EnumNameMapping">
            <summary>
            必须实现，用于描述枚举值和希望显示内容的对应的hash表
            </summary>
        </member>
        <member name="M:NCS.DataBind.EnumConverter`1.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            转换
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:NCS.DataBind.EnumConverter`1.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            逆向转换
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="T:NCS.DataBind.ReversaBoolValueConverter">
            <summary>
            针对布尔值，取反
            </summary>
        </member>
        <member name="M:NCS.DataBind.ReversaBoolValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            转换
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:NCS.DataBind.ReversaBoolValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            逆向转换
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="T:NCS.DataBind.ReversaVisibleConverter">
            <summary>
            对Visibility取反。（Visible/Collapsed)
            </summary>
        </member>
        <member name="M:NCS.DataBind.ReversaVisibleConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            转换
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:NCS.DataBind.ReversaVisibleConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            逆向转换
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="T:NCS.DataBind.Bool2VisibleConverter">
            <summary>
            将布尔类型转换为可见的枚举值
            </summary>
        </member>
        <member name="M:NCS.DataBind.Bool2VisibleConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            转换
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:NCS.DataBind.Bool2VisibleConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            逆向转换
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="T:NCS.DataBind.FormatConverter">
            <summary>
            实现格式化输出的转换类，输出类型为string，注意****没有实现ConvertBack方法
            </summary>
        </member>
        <member name="P:NCS.DataBind.FormatConverter.NullDisplayText">
            <summary>
            替代 Null时显示的内容
            </summary>
        </member>
        <member name="M:NCS.DataBind.FormatConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            转换
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:NCS.DataBind.FormatConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            逆向转换，原样输出
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="T:NCS.DataBind.ObjectToStringConverter">
            <summary>
            直接将传入对象ToString输出
            </summary>
        </member>
        <member name="T:NCS.Language.Language">
            <summary>
              一个强类型的资源类，用于查找本地化的字符串等。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.ResourceManager">
            <summary>
              返回此类使用的缓存的 ResourceManager 实例。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.Culture">
            <summary>
              使用此强类型资源类，为所有资源查找
              重写当前线程的 CurrentUICulture 属性。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.DataAccess_ConditionRelation_AND_Name">
            <summary>
              查找类似 And 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.DataAccess_ConditionRelation_OR_Name">
            <summary>
              查找类似 Or 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_Business_DaulControl_Checker_2Tab_ButtonApprove_Text">
            <summary>
              查找类似 Approve 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_Business_DaulControl_Checker_2Tab_ButtonReject_Text">
            <summary>
              查找类似 Reject 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_Business_DaulControl_Checker_2Tab_Message_ConfirmApprove">
            <summary>
              查找类似 Confirm to approve all selected data? 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_Business_DaulControl_Checker_2Tab_Message_ConfirmReject">
            <summary>
              查找类似 Confirm to reject all selected data? 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_Business_DaulControl_Checker_2Tab_TabMain_Text">
            <summary>
              查找类似 Approved data 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_Business_DaulControl_Checker_2Tab_TabPending_Text">
            <summary>
              查找类似 Waiting for approval 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_Business_DaulControl_Maker_3Tab_ButtonAdd_Text">
            <summary>
              查找类似 Add New 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_Business_DaulControl_Maker_3Tab_ButtonCancelPending_Text">
            <summary>
              查找类似 Cancel 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_Business_DaulControl_Maker_3Tab_ButtonRemove_Text">
            <summary>
              查找类似 Delete 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_Business_DaulControl_Maker_3Tab_ButtonSave_Text">
            <summary>
              查找类似 Save 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_Business_DaulControl_Maker_3Tab_ButtonSubmit_Text">
            <summary>
              查找类似 Submit 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_Business_DaulControl_Maker_3Tab_Message_CheckAlreadyInPendingFailed">
            <summary>
              查找类似 Checks whether the selected data has been submitted failed, operation will be aborted. 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_Business_DaulControl_Maker_3Tab_Message_ConfirmAbendUnSave">
             <summary>
               查找类似 Some data in {0} list has not been saved/submitted, if you continue this action, the changes will be lost.  Confirm to continue?
            
            *OK - continue and abandon the changes.
            *Cancel - stop and remain in current page to modify/save/submit the data. 的本地化字符串。
             </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_Business_DaulControl_Maker_3Tab_Message_ConfirmCancel">
             <summary>
               查找类似 Do you confirm to cancel the saved/submitted data?
            
            *The data will be delete directly. 的本地化字符串。
             </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_Business_DaulControl_Maker_3Tab_Message_ConfirmRemove">
             <summary>
               查找类似 Do you confirm to mark all selected items for remove? 
            
            *The data will not be removed till you submit.
            *The data which just added will remove from the datagrid directly. 的本地化字符串。
             </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_Business_DaulControl_Maker_3Tab_Message_ConfirmSave">
             <summary>
               查找类似 Do you confirm to save all changes of the data you selected?
            
            *The data will save to pending list, but checker will not approve/reject them till you submit them in pending list. 的本地化字符串。
             </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_Business_DaulControl_Maker_3Tab_Message_ConfirmSubmit">
             <summary>
               查找类似 Do you confirm to submit all changes of the data you selected?
            
            *The data can not be modified till checker approve/reject them. 的本地化字符串。
             </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_Business_DaulControl_Maker_3Tab_Message_DataAlreadyInPendingTip">
            <summary>
              查找类似 Already be submitted by {0} on {1}. 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_Business_DaulControl_Maker_3Tab_Message_NeedChooseFrist">
            <summary>
              查找类似 Please select the data which you want to {0}. 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_Business_DaulControl_Maker_3Tab_Message_ProcessFailed">
            <summary>
              查找类似 Oops, {0} operation failed.  的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_Business_DaulControl_Maker_3Tab_Message_ProcessSuccess">
            <summary>
              查找类似 {0} operation has been completed successfully.  的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_Business_DaulControl_Maker_3Tab_Message_SameDataInSameBatch">
            <summary>
              查找类似 There are two identical items. 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_Business_DaulControl_Maker_3Tab_TabMain_Text">
            <summary>
              查找类似 Current 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_Business_DaulControl_Maker_3Tab_TabPending_Text">
            <summary>
              查找类似 Pending 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_Business_DaulControl_Maker_3Tab_TabRepair_Text">
            <summary>
              查找类似 Repair 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_Business_DaulControl_Message_AlreadySubmittedNotSubmittedTip">
            <summary>
              查找类似 *Ignored {0} records, they were already submitted/saved before. 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_Business_DaulControl_Message_CanNotSubmitNonPendingDataTip">
            <summary>
              查找类似 Only the pending data can be submitted/cancelled, system will auto ignore the other data. 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_Business_DaulControl_Message_CanNotSubmitNonPendingNonRejectDataTip">
            <summary>
              查找类似 Only the pending &amp; rejected data can be submitted/cencelled, system will auto ignore the other data. 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_Business_DaulControl_Message_CanNotSubmitSubmittedDataTip">
            <summary>
              查找类似 The submitted data can not be submit again, system will auto ignore the submitted data. 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_Business_DaulControl_Message_CanNotSubmitUnChangedDataTip">
            <summary>
              查找类似 Only the add/edit/delete data can be submitted/saved, system will auto ignore the unchange data. 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_Business_DaulControl_Message_ProcessingTip">
            <summary>
              查找类似 Now processing, please wait awhile... 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_Business_DaulControl_Message_ValidationOnlyHasWarningTip">
            <summary>
              查找类似 The validation result contains some warning items, would you like to ignore the warnings and continue to submit the data? 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_Compare_NewValue_Name">
            <summary>
              查找类似 New Value: 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_Compare_OldValue_Name">
            <summary>
              查找类似 Old Value: 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_CompareButton_Text">
            <summary>
              查找类似 Compare 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_CompareValueField_ChangeTo_Text">
            <summary>
              查找类似 Before change 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_DataGridEx_CopyCell">
            <summary>
              查找类似 Copy Cell 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_DataGridEx_DeFrozenColumn">
            <summary>
              查找类似 Defroze column 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_DataGridEx_DeFrozenColumnTip">
            <summary>
              查找类似 The column is a normal column, if it was frozen, the column will keep the visible postion on the left of the datagrid. 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_DataGridEx_FrozenColumn">
            <summary>
              查找类似 Froze column 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_DataGridEx_FrozenColumnTip">
            <summary>
              查找类似 The column was frozed, it will not move with  the scroll bar rolling. After defroze, the column can be drop or move with the scroll bar. 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_DataGridEx_GroupHighLight">
            <summary>
              查找类似 Group the highlight rows 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_DataGridEx_HighLightRow">
            <summary>
              查找类似 Hightlight this row 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_DataGridEx_UndoColumnText">
            <summary>
              查找类似 Operator 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_DataGridEx_UnHighLightRow">
            <summary>
              查找类似 Remove hightlight 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_DetailButton_Detail_Text">
            <summary>
              查找类似 Detail 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_DetailButton_Edit_Text">
            <summary>
              查找类似 Edit 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_DynamicQueryConditions_AddCondtion">
            <summary>
              查找类似 Add 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_DynamicQueryConditions_AddCondtion_Tip">
            <summary>
              查找类似 Add a new condition in this group. 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_DynamicQueryConditions_DeleteCondtion_Tip">
            <summary>
              查找类似 Remove the condtion 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_DynamicQueryConditions_Field">
            <summary>
              查找类似 Field 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_DynamicQueryConditions_Field_EmptyTip">
            <summary>
              查找类似 Click &amp; Choose 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_DynamicQueryConditions_Group">
            <summary>
              查找类似 Condition Group 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_DynamicQueryConditions_Operator">
            <summary>
              查找类似 Operator 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_DynamicQueryConditions_Relation">
            <summary>
              查找类似 And/Or 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_DynamicQueryConditions_Required">
            <summary>
              查找类似 *Required 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_DynamicQueryConditions_Value">
            <summary>
              查找类似 Value 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_FileBrowser_Browse_Text">
            <summary>
              查找类似 Browse... 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_FileBrowser_ChooseFile">
            <summary>
              查找类似 Please choose file in open file dialog windows. 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_FileBrowser_MulitFileInfo">
            <summary>
              查找类似 {0} files ({1}). {2} 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_FileBrowser_SingleFileInfo">
            <summary>
              查找类似 {0} ({1}) 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_OrderByOption_ASC">
            <summary>
              查找类似 Asc 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_OrderByOption_DEFAULT">
            <summary>
              查找类似 Default 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_OrderByOption_DESC">
            <summary>
              查找类似 Desc 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_OrderByOption_txtAllFields_Text">
            <summary>
              查找类似 Available for Sort 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_OrderByOption_txtOrderBy_Label">
            <summary>
              查找类似 Order By: 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_OrderByOption_txtOrderBy_Text">
            <summary>
              查找类似 Order By 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_OrderByOption_txtOrderByNone">
            <summary>
              查找类似 Default (Unspecitied) 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_OrderBySelectionGrid_MustChooseOne_Error">
            <summary>
              查找类似 You must choose at least one field. 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_PageOption_txtPage_Text">
            <summary>
              查找类似 Page: 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_PageOption_txtPerPage_Text">
            <summary>
              查找类似 Pagesize: 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_PageOption_txtTotal_Text">
            <summary>
              查找类似 Total: 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_Private_DataGridUndoButton_UndoAddTip">
            <summary>
              查找类似 Remove this item form the datagrid. 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_Private_DataGridUndoButton_UndoEditTip">
            <summary>
              查找类似 Restore the item, and cancel all modifications. 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_Private_DataGridUndoButton_UndoRemoveTip">
            <summary>
              查找类似 Cancel the &apos;Remove/delete&apos; mark. 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_Private_DetailWindow_Cancel_Text">
            <summary>
              查找类似 Cancel 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_Private_DetailWindow_Close_Text">
            <summary>
              查找类似 Close 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_Private_DetailWindow_OK_Text">
            <summary>
              查找类似 OK 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_Private_DetailWindow_Reset_Text">
            <summary>
              查找类似 Reset 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_Private_DetailWindow_Title">
            <summary>
              查找类似 Detail 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_Private_DynamicQuery_ConditionRelation_AddCondtion_Text">
            <summary>
              查找类似 Add 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_Private_DynamicQuery_ConditionRelation_AddCondtion_Tip">
            <summary>
              查找类似 Add a new condtion in this group. 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_Private_RejectReason_Cancel_Text">
            <summary>
              查找类似 Cancel 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_Private_RejectReason_InputReason">
            <summary>
              查找类似 Please log the reject reason: 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_Private_RejectReason_Need4Chars">
            <summary>
              查找类似 Reject reason need at least 4 characters. 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_Private_RejectReason_OK_Text">
            <summary>
              查找类似 OK 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_Private_RejectReason_Title">
            <summary>
              查找类似 Reject Reason 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_Private_SubmitComment_Cancel_Text">
            <summary>
              查找类似 Cancel 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_Private_SubmitComment_InputReason">
            <summary>
              查找类似 Please log the submit comment if necessary: 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_Private_SubmitComment_OK_Text">
            <summary>
              查找类似 OK 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_Private_SubmitComment_Title">
            <summary>
              查找类似 Edit Comment for checker 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_QueryForm_btnExport_Content">
            <summary>
              查找类似 Export 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_QueryForm_btnQuery_Content">
            <summary>
              查找类似 Query 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_QueryForm_chkAll_Content">
            <summary>
              查找类似 All 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_QueryForm_Condition_Text">
            <summary>
              查找类似 Filters: 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_QueryForm_Condition_Text_Empty">
            <summary>
              查找类似 None; 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_QueryForm_ExportDone_Message">
            <summary>
              查找类似 The data in DataGrid has been successful exported. 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_QueryForm_ExportError_Message">
            <summary>
              查找类似 Export Data failed. There&apos;s no data to export. 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_QueryForm_ExpressionValueIsEmpty">
            <summary>
              查找类似 The Expression value can not be empty. 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_QueryForm_GetCheckedResultCollection_EntityCheckedPropertyNameInvalidType">
            <summary>
              查找类似 The property: {1} specified by EntityCheckedPropertyName in [{0}] is not bool or bool?. 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_QueryForm_GetCheckedResultCollection_EntityCheckedPropertyNameNotExist">
            <summary>
              查找类似 Can not find property: {1} specified by EntityCheckedPropertyName in [{0}]. 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_QueryForm_GetCheckedResultCollection_NeedEntityCheckedPropertyName">
            <summary>
              查找类似 Function: DataGridEx.GetCheckedResultCollection require EntityCheckedPropertyName property. 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_QueryForm_MaskForm_Text">
            <summary>
              查找类似 Loading... please wait a minute. 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_QueryForm_Process_MaskForm_Text">
            <summary>
              查找类似 Processing... please wait a minute. 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_QueryForm_radChoose_Content">
            <summary>
              查找类似 Choose 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Controls_QueryForm_Value1ShouldLessThanValue2">
            <summary>
              查找类似 The first value should smaller or equal with the second value. 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Entity_EnumOperatorType_Add">
            <summary>
              查找类似 Add 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Entity_EnumOperatorType_Delete">
            <summary>
              查找类似 Delete 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Entity_EnumOperatorType_Edit">
            <summary>
              查找类似 Edit 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Entity_EnumOperatorType_Normal">
            <summary>
              查找类似  的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Entity_EnumOperatorType_Pending">
            <summary>
              查找类似 Pending 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_Private_VersionWindow_Title">
            <summary>
              查找类似 Version 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_VersionButton_Package">
            <summary>
              查找类似 Package loaded:  的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.UI_VersionButton_Version">
            <summary>
              查找类似 Version 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.View_QueryConditionOperator_Between_Name">
            <summary>
              查找类似 Between 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.View_QueryConditionOperator_BiggerOrEqual_Desc">
            <summary>
              查找类似 &gt;= 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.View_QueryConditionOperator_BiggerOrEqual_Name">
            <summary>
              查找类似 &gt;= 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.View_QueryConditionOperator_BiggerThan_Desc">
            <summary>
              查找类似 &gt; 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.View_QueryConditionOperator_BiggerThan_Name">
            <summary>
              查找类似 &gt; 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.View_QueryConditionOperator_BitAnd_Desc">
            <summary>
              查找类似 Logical AND 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.View_QueryConditionOperator_BitAnd_Name">
            <summary>
              查找类似 Logical AND 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.View_QueryConditionOperator_BitOr_Desc">
            <summary>
              查找类似 Logical OR 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.View_QueryConditionOperator_BitOr_Name">
            <summary>
              查找类似 Logical OR 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.View_QueryConditionOperator_Contain_Desc">
            <summary>
              查找类似 Contain 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.View_QueryConditionOperator_Contain_Name">
            <summary>
              查找类似 Contain 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.View_QueryConditionOperator_Equal_Desc">
            <summary>
              查找类似 Equal 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.View_QueryConditionOperator_Equal_Name">
            <summary>
              查找类似 Equal 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.View_QueryConditionOperator_In_Desc">
            <summary>
              查找类似 Values split with &apos;{0}&apos;, eg: 1{0}2{0}3 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.View_QueryConditionOperator_In_Name">
            <summary>
              查找类似 In 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.View_QueryConditionOperator_LessOrEqual_Desc">
            <summary>
              查找类似 &lt;= 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.View_QueryConditionOperator_LessOrEqual_Name">
            <summary>
              查找类似 &lt;= 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.View_QueryConditionOperator_LessThan_Desc">
            <summary>
              查找类似 &lt; 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.View_QueryConditionOperator_LessThan_Name">
            <summary>
              查找类似 &lt; 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.View_QueryConditionOperator_NotBetween_Name">
            <summary>
              查找类似 Not Between 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.View_QueryConditionOperator_NotContain_Desc">
            <summary>
              查找类似 Not Contain 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.View_QueryConditionOperator_NotContain_Name">
            <summary>
              查找类似 Not Contain 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.View_QueryConditionOperator_NotEqual_Desc">
            <summary>
              查找类似 Not Equal 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.View_QueryConditionOperator_NotEqual_Name">
            <summary>
              查找类似 Not Equal 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.View_VaildateErrorLevel_Error">
            <summary>
              查找类似 Error 的本地化字符串。
            </summary>
        </member>
        <member name="P:NCS.Language.Language.View_VaildateErrorLevel_Warning">
            <summary>
              查找类似 Warning 的本地化字符串。
            </summary>
        </member>
        <member name="T:NCS.UI.Controls.AutoCompletePinYinFilter">
            <summary>
            根据输入的拼音，自动删选列表项的控件
            </summary>
        </member>
        <member name="F:NCS.UI.Controls.AutoCompletePinYinFilter.DisplayMemberPathProperty">
            <summary>
            用于描述显示字段属性的定义
            </summary>
        </member>
        <member name="F:NCS.UI.Controls.AutoCompletePinYinFilter.SelectedValueMemberPathProperty">
            <summary>
            获取被选择值的字段属性的定义
            </summary>
        </member>
        <member name="F:NCS.UI.Controls.AutoCompletePinYinFilter.SelectedValueProperty">
            <summary>
            获取被选中值的属性定义
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.AutoCompletePinYinFilter.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.AutoCompletePinYinFilter.DisplayMemberPath">
            <summary>
            实体类中用于显示的字段名
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.AutoCompletePinYinFilter.SelectedValueMemberPath">
            <summary>
            SelectedValue返回的被选择实体的字段名
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.AutoCompletePinYinFilter.SelectedValue">
            <summary>
            被选中的值
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.Business.DualControl_Checker_2Tab.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.Business.Maintenance_Settings.Title">
            <summary>
            各个查询控件的标题，通常为业务数据名称。
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.Business.Maintenance_Settings.ThrowExceptions">
            <summary>
            当调用各个Finish方法时，若发现服务器返回异常，是否将异常抛出。
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.Business.Maintenance_Settings.MainTab_QueryConditionEntity">
            <summary>
            定义主界面面的查询条件对象。（必填）
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.Business.Maintenance_Settings.MainTab_QueryOrderByProperty">
            <summary>
            主界面面用于提供给用户排序的字段列表
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.Business.Maintenance_Settings.MainTab_ExportButtonVisibility">
            <summary>
            主界面面是否显示导出按钮。
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.Business.Maintenance_Settings.MainTab_AddButtonVisibility">
            <summary>
            主界面的添加按钮是否可见
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.Business.Maintenance_Settings.MainTab_RemoveButtonVisibility">
            <summary>
            主界面的删除按钮是否可见
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.Business.Maintenance_Settings.MainTab_SubmitButtonVisibility">
            <summary>
            主界面的提交按钮是否可见
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.Business.Maintenance_Settings.MainTab_ExecuteQueryOnLoad">
            <summary>
            主界面面加载时是否自动加载数据。
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.Business.Maintenance_Settings.MainTab_CustomButtons">
            <summary>
            用于定义主界面的自定义按钮。
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.Business.Maintenance_Settings.SupportSaveWithoutSubmit">
            <summary>
            支持 保存未提交 功能。
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.Business.Maintenance_Settings.CanSubmitUnChangedData">
            <summary>
            允许保存未更改过的数据
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.Business.Maintenance_Settings.ValidationFunctionBeforeSubmit">
            <summary>
            委托属性，请实现一个符合委托规则的验证方法，该方法用于在提交数据前对数据进行逐条检查，若返回错误，则在列表右侧出现提示供用户查看和定位。（可选）
            </summary>
        </member>
        <member name="E:NCS.UI.Controls.Business.Maintenance_Settings.MainTab_StartQuery">
            <summary>
            主界面要查询正式数据时触发。
            </summary>
        </member>
        <member name="F:NCS.UI.Controls.Business.Maintenance_Settings.MainTab_OverrideAddButtonAction">
            <summary>
            创建一个新增按钮点击后相关操作实现的函数，用于覆盖默认实现。默认实现是在当前DataGrid中新增一条行编辑数据。
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.Business.Maintenance_Settings.MainTab_FinishQuery(System.ComponentModel.AsyncCompletedEventArgs,System.Collections.IEnumerable,System.Int32)">
            <summary>
            查询正式数据完成时，调用该方法接受服务器返回的数据。
            </summary>
        </member>
        <member name="E:NCS.UI.Controls.Business.Maintenance_Settings.MainTab_Submit">
            <summary>
            主界面提交按钮被按下时触发。
            </summary>
        </member>
        <member name="E:NCS.UI.Controls.Business.Maintenance_Settings.MainTab_Save">
            <summary>
            主界面保存按钮按下时触发。
            </summary>
        </member>
        <member name="E:NCS.UI.Controls.Business.Maintenance_Settings.MainTab_CheckDataAlreadyInPendingList">
            <summary>
            主页面需要查询被提交的数据是否已经提交过时触发（可选，不实现该方法则不做此校验）
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.Business.Maintenance_Settings.MainTab_FinishCheckDataAlreadyInPending(System.ComponentModel.AsyncCompletedEventArgs,System.Boolean,System.Collections.IEnumerable)">
            <summary>
            当主界面提交时，调用检查被提交的数据是否在数据库中已存在后，通过此方法接受服务器返回结果，将根据结果决定提示用户或继续提交。
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.Business.Maintenance_Settings.MainTab_FinishSave(System.ComponentModel.AsyncCompletedEventArgs,System.Int32,System.Int32,System.Nullable{System.Boolean})">
            <summary>
            当点击主界面的保存按钮后，调用该方法接受服务器返回的结果。
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.Business.Maintenance_Settings.MainTab_FinishSubmit(System.ComponentModel.AsyncCompletedEventArgs,System.Int32,System.Int32,System.Nullable{System.Boolean})">
            <summary>
            当点击主界面的提交按钮后，调用该方法接受服务器返回的结果。
            </summary>
        </member>
        <member name="F:NCS.UI.Controls.Business.Maintenance_Settings.MainTab_InitializeNewAddData">
            <summary>
            在Main选项卡中，点击新增按钮时，提供为新增对象自动填充默认值的机会
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.Business.Maintenance_Settings.MainTab_QueryForm">
            <summary>
            在被执行Init方法后，可以通过该属性访问实际UI上的查询控件。
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.Business.DualControl_Settings.PendingTab_QueryConditionEntity">
            <summary>
            定义待批核页面的查询条件对象。（选填，若为空，则自动隐藏查询条件）
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.Business.DualControl_Settings.RepairTab_QueryConditionEntity">
            <summary>
            定义被拒批页面的查询条件对象。（选填，若为空，则自动隐藏查询条件）
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.Business.DualControl_Settings.CheckerTab_QueryCondtionEntity">
            <summary>
            定义批核页面的查询条件对象。
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.Business.DualControl_Settings.PendingTab_QueryOrderByProperty">
            <summary>
            待批核页面用于提供给用户排序的字段列表
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.Business.DualControl_Settings.RepairTab_QueryOrderByProperty">
            <summary>
            被拒批页面用于提供给用户排序的字段列表
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.Business.DualControl_Settings.CheckerTab_QueryOrderByProperty">
            <summary>
            批核页面用于提供给用户排序的字段列表
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.Business.DualControl_Settings.ShowRepairTab">
            <summary>
            Maker页面是否显示用于展示 被拒批数据 的Tab页，若隐藏，应该合并Repair和Pending两列表的逻辑和数据到Pending页中处理。
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.Business.DualControl_Settings.ShowMainTabForChecker">
            <summary>
            Checker审核控件中是否显示用于查询正式数据页的Tab页
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.Business.DualControl_Settings.ShowCheckerTabForMaker">
            <summary>
            Maker页面是否显示checker页面，用于交叉审批
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.Business.DualControl_Settings.PendingTab_ExportButtonVisibility">
            <summary>
            待批核页面是否显示导出按钮。
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.Business.DualControl_Settings.RepairTab_ExportButtonVisibility">
            <summary>
            被拒批页面是否显示导出按钮。
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.Business.DualControl_Settings.CheckerTab_ExportButtonVisibility">
            <summary>
            批核页面是否显示导出按钮。
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.Business.DualControl_Settings.RepairTab_CancelButtonVisibility">
            <summary>
            被拒批页的撤销按钮是否可见
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.Business.DualControl_Settings.RepairTab_SubmitButtonVisibility">
            <summary>
            被拒批页的重新提交按钮是否可见
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.Business.DualControl_Settings.PendingTab_ExecuteQueryOnLoad">
            <summary>
            待批核页面加载时是否自动加载数据。
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.Business.DualControl_Settings.RepairTab_ExecuteQueryOnLoad">
            <summary>
            被拒批页面加载时是否自动加载数据。
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.Business.DualControl_Settings.CheckerTab_ExecuteQueryOnLoad">
            <summary>
            批核页面加载时是否自动加载数据。
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.Business.DualControl_Settings.PendingTab_CustomButtons">
            <summary>
            用于定义待批核页的自定义按钮。
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.Business.DualControl_Settings.RepairTab_CustomButtons">
            <summary>
            用于定义被拒批页的自定义按钮。
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.Business.DualControl_Settings.CheckerTab_CustomButtons">
            <summary>
            用于定义批核页面的自定义按钮。
            </summary>
        </member>
        <member name="E:NCS.UI.Controls.Business.DualControl_Settings.PendingTab_StartQuery">
            <summary>
            待处理数据页查询待批核数据时触发。
            </summary>
        </member>
        <member name="E:NCS.UI.Controls.Business.DualControl_Settings.RepairTab_StartQuery">
            <summary>
            被拒批数据需要被查询正式数据时触发。
            </summary>
        </member>
        <member name="E:NCS.UI.Controls.Business.DualControl_Settings.CheckerTab_StartQuery">
            <summary>
            当需要查询Checker页面的待批核数据时触发。
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.Business.DualControl_Settings.PendingTab_FinishQuery(System.ComponentModel.AsyncCompletedEventArgs,System.Collections.IEnumerable,System.Int32)">
            <summary>
            查询待批核数据完成时，调用该方法接受服务器返回的数据。
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.Business.DualControl_Settings.RepairTab_FinishQuery(System.ComponentModel.AsyncCompletedEventArgs,System.Collections.IEnumerable,System.Int32)">
            <summary>
            查询被拒批数据完成时，调用该方法接受服务器返回的数据。
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.Business.DualControl_Settings.CheckerTab_FinishQuery(System.ComponentModel.AsyncCompletedEventArgs,System.Collections.IEnumerable,System.Int32)">
            <summary>
            当调用WCF的待审批数据查询完成时，调用该方法，将按默认逻辑做后续处理包括异常处理。
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.Business.DualControl_Settings.Compare_FinishQuery(System.ComponentModel.AsyncCompletedEventArgs,System.Collections.IEnumerable)">
            <summary>
            执行对比数据查询完成时，调用该方法，将自动为查找到可对比数据的行添加对比按钮和对比高亮。
            </summary>
        </member>
        <member name="E:NCS.UI.Controls.Business.DualControl_Settings.PendingTab_Submit">
            <summary>
            待处理数据页的提交按钮被按下时触发。
            </summary>
        </member>
        <member name="E:NCS.UI.Controls.Business.DualControl_Settings.PendingTab_Cancel">
            <summary>
            待处理数据页的撤销按钮被按下时触发。
            </summary>
        </member>
        <member name="E:NCS.UI.Controls.Business.DualControl_Settings.RepairTab_Submit">
            <summary>
            被拒批数据页的提交按钮被按下时触发。
            </summary>
        </member>
        <member name="E:NCS.UI.Controls.Business.DualControl_Settings.RepairTab_Cancel">
            <summary>
            被拒批数据页的撤销按钮被按下时触发。
            </summary>
        </member>
        <member name="E:NCS.UI.Controls.Business.DualControl_Settings.CheckerTab_Approve">
            <summary>
            当审核按钮被按下时触发。
            </summary>
        </member>
        <member name="E:NCS.UI.Controls.Business.DualControl_Settings.CheckerTab_Reject">
            <summary>
            当拒批按钮被按下时触发。
            </summary>
        </member>
        <member name="E:NCS.UI.Controls.Business.DualControl_Settings.Query_CompareData">
            <summary>
            当需要查询pending数据的用于对比的正式数据时触发。
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.Business.DualControl_Settings.PendingTab_FinishSubmit(System.ComponentModel.AsyncCompletedEventArgs,System.Nullable{System.Boolean})">
            <summary>
            当待批核数据页的提交按钮点击后，调用该方法接受服务器返回的结果。（仅支持保存未提交时有效）
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.Business.DualControl_Settings.PendingTab_FinishCancel(System.ComponentModel.AsyncCompletedEventArgs,System.Nullable{System.Boolean})">
            <summary>
            当待批核数据页的撤销按钮点击后，调用该方法接受服务器返回的结果。（仅支持保存未提交时有效）
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.Business.DualControl_Settings.RepairTab_FinishSubmit(System.ComponentModel.AsyncCompletedEventArgs,System.Nullable{System.Boolean})">
            <summary>
            当被拒批数据页的提交按钮点击后，调用该方法接受服务器返回的结果。
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.Business.DualControl_Settings.RepairTab_FinishCancel(System.ComponentModel.AsyncCompletedEventArgs,System.Nullable{System.Boolean})">
            <summary>
            当被拒批数据页的撤销按钮点击后，调用该方法接受服务器返回的结果。
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.Business.DualControl_Settings.CheckerTab_FinishApprove(System.ComponentModel.AsyncCompletedEventArgs,System.Nullable{System.Boolean})">
            <summary>
            当调用WCF的审批操作完成时，调用该方法，将按默认逻辑做后续处理包括异常处理。
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.Business.DualControl_Settings.CheckerTab_FinishReject(System.ComponentModel.AsyncCompletedEventArgs,System.Nullable{System.Boolean})">
            <summary>
            当调用WCF的拒批操作完成时，调用该方法，将按默认逻辑做后续处理包括异常处理。
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.Business.DualControl_Settings.PendingTab_QueryForm">
            <summary>
            在被执行Init方法后，可以通过该属性访问实际UI上的查询控件。
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.Business.DualControl_Settings.RepairTab_QueryForm">
            <summary>
            在被执行Init方法后，可以通过该属性访问实际UI上的查询控件。
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.Business.DualControl_Settings.CheckerTab_QueryForm">
            <summary>
            在被执行Init方法后，可以通过该属性访问实际UI上的查询控件。
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.Business.DualControl_Settings.CompareList">
            <summary>
            用于暂存需要查询对比数据的列表，开发人员不必关心该属性
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.Business.DualControl_Maker_3Tab.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.Business.SimpleMaintenance.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:NCS.UI.Controls.ContextMenuReplacement.ContextMenu2">
            <summary>
            Represents a pop-up menu that enables a control to expose functionality that is specific to the context of the control.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:NCS.UI.Controls.ContextMenuReplacement.ContextMenu2._rootVisual">
            <summary>
            Stores a reference to the current root visual.
            </summary>
        </member>
        <member name="F:NCS.UI.Controls.ContextMenuReplacement.ContextMenu2._mousePosition">
            <summary>
            Stores the last known mouse position (via MouseMove).
            </summary>
        </member>
        <member name="F:NCS.UI.Controls.ContextMenuReplacement.ContextMenu2._owner">
            <summary>
            Stores a reference to the object that owns the ContextMenu.
            </summary>
        </member>
        <member name="F:NCS.UI.Controls.ContextMenuReplacement.ContextMenu2._popup">
            <summary>
            Stores a reference to the current Popup.
            </summary>
        </member>
        <member name="F:NCS.UI.Controls.ContextMenuReplacement.ContextMenu2._overlay">
            <summary>
            Stores a reference to the current overlay.
            </summary>
        </member>
        <member name="F:NCS.UI.Controls.ContextMenuReplacement.ContextMenu2._popupAlignmentPoint">
            <summary>
            Stores a reference to the current Popup alignment point.
            </summary>
        </member>
        <member name="F:NCS.UI.Controls.ContextMenuReplacement.ContextMenu2._settingIsOpen">
            <summary>
            Stores a value indicating whether the IsOpen property is being updated by ContextMenu.
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.ContextMenuReplacement.ContextMenu2.Owner">
            <summary>
            Gets or sets the owning object for the ContextMenu.
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.ContextMenuReplacement.ContextMenu2.HorizontalOffset">
            <summary>
            Gets or sets the horizontal distance between the target origin and the popup alignment point.
            </summary>
        </member>
        <member name="F:NCS.UI.Controls.ContextMenuReplacement.ContextMenu2.HorizontalOffsetProperty">
            <summary>
            Identifies the HorizontalOffset dependency property.
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.ContextMenuReplacement.ContextMenu2.VerticalOffset">
            <summary>
            Gets or sets the vertical distance between the target origin and the popup alignment point.
            </summary>
        </member>
        <member name="F:NCS.UI.Controls.ContextMenuReplacement.ContextMenu2.VerticalOffsetProperty">
            <summary>
            Identifies the VerticalOffset dependency property.
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.ContextMenuReplacement.ContextMenu2.OnHorizontalVerticalOffsetChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the HorizontalOffset or VerticalOffset DependencyProperty.
            </summary>
            <param name="o">DependencyObject that changed.</param>
            <param name="e">Event data for the DependencyPropertyChangedEvent.</param>
        </member>
        <member name="P:NCS.UI.Controls.ContextMenuReplacement.ContextMenu2.IsOpen">
            <summary>
            Gets or sets a value indicating whether the ContextMenu is visible.
            </summary>
        </member>
        <member name="F:NCS.UI.Controls.ContextMenuReplacement.ContextMenu2.IsOpenProperty">
            <summary>
            Identifies the IsOpen dependency property.
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.ContextMenuReplacement.ContextMenu2.OnIsOpenChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the IsOpen DependencyProperty.
            </summary>
            <param name="o">DependencyObject that changed.</param>
            <param name="e">Event data for the DependencyPropertyChangedEvent.</param>
        </member>
        <member name="M:NCS.UI.Controls.ContextMenuReplacement.ContextMenu2.OnIsOpenChanged(System.Boolean,System.Boolean)">
            <summary>
            Handles changes to the IsOpen property.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="newValue">New value.</param>
        </member>
        <member name="E:NCS.UI.Controls.ContextMenuReplacement.ContextMenu2.Opened">
            <summary>
            Occurs when a particular instance of a ContextMenu opens.
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.ContextMenuReplacement.ContextMenu2.OnOpened(System.Windows.RoutedEventArgs)">
            <summary>
            Called when the Opened event occurs.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="E:NCS.UI.Controls.ContextMenuReplacement.ContextMenu2.Closed">
            <summary>
            Occurs when a particular instance of a ContextMenu closes.
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.ContextMenuReplacement.ContextMenu2.OnClosed(System.Windows.RoutedEventArgs)">
            <summary>
            Called when the Closed event occurs.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:NCS.UI.Controls.ContextMenuReplacement.ContextMenu2.#ctor">
            <summary>
            Initializes a new instance of the ContextMenu class.
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.ContextMenuReplacement.ContextMenu2.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when the left mouse button is pressed.
            </summary>
            <param name="e">The event data for the MouseLeftButtonDown event.</param>
        </member>
        <member name="M:NCS.UI.Controls.ContextMenuReplacement.ContextMenu2.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when the right mouse button is pressed.
            </summary>
            <param name="e">The event data for the MouseRightButtonDown event.</param>
        </member>
        <member name="M:NCS.UI.Controls.ContextMenuReplacement.ContextMenu2.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Responds to the KeyDown event.
            </summary>
            <param name="e">The event data for the KeyDown event.</param>
        </member>
        <member name="M:NCS.UI.Controls.ContextMenuReplacement.ContextMenu2.HandleLayoutUpdated(System.Object,System.EventArgs)">
            <summary>
            Handles the LayoutUpdated event to capture Application.Current.RootVisual.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:NCS.UI.Controls.ContextMenuReplacement.ContextMenu2.HandleRootVisualMouseMove(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Handles the RootVisual's MouseMove event to track the last mouse position.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:NCS.UI.Controls.ContextMenuReplacement.ContextMenu2.HandleOwnerMouseRightButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Handles the MouseRightButtonDown event for the owning element.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:NCS.UI.Controls.ContextMenuReplacement.ContextMenu2.InitializeRootVisual">
            <summary>
            Initialize the _rootVisual property (if possible and not already done).
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.ContextMenuReplacement.ContextMenu2.FocusNextItem(System.Boolean)">
            <summary>
            Sets focus to the next item in the ContextMenu.
            </summary>
            <param name="down">True to move the focus down; false to move it up.</param>
        </member>
        <member name="M:NCS.UI.Controls.ContextMenuReplacement.ContextMenu2.ChildMenuItemClicked">
            <summary>
            Called when a child MenuItem is clicked.
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.ContextMenuReplacement.ContextMenu2.HandleContextMenuOrRootVisualSizeChanged(System.Object,System.Windows.SizeChangedEventArgs)">
            <summary>
            Handles the SizeChanged event for the ContextMenu or RootVisual.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:NCS.UI.Controls.ContextMenuReplacement.ContextMenu2.HandleOverlayMouseButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Handles the MouseButtonDown events for the overlay.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:NCS.UI.Controls.ContextMenuReplacement.ContextMenu2.UpdateContextMenuPlacement">
            <summary>
            Updates the location and size of the Popup and overlay.
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.ContextMenuReplacement.ContextMenu2.OpenPopup(System.Windows.Point)">
            <summary>
            Opens the Popup.
            </summary>
            <param name="position">Position to place the Popup.</param>
        </member>
        <member name="M:NCS.UI.Controls.ContextMenuReplacement.ContextMenu2.ClosePopup">
            <summary>
            Closes the Popup.
            </summary>
        </member>
        <member name="T:NCS.UI.Controls.ContextMenuReplacement.ContextMenuService2">
            <summary>
            Provides the system implementation for displaying a ContextMenu.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:NCS.UI.Controls.ContextMenuReplacement.ContextMenuService2.GetContextMenu(System.Windows.DependencyObject)">
            <summary>
            Gets the value of the ContextMenu property of the specified object.
            </summary>
            <param name="obj">Object to query concerning the ContextMenu property.</param>
            <returns>Value of the ContextMenu property.</returns>
        </member>
        <member name="M:NCS.UI.Controls.ContextMenuReplacement.ContextMenuService2.SetContextMenu(System.Windows.DependencyObject,NCS.UI.Controls.ContextMenuReplacement.ContextMenu2)">
            <summary>
            Sets the value of the ContextMenu property of the specified object.
            </summary>
            <param name="obj">Object to set the property on.</param>
            <param name="value">Value to set.</param>
        </member>
        <member name="F:NCS.UI.Controls.ContextMenuReplacement.ContextMenuService2.ContextMenuProperty">
            <summary>
            Identifies the ContextMenu attached property.
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.ContextMenuReplacement.ContextMenuService2.OnContextMenuChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the ContextMenu DependencyProperty.
            </summary>
            <param name="o">DependencyObject that changed.</param>
            <param name="e">Event data for the DependencyPropertyChangedEvent.</param>
        </member>
        <member name="T:NCS.UI.Controls.ContextMenuReplacement.MenuBase2">
            <summary>
            Represents a control that defines choices for users to select.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="P:NCS.UI.Controls.ContextMenuReplacement.MenuBase2.ItemContainerStyle">
            <summary>
            Gets or sets the Style that is applied to the container element generated for each item.
            </summary>
        </member>
        <member name="F:NCS.UI.Controls.ContextMenuReplacement.MenuBase2.ItemContainerStyleProperty">
            <summary>
            Identifies the ItemContainerStyle dependency property.
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.ContextMenuReplacement.MenuBase2.#ctor">
            <summary>
            Initializes a new instance of the MenuBase class.
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.ContextMenuReplacement.MenuBase2.IsItemItsOwnContainerOverride(System.Object)">
            <summary>
            Determines whether the specified item is, or is eligible to be, its own item container.
            </summary>
            <param name="item">The item to check whether it is an item container.</param>
            <returns>True if the item is a MenuItem or a Separator; otherwise, false.</returns>
        </member>
        <member name="M:NCS.UI.Controls.ContextMenuReplacement.MenuBase2.GetContainerForItemOverride">
            <summary>
            Creates or identifies the element used to display the specified item.
            </summary>
            <returns>A MenuItem.</returns>
        </member>
        <member name="M:NCS.UI.Controls.ContextMenuReplacement.MenuBase2.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
            <summary>
            Prepares the specified element to display the specified item.
            </summary>
            <param name="element">Element used to display the specified item.</param>
            <param name="item">Specified item.</param>
        </member>
        <member name="M:NCS.UI.Controls.ContextMenuReplacement.MenuBase2.HasDefaultValue(System.Windows.Controls.Control,System.Windows.DependencyProperty)">
            <summary>
            Checks whether a control has the default value for a property.
            </summary>
            <param name="control">The control to check.</param>
            <param name="property">The property to check.</param>
            <returns>True if the property has the default value; false otherwise.</returns>
        </member>
        <member name="T:NCS.UI.Controls.ContextMenuReplacement.MenuItem2">
            <summary>
            Represents a selectable item inside a Menu or ContextMenu.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="E:NCS.UI.Controls.ContextMenuReplacement.MenuItem2.Click">
            <summary>
            Occurs when a MenuItem is clicked.
            </summary>
        </member>
        <member name="F:NCS.UI.Controls.ContextMenuReplacement.MenuItem2._isFocused">
            <summary>
            Stores a value indicating whether this element has logical focus.
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.ContextMenuReplacement.MenuItem2.ParentMenuBase">
            <summary>
            Gets or sets a reference to the MenuBase parent.
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.ContextMenuReplacement.MenuItem2.Command">
            <summary>
            Gets or sets the command associated with the menu item.
            </summary>
        </member>
        <member name="F:NCS.UI.Controls.ContextMenuReplacement.MenuItem2.CommandProperty">
            <summary>
            Identifies the Command dependency property.
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.ContextMenuReplacement.MenuItem2.OnCommandChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the Command DependencyProperty.
            </summary>
            <param name="o">DependencyObject that changed.</param>
            <param name="e">Event data for the DependencyPropertyChangedEvent.</param>
        </member>
        <member name="M:NCS.UI.Controls.ContextMenuReplacement.MenuItem2.OnCommandChanged(System.Windows.Input.ICommand,System.Windows.Input.ICommand)">
            <summary>
            Handles changes to the Command property.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="newValue">New value.</param>
        </member>
        <member name="P:NCS.UI.Controls.ContextMenuReplacement.MenuItem2.CommandParameter">
            <summary>
            Gets or sets the parameter to pass to the Command property of a MenuItem.
            </summary>
        </member>
        <member name="F:NCS.UI.Controls.ContextMenuReplacement.MenuItem2.CommandParameterProperty">
            <summary>
            Identifies the CommandParameter dependency property.
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.ContextMenuReplacement.MenuItem2.OnCommandParameterChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the CommandParameter DependencyProperty.
            </summary>
            <param name="o">DependencyObject that changed.</param>
            <param name="e">Event data for the DependencyPropertyChangedEvent.</param>
        </member>
        <member name="M:NCS.UI.Controls.ContextMenuReplacement.MenuItem2.OnCommandParameterChanged(System.Object,System.Object)">
            <summary>
            Handles changes to the CommandParameter property.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="newValue">New value.</param>
        </member>
        <member name="P:NCS.UI.Controls.ContextMenuReplacement.MenuItem2.Icon">
            <summary>
            Gets or sets the icon that appears in a MenuItem.
            </summary>
        </member>
        <member name="F:NCS.UI.Controls.ContextMenuReplacement.MenuItem2.IconProperty">
            <summary>
            Identifies the Icon dependency property.
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.ContextMenuReplacement.MenuItem2.#ctor">
            <summary>
            Initializes a new instance of the MenuItem class.
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.ContextMenuReplacement.MenuItem2.OnApplyTemplate">
            <summary>
            Called when the template's tree is generated.
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.ContextMenuReplacement.MenuItem2.OnGotFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Invoked whenever an unhandled GotFocus event reaches this element in its route.
            </summary>
            <param name="e">A RoutedEventArgs that contains event data.</param>
        </member>
        <member name="M:NCS.UI.Controls.ContextMenuReplacement.MenuItem2.OnLostFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Raises the LostFocus routed event by using the event data that is provided.
            </summary>
            <param name="e">A RoutedEventArgs that contains event data.</param>
        </member>
        <member name="M:NCS.UI.Controls.ContextMenuReplacement.MenuItem2.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called whenever the mouse enters a MenuItem.
            </summary>
            <param name="e">The event data for the MouseEnter event.</param>
        </member>
        <member name="M:NCS.UI.Controls.ContextMenuReplacement.MenuItem2.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called whenever the mouse leaves a MenuItem.
            </summary>
            <param name="e">The event data for the MouseLeave event.</param>
        </member>
        <member name="M:NCS.UI.Controls.ContextMenuReplacement.MenuItem2.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when the left mouse button is pressed.
            </summary>
            <param name="e">The event data for the MouseLeftButtonDown event.</param>
        </member>
        <member name="M:NCS.UI.Controls.ContextMenuReplacement.MenuItem2.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when the right mouse button is pressed.
            </summary>
            <param name="e">The event data for the MouseRightButtonDown event.</param>
        </member>
        <member name="M:NCS.UI.Controls.ContextMenuReplacement.MenuItem2.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Responds to the KeyDown event.
            </summary>
            <param name="e">The event data for the KeyDown event.</param>
        </member>
        <member name="M:NCS.UI.Controls.ContextMenuReplacement.MenuItem2.OnClick">
            <summary>
            Called when a MenuItem is clicked and raises a Click event.
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.ContextMenuReplacement.MenuItem2.HandleCanExecuteChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the CanExecuteChanged event of the Command property.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:NCS.UI.Controls.ContextMenuReplacement.MenuItem2.UpdateIsEnabled">
            <summary>
            Updates the IsEnabled property.
            </summary>
            <remarks>
            WPF overrides the local value of IsEnabled according to ICommand, so Silverlight does, too.
            </remarks>
        </member>
        <member name="M:NCS.UI.Controls.ContextMenuReplacement.MenuItem2.ChangeVisualState(System.Boolean)">
            <summary>
            Changes to the correct visual state(s) for the control.
            </summary>
            <param name="useTransitions">True to use transitions; otherwise false.</param>
        </member>
        <member name="P:NCS.UI.Controls.IDataBindControl.DataObject">
            <summary>
            用于数据绑定的属性
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.IDataBindControl.OnDataObjectChanged(System.Object,System.Object)">
            <summary>
            当绑定对象变更时触发，可以在这里更新UI元素如Content显示内容以及其他业务逻辑。
            </summary>
            <param name="dataobject"></param>
        </member>
        <member name="M:NCS.UI.Controls.IDataBindControl.OnDataObjectPropertyChanged(System.Object,System.String)">
            <summary>
            当绑定的对象的属性发生变化时触发，被绑定的对象必须实现了INotifyPropertyChanged接口后，本方法才会被触发。
            </summary>
            <param name="propertyName">被更改的属性名</param>
        </member>
        <member name="T:NCS.UI.Controls.DataBindButton">
            <summary>
            主要针对在DataGridEx中使用的按钮列准备的抽象类，只需实现OnDataObjectChanged方法。在DataGridEx中，绑定本控件的DataObject属性，并在OnDataObjectChanged方法中更新UI元素和业务逻辑。
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.DataBindButton.OnDataObjectChanged(System.Object,System.Object)">
            <summary>
            当绑定对象变更时触发，可以在这里更新UI元素如Content显示内容以及其他业务逻辑。
            </summary>
            <param name="dataobject"></param>
        </member>
        <member name="F:NCS.UI.Controls.DataBindButton.DataObjectProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.DataBindButton.OnDataObjectPropertyChanged(System.Object,System.String)">
            <summary>
            当绑定的对象的属性发生变化时触发，被绑定的对象必须实现了INotifyPropertyChanged接口后，本方法才会被触发。
            </summary>
            <param name="propertyName">被更改的属性名</param>
        </member>
        <member name="P:NCS.UI.Controls.DataBindButton.DataObject">
            <summary>
            用于数据绑定的属性
            </summary>
        </member>
        <member name="T:NCS.UI.Controls.DataBindLabel">
            <summary>
            主要针对在DataGridEx中使用的标签列准备的抽象类，只需实现OnDataObjectChanged方法。在DataGridEx中，绑定本控件的DataObject属性，并在OnDataObjectChanged方法中更新UI元素和业务逻辑。
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.DataBindLabel.OnDataObjectChanged(System.Object,System.Object)">
            <summary>
            当绑定对象变更时触发，可以在这里更新UI元素如Content显示内容以及其他业务逻辑。
            </summary>
            <param name="dataobject"></param>
        </member>
        <member name="F:NCS.UI.Controls.DataBindLabel.DataObjectProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.DataBindLabel.OnDataObjectPropertyChanged(System.Object,System.String)">
            <summary>
            当绑定的对象的属性发生变化时触发，被绑定的对象必须实现了INotifyPropertyChanged接口后，本方法才会被触发。
            </summary>
            <param name="propertyName">被更改的属性名</param>
        </member>
        <member name="P:NCS.UI.Controls.DataBindLabel.DataObject">
            <summary>
            用于数据绑定的属性
            </summary>
        </member>
        <member name="T:NCS.UI.Controls.DataBindContentControl">
            <summary>
            主要针对在DataGridEx中使用的任意控件列准备的抽象类，只需实现OnDataObjectChanged方法。在DataGridEx中，绑定本控件的DataObject属性，并在OnDataObjectChanged方法中更新UI元素和业务逻辑。
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.DataBindContentControl.OnDataObjectChanged(System.Object,System.Object)">
            <summary>
            当绑定对象变更时触发，可以在这里更新UI元素如Content显示内容以及其他业务逻辑。
            </summary>
            <param name="dataobject"></param>
        </member>
        <member name="F:NCS.UI.Controls.DataBindContentControl.DataObjectProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.DataBindContentControl.OnDataObjectPropertyChanged(System.Object,System.String)">
            <summary>
            当绑定的对象的属性发生变化时触发，被绑定的对象必须实现了INotifyPropertyChanged接口后，本方法才会被触发。
            </summary>
            <param name="propertyName">被更改的属性名</param>
        </member>
        <member name="P:NCS.UI.Controls.DataBindContentControl.DataObject">
            <summary>
            用于数据绑定的属性
            </summary>
        </member>
        <member name="T:NCS.UI.Controls.DataBindCheckBox">
            <summary>
            主要针对在DataGridEx中使用的需要操作多个属性的checkbox列准备的抽象类，只需实现OnDataObjectChanged方法。在DataGridEx中，绑定本控件的DataObject属性，并在OnDataObjectChanged方法中更新UI元素和业务逻辑。
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.DataBindCheckBox.OnDataObjectChanged(System.Object,System.Object)">
            <summary>
            当绑定对象变更时触发，可以在这里更新UI元素如Content显示内容以及其他业务逻辑。
            </summary>
            <param name="dataobject"></param>
        </member>
        <member name="F:NCS.UI.Controls.DataBindCheckBox.DataObjectProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.DataBindCheckBox.OnDataObjectPropertyChanged(System.Object,System.String)">
            <summary>
            当绑定的对象的属性发生变化时触发，被绑定的对象必须实现了INotifyPropertyChanged接口后，本方法才会被触发。
            </summary>
            <param name="propertyName">被更改的属性名</param>
        </member>
        <member name="P:NCS.UI.Controls.DataBindCheckBox.DataObject">
            <summary>
            用于数据绑定的属性
            </summary>
        </member>
        <member name="T:NCS.UI.Controls.DataBindGrid">
            <summary>
            主要针对在DataGridEx中，为单元格背景做特殊处理准备的抽象类，只需实现OnDataObjectChanged方法。在DataGridEx中，绑定本控件的DataObject属性，并在OnDataObjectChanged方法中更新UI元素和业务逻辑，可以通过DataGridViewAttribute的PanelType指定。
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.DataBindGrid.DataObject">
            <summary>
            用于数据绑定的属性
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.DataBindGrid.OnDataObjectPropertyChanged(System.Object,System.String)">
            <summary>
            当绑定的对象的属性发生变化时触发，被绑定的对象必须实现了INotifyPropertyChanged接口后，本方法才会被触发。
            </summary>
            <param name="propertyName">被更改的属性名</param>
        </member>
        <member name="M:NCS.UI.Controls.DataBindGrid.OnDataObjectChanged(System.Object,System.Object)">
            <summary>
            当绑定对象变更时触发，可以在这里更新UI元素如Content显示内容以及其他业务逻辑。
            </summary>
            <param name="newDataObject">新的数据对象</param>
            <param name="oldDataObject">被替换前的数据对象</param>
        </member>
        <member name="M:NCS.UI.Controls.DataBindGrid.HighlightColor(NCS.View.EntityViewBase)">
            <summary>
            根据传入的参数，决定是否高亮显示数据行
            </summary>
            <param name="item"></param>
        </member>
        <member name="T:NCS.UI.Controls.DataBindStackPanel">
            <summary>
            主要针对在DataGridEx中，为单元格背景做特殊处理准备的抽象类，只需实现OnDataObjectChanged方法。在DataGridEx中，绑定本控件的DataObject属性，并在OnDataObjectChanged方法中更新UI元素和业务逻辑，可以通过DataGridViewAttribute的PanelType指定。
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.DataBindStackPanel.DataObject">
            <summary>
            用于数据绑定的属性
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.DataBindStackPanel.OnDataObjectPropertyChanged(System.Object,System.String)">
            <summary>
            当绑定的对象的属性发生变化时触发，被绑定的对象必须实现了INotifyPropertyChanged接口后，本方法才会被触发。
            </summary>
            <param name="propertyName">被更改的属性名</param>
        </member>
        <member name="M:NCS.UI.Controls.DataBindStackPanel.OnDataObjectChanged(System.Object,System.Object)">
            <summary>
            当绑定对象变更时触发，可以在这里更新UI元素如Content显示内容以及其他业务逻辑。
            </summary>
            <param name="newDataObject">新的数据对象</param>
            <param name="oldDataObject">被替换前的数据对象</param>
        </member>
        <member name="M:NCS.UI.Controls.DataBindStackPanel.HighlightColor(NCS.View.EntityViewBase)">
            <summary>
            根据传入的参数，决定是否高亮显示数据行
            </summary>
            <param name="item"></param>
        </member>
        <member name="T:NCS.UI.Controls.DataBindCanvas">
            <summary>
            主要针对在DataGridEx中，为单元格背景做特殊处理准备的抽象类，只需实现OnDataObjectChanged方法。在DataGridEx中，绑定本控件的DataObject属性，并在OnDataObjectChanged方法中更新UI元素和业务逻辑，可以通过DataGridViewAttribute的PanelType指定。
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.DataBindCanvas.DataObject">
            <summary>
            用于数据绑定的属性
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.DataBindCanvas.OnDataObjectPropertyChanged(System.Object,System.String)">
            <summary>
            当绑定的对象的属性发生变化时触发，被绑定的对象必须实现了INotifyPropertyChanged接口后，本方法才会被触发。
            </summary>
            <param name="propertyName">被更改的属性名</param>
        </member>
        <member name="M:NCS.UI.Controls.DataBindCanvas.OnDataObjectChanged(System.Object,System.Object)">
            <summary>
            当绑定对象变更时触发，可以在这里更新UI元素如Content显示内容以及其他业务逻辑。
            </summary>
            <param name="newDataObject">新的数据对象</param>
            <param name="oldDataObject">被替换前的数据对象</param>
        </member>
        <member name="M:NCS.UI.Controls.DataBindCanvas.HighlightColor(NCS.View.EntityViewBase)">
            <summary>
            根据传入的参数，决定是否高亮显示数据行
            </summary>
            <param name="item"></param>
        </member>
        <member name="T:NCS.UI.Controls.DataGridEx">
            <summary>
            做额外功能封装的DataGrid
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.DataGridEx.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.DataGridEx.IsCheckedAll">
            <summary>
            获取或设置全选按钮的状态
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.DataGridEx.BuildColumnTemplates(System.Type,System.String,System.Boolean)">
            <summary>
            根据实体类定义和各个属性的Attribute约束（NCS.View.DataGrid相关Attribute和DisplayAttribute/DisplayFormatAttribute），生成Column模板
            </summary>
            <param name="entityType">实体类类型</param>
        </member>
        <member name="M:NCS.UI.Controls.DataGridEx.GetColumn(System.String)">
            <summary>
            根据属性名/列名，获取相应的Column对象，只对通过BuildColumnTemplates方法创建的Column有效
            </summary>
            <param name="columnProperty">属性名/列名</param>
            <returns>Column对象</returns>
        </member>
        <member name="M:NCS.UI.Controls.DataGridEx.GetColumn(C1.Silverlight.DataGrid.DataGridColumn)">
            <summary>
            根据Column对象，获取相应的属性名/列名，只对通过BuildColumnTemplates方法创建的Column有效
            </summary>
            <param name="column">Column对象</param>
            <returns>属性名/列名</returns>
        </member>
        <member name="P:NCS.UI.Controls.DataGridEx.CheckColumnVisibility">
            <summary>
            用于动态检查列可见性的方法委托，只对于DisplayAttribute.AutoGenerateField=True且AutoGenerateVisitily.DataGridExVisitily=True的列有效
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.DataGridEx.CheckCellEditable">
            <summary>
            用于检查单个单元格是否可编辑的方法委托，对于一列中，部分可编辑的情况，可以使用本方法处理。第一个参数是列名，第二个参数是指定的行绑定的数据上下文
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.DataGridEx._DefaultCheckCellEditable(System.String,System.Object,NCS.UI.Controls.DataGridEx)">
            <summary>
            默认的检查单元格是否可编辑的逻辑
            </summary>
            <param name="propertyName">当前触发的属性名</param>
            <param name="data">当前出发的数据对象</param>
            <param name="dg">当前出发的DataGrid对象</param>
            <returns>是否可以编辑</returns>
        </member>
        <member name="M:NCS.UI.Controls.DataGridEx.SetColumnsReadOnly(System.String[],System.Boolean)">
            <summary>
            设置列是否只读
            </summary>
            <param name="columns">列名列表</param>
            <param name="isreadonly">是否设置为只读</param>
        </member>
        <member name="M:NCS.UI.Controls.DataGridEx.GetCell(System.String,System.Object)">
            <summary>
            获取一个Cell，获取后可以用于指定单元格颜色等
            </summary>
            <param name="column">列名</param>
            <param name="rowdata">指定数据行绑定的对象</param>
            <returns>DataGridCell，若获取不到则返回null</returns>
        </member>
        <member name="M:NCS.UI.Controls.DataGridEx.GotoCell(System.String,System.Object)">
            <summary>
            将制定的单元格防止到可见区域
            </summary>
            <param name="columnname">列名</param>
            <param name="rowdata">指定数据行绑定的对象</param>
        </member>
        <member name="M:NCS.UI.Controls.DataGridEx.AddValidationSummaryItem(System.String,System.Object,System.String)">
            <summary>
            添加一条验证错误信息，建议使用ValidationItem方法
            </summary>
            <param name="fieldName">发生错误的字段</param>
            <param name="errorMessage">错误信息</param>
        </member>
        <member name="M:NCS.UI.Controls.DataGridEx.RemoveValidationSummaryItem(System.String,System.Object,System.String)">
            <summary>
            移除验证错误信息，建议使用ValidationItem方法
            </summary>
            <param name="fieldName">发生错误的字段</param>
            <param name="errorMessage">错误信息</param>
        </member>
        <member name="M:NCS.UI.Controls.DataGridEx.ValidationItem(System.String,System.Boolean,System.String)">
            <summary>
            根据valid的属性，决定是添加还是移除验证错误信息
            </summary>
            <param name="fieldName">发生错误验证的字段</param>
            <param name="valid">是否通过验证</param>
            <param name="errorMessage">错误信息</param>
        </member>
        <member name="M:NCS.UI.Controls.DataGridEx.Remove``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            将数据的OperatorType字段设置为Delete，但不真正从列表中去除数据，若数据的状态是Add，则直接从列表中删除这条记录
            </summary>
            <typeparam name="T"></typeparam>
            <param name="data"></param>
        </member>
        <member name="M:NCS.UI.Controls.DataGridEx.RemoveFromList``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            将数据从列表中移除
            </summary>
            <typeparam name="T"></typeparam>
            <param name="data"></param>
        </member>
        <member name="M:NCS.UI.Controls.DataGridEx.HasUnsavedData``1">
            <summary>
            返回当前列表中的是否包含修改过但没有提交过的数据；判断逻辑是：数据是否调用过Snapshot方法，如果数据实现了IDataGridExUndoColumnDefinition接口，OperatorType状态是否是增删改状态之一。
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:NCS.UI.Controls.MergeExtensions.FreezingSection(C1.Silverlight.DataGrid.C1DataGrid,C1.Silverlight.DataGrid.DataGridCell)">
            <summary>
            Returns a value different value for each viewport section (having freezing into account).
            The matrix is defined as follows, to facilitate calculations.
            
                -5  |  -3  |  -1
               -------------------
                -2  |   0  |   2
                -------------------
                 1  |   3  |   5
            </summary>
            <param name="datagrid"></param>
            <param name="cell"></param>
            <returns></returns>
        </member>
        <member name="P:NCS.UI.Controls.DetailButton.DetailWindowTypeFullName">
            <summary>
            可自定义Detail窗口，建议是继承自Private.DetailWindow的窗口，或普通ChildWindow（需要无参构造）
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.Private.DetailWindow.OnBottomPanelChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            扩展底部额外的控件
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.Private.DynamicQuery.OperatorCombobox.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.Private.DynamicQuery.DynamicQueryConditionItem.Operator">
            <summary>
            操作符
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.Private.DynamicQuery.DynamicQueryConditionItem.Value2">
            <summary>
            条件值2，主要用于数值区间（Between操作符）
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.Private.RejectReason.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.Private.VerionWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.Private.SubmitComment.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:NCS.UI.Controls.Private.SortTypeButton">
            <summary>
            用于描述和控制升序降序的按钮，OrderByOption控件使用的特殊类型（由于需要在动态xaml中声明，必须声明为public），请勿使用。
            </summary>
        </member>
        <member name="F:NCS.UI.Controls.Private.SortTypeButton.SortTypeProperty">
            <summary>
            用于描述排序类型的属性定义
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.Private.SortTypeButton.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.Private.SortTypeButton.SortType">
            <summary>
            获取或设置排序类型
            </summary>
        </member>
        <member name="T:NCS.UI.Controls.ComboBoxEnum`1">
            <summary>
            用于填充枚举类型的下拉框控件
            </summary>
            <typeparam name="T">枚举类型</typeparam>
        </member>
        <member name="M:NCS.UI.Controls.ComboBoxEnum`1.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="T:NCS.UI.Controls.ComboBoxEnumConverter`2">
            <summary>
            用于填充枚举类型的下拉框控件
            </summary>
            <typeparam name="T">枚举类型</typeparam>
            <typeparam name="C">转换器，需继承自 DataBind.EnumConverter</typeparam>
        </member>
        <member name="M:NCS.UI.Controls.ComboBoxEnumConverter`2.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="T:NCS.UI.Controls.CompareValueField">
            <summary>
            对比展示控件
            </summary>
        </member>
        <member name="F:NCS.UI.Controls.CompareValueField.CompareEntityProperty">
            <summary>
            用于表示对比对象的属性定义
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.CompareValueField.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.CompareValueField.CompareEntity">
            <summary>
            对比对象
            </summary>
        </member>
        <member name="T:NCS.UI.Controls.DatePickerWithPropertyChangedNotify">
            <summary>
            Value更新时会触发PropertyChanged的DatePicker控件
            </summary>
        </member>
        <member name="E:NCS.UI.Controls.DatePickerWithPropertyChangedNotify.PropertyChanged">
            <summary>
            当属性改变时触发
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.DatePickerWithPropertyChangedNotify.OnPropertyChanged(System.String)">
            <summary>
            触发PropertyChanged事件
            </summary>
            <param name="property"></param>
        </member>
        <member name="M:NCS.UI.Controls.DatePickerWithPropertyChangedNotify.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.DatePickerWithPropertyChangedNotify.SetDateRange(System.DateTime,System.DateTime)">
            <summary>
            设置日期区间
            </summary>
            <param name="min">最小值</param>
            <param name="max">最大值</param>
        </member>
        <member name="T:NCS.UI.Controls.NumericUpDownWithPropertyChangedNotify">
            <summary>
            Value更新时会触发PropertyChanged的NumericUpDown控件
            </summary>
        </member>
        <member name="E:NCS.UI.Controls.NumericUpDownWithPropertyChangedNotify.PropertyChanged">
            <summary>
            当属性改变时触发
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.NumericUpDownWithPropertyChangedNotify.OnPropertyChanged(System.String)">
            <summary>
            触发PropertyChanged事件
            </summary>
            <param name="property"></param>
        </member>
        <member name="M:NCS.UI.Controls.NumericUpDownWithPropertyChangedNotify.OnValueChanged(System.Windows.RoutedPropertyChangedEventArgs{System.Double})">
            <summary>
            当值变化时
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NCS.UI.Controls.NumericUpDownWithPropertyChangedNotify.SetNumberRange(System.Double,System.Double)">
            <summary>
            设置数值区间
            </summary>
            <param name="min">最小值</param>
            <param name="max">最大值</param>
        </member>
        <member name="T:NCS.UI.Controls.DataFieldEx">
            <summary>
            继承自DataField，主要功能是可以通过SizeInDataForm属性，定义在DataFormEx中的长度。所以必须配合DataFormEx使用。
            </summary>
        </member>
        <member name="F:NCS.UI.Controls.DataFieldEx.FieldNameProperty">
            <summary>
            用于表示字段名称的属性定义
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.DataFieldEx.SizeInDataForm">
            <summary>
            尺寸
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.DataFieldEx.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.DataFieldEx.FieldName">
            <summary>
            字段名称
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.DataFieldEx.GetFieldValue">
            <summary>
            获取字段属性值，即内部显示/编辑控件的值
            </summary>
            <returns></returns>
        </member>
        <member name="M:NCS.UI.Controls.DataFieldEx.SetFieldValue(System.Object)">
            <summary>
            设置字段的属性值，即内部显示/编辑控件的值
            </summary>
            <param name="value"></param>
        </member>
        <member name="T:NCS.UI.Controls.QueryConditionDataField">
            <summary>
            描述QueryMode下的DataField，需要配合DataFormEx（QueryMode=True）使用
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.QueryConditionDataField.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.QueryConditionDataField.GetFieldValue2">
            <summary>
            获取字段属性值2（针对含有2个输入控件的情况），即内部显示/编辑控件的值
            </summary>
            <returns></returns>
        </member>
        <member name="M:NCS.UI.Controls.QueryConditionDataField.SetFieldValue2(System.Object)">
            <summary>
            设置字段的属性值2（针对含有2个输入控件的情况），即内部显示/编辑控件的值
            </summary>
            <param name="value"></param>
        </member>
        <member name="T:NCS.UI.Controls.DataFormEx">
            <summary>
            相比DataForm实现了更为丰富的控件类型，查询模式和多列字段排序方式
            </summary>
        </member>
        <member name="E:NCS.UI.Controls.DataFormEx.ContentGridActualHeightChanged">
            <summary>
            内部实际高度改变时触发
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.DataFormEx.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.DataFormEx.FormatValidationItemsHeader">
            <summary>
            格式化报错信息，对于没有字段名称，或字段名称显示的不是 DisplayAttribute指定的名称的错误条目执行处理，统一成 Display.Name +错误信息
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.DataFormEx.ContentGridActualHeight">
            <summary>
            内部组件的实际高度
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.DataFormEx.OnCurrentItemChanged(System.EventArgs)">
            <summary>
            当前选中项变化时触发
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NCS.UI.Controls.DataFormEx.OnAutoGeneratingField(System.Windows.Controls.DataFormAutoGeneratingFieldEventArgs)">
            <summary>
            当自动生成字段时
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NCS.UI.Controls.DataFormEx.OnValidatingItem(System.ComponentModel.CancelEventArgs)">
            <summary>
            当验证字段时，若是QueryMode则取消
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:NCS.UI.Controls.DataFormEx.QueryMode">
            <summary>
            查询模式
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.DataFormEx.LineFieldsCount">
            <summary>
            字段分为多列的数量
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.DataFormEx.FocusFirstField">
            <summary>
            强制将焦点移到DataForm的第一个控件上
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.DataFormEx.OnContentLoaded(System.Windows.Controls.DataFormContentLoadEventArgs)">
            <summary>
            当内部组件载入时触发
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NCS.UI.Controls.DataFormEx.GetDataField(System.String)">
            <summary>
            获取指定字段关联的DataField对象
            </summary>
            <param name="fieldname">字段名/属性名</param>
            <returns>DataFieldEx对象</returns>
        </member>
        <member name="M:NCS.UI.Controls.DataFormEx.GetFieldValueControl``1(System.String)">
            <summary>
            获取指定字段关联的编辑控件，需要指定所需的控件的类型，调用此函数时，必须明确知晓界面上生成的实际控件类型
            </summary>
            <typeparam name="T">待返回的控件类型</typeparam>
            <param name="fieldName">字段名/属性名</param>
            <returns></returns>
        </member>
        <member name="M:NCS.UI.Controls.DataFormEx.GetFieldValue(System.String)">
            <summary>
            获取指定字段属性值，即内部显示/编辑控件的值
            </summary>
            <returns></returns>
        </member>
        <member name="M:NCS.UI.Controls.DataFormEx.SetFieldValue(System.String,System.Object)">
            <summary>
            设置指定字段属性值，即内部显示/编辑控件的值
            </summary>
            <returns></returns>
        </member>
        <member name="M:NCS.UI.Controls.DataFormEx.GetFieldValue2(System.String)">
            <summary>
            获取指定字段属性值2（针对含有2个输入控件的情况），即内部显示/编辑控件的值
            </summary>
            <returns></returns>
        </member>
        <member name="M:NCS.UI.Controls.DataFormEx.SetFieldValue2(System.String,System.Object)">
            <summary>
            设置指定字段的属性值2（针对含有2个输入控件的情况），即内部显示/编辑控件的值
            </summary>
            <param name="fieldName">字段名</param>
            <param name="value"></param>
        </member>
        <member name="M:NCS.UI.Controls.DataFormEx.AddValidationSummaryItem(System.String,System.String)">
            <summary>
            添加一条验证错误信息，建议使用ValidationItem方法
            </summary>
            <param name="fieldName">发生错误的字段</param>
            <param name="errorMessage">错误信息</param>
        </member>
        <member name="M:NCS.UI.Controls.DataFormEx.RemoveValidationSummaryItem(System.String,System.String)">
            <summary>
            移除验证错误信息，建议使用ValidationItem方法
            </summary>
            <param name="fieldName">发生错误的字段</param>
            <param name="errorMessage">错误信息</param>
        </member>
        <member name="M:NCS.UI.Controls.DataFormEx.ValidationItem(System.String,System.Boolean,System.String)">
            <summary>
            根据valid的属性，决定是添加还是移除验证错误信息
            </summary>
            <param name="fieldName">发生错误验证的字段</param>
            <param name="valid">是否通过验证</param>
            <param name="errorMessage">错误信息</param>
        </member>
        <member name="T:NCS.UI.Controls.FileBrowser">
            <summary>
            文件浏览控件
            </summary>
        </member>
        <member name="E:NCS.UI.Controls.FileBrowser.SelectFileChanged">
            <summary>
            选中的文件改变时触发
            </summary>
        </member>
        <member name="F:NCS.UI.Controls.FileBrowser.FileFilterProperty">
            <summary>
            用于描述被选中的文件的属性定义
            </summary>
        </member>
        <member name="F:NCS.UI.Controls.FileBrowser.MulitSelectProperty">
            <summary>
            用于描述被选中的多个文件的属性定义
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.FileBrowser.SelectFile">
            <summary>
            当前被选中的文件，若多个文件被选中，则表示第一个
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.FileBrowser.SelectFiles">
            <summary>
            当前被选中的所有文件
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.FileBrowser.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.FileBrowser.FileFilter">
            <summary>
            文件筛选器，使用 "说明|*.xxx|说明2|*.yyy"的形式定义
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.FileBrowser.MulitSelect">
            <summary>
            是否允许文件多选，默认为false
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.FileBrowser.ClearSelection">
            <summary>
            清除选择
            </summary>
        </member>
        <member name="T:NCS.UI.Controls.MaskForm">
            <summary>
            遮罩窗口，用于异步数据载入时，防止用户进行操作
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.MaskForm.#ctor(System.String,System.String,System.Func{System.String},System.Func{System.Boolean})">
            <summary>
            构造函数
            </summary>
            <param name="title">窗口标题</param>
            <param name="initContentText">初始化文字</param>
            <param name="getContentText">获取动态提示文字的函数委托</param>
            <param name="checkTaskIsFinish">检查是否已经完成任务的函数委托</param>
        </member>
        <member name="M:NCS.UI.Controls.MaskForm.Show">
            <summary>
            显示遮罩
            </summary>
        </member>
        <member name="T:NCS.UI.Controls.MulitChoose">
            <summary>
            多选下拉控件
            </summary>
        </member>
        <member name="E:NCS.UI.Controls.MulitChoose.SelectionChanged">
            <summary>
            当选择项目变化时触发
            </summary>
        </member>
        <member name="F:NCS.UI.Controls.MulitChoose.ItemsSourceProperty">
            <summary>
            用于描述所有待选项的数据集合属性的定义
            </summary>
        </member>
        <member name="F:NCS.UI.Controls.MulitChoose.DisplayMemberPathProperty">
            <summary>
            用于描述显示字段属性的定义
            </summary>
        </member>
        <member name="F:NCS.UI.Controls.MulitChoose.ValueMemberPathProperty">
            <summary>
            用于描述值字段属性的定义
            </summary>
        </member>
        <member name="F:NCS.UI.Controls.MulitChoose.DisplayConverterProperty">
            <summary>
            用于描述显示转换器的属性的定义
            </summary>
        </member>
        <member name="F:NCS.UI.Controls.MulitChoose.ValueProperty">
            <summary>
            用于描述值的属性的定义
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.MulitChoose.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.MulitChoose.DisplayValueOnTextBox">
            <summary>
            获取或设置是否要在文本框中显示ValuePath指定的值而不是DisplayPath指定的值，默认为false
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.MulitChoose.ItemsSource">
            <summary>
            待选数据集合
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.MulitChoose.DisplayMemberPath">
            <summary>
            实体类中用于显示的字段名
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.MulitChoose.ValueMemberPath">
            <summary>
            实体类中用于表示实际值的字段名
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.MulitChoose.DisplayConverter">
            <summary>
            用于转换实体类显示内容的转换器
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.MulitChoose.Value">
            <summary>
            表示 使用 SplitValuesChar 分割的选中项目的字符串
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.MulitChoose.SelectedItems">
            <summary>
            被选中项目的集合
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.MulitChoose.SelectedValues">
            <summary>
            被选中项目的值的集合
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.MulitChoose.SplitValuesChar">
            <summary>
            用于在Value属性中分割各个值的符号
            </summary>
        </member>
        <member name="T:NCS.UI.Controls.NumberTextBox`1">
            <summary>
            只能输入数字的文本框控件
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:NCS.UI.Controls.NumberTextBox`1.OnDataObjectChanged(System.Object,System.Object)">
            <summary>
            当绑定对象变更时触发，可以在这里更新UI元素如Content显示内容以及其他业务逻辑。
            </summary>
            <param name="dataobject"></param>
        </member>
        <member name="F:NCS.UI.Controls.NumberTextBox`1.DataObjectProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.NumberTextBox`1.OnDataObjectPropertyChanged(System.Object,System.String)">
            <summary>
            当绑定的对象的属性发生变化时触发，被绑定的对象必须实现了INotifyPropertyChanged接口后，本方法才会被触发。
            </summary>
            <param name="propertyName">被更改的属性名</param>
        </member>
        <member name="P:NCS.UI.Controls.NumberTextBox`1.DataObject">
            <summary>
            用于数据绑定的属性
            </summary>
        </member>
        <member name="E:NCS.UI.Controls.NumberTextBox`1.ValueChanged">
            <summary>
            输入的数值变化时触发
            </summary>
        </member>
        <member name="F:NCS.UI.Controls.NumberTextBox`1.ValueProperty">
            <summary>
            用于描述值的属性定义
            </summary>
        </member>
        <member name="F:NCS.UI.Controls.NumberTextBox`1.FormatProperty">
            <summary>
            用于描述格式化输出内容的属性定义
            </summary>
        </member>
        <member name="F:NCS.UI.Controls.NumberTextBox`1.MaximumProperty">
            <summary>
            用于描述允许输入最大值的属性定义
            </summary>
        </member>
        <member name="F:NCS.UI.Controls.NumberTextBox`1.MinimumProperty">
            <summary>
            用于描述允许输入最小值的属性定义
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.NumberTextBox`1.Value">
            <summary>
            获取或设置属性值
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.NumberTextBox`1.Maximum">
            <summary>
            获取或设置最大值
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.NumberTextBox`1.Minimum">
            <summary>
            获取或设置最小值
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.NumberTextBox`1.Format">
            <summary>
            文本框中的格式
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.NumberTextBox`1.CheckTextIsNumber">
            <summary>
            检查数值是否符合要求
            </summary>
            <returns></returns>
        </member>
        <member name="M:NCS.UI.Controls.NumberTextBox`1.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.NumberTextBox`1.SetNumberRange(System.String,System.String)">
            <summary>
            设置控件的最大最小值
            </summary>
            <param name="min">最小值</param>
            <param name="max">最大值</param>
        </member>
        <member name="T:NCS.UI.Controls.Int32TextBox">
            <summary>
            用于限制和返回int32的文本框
            </summary>
        </member>
        <member name="T:NCS.UI.Controls.Int64TextBox">
            <summary>
            用于限制和返回int64(long)的文本框
            </summary>
        </member>
        <member name="T:NCS.UI.Controls.DoubleTextBox">
            <summary>
            用于限制和返回double（浮点）的文本框
            </summary>
        </member>
        <member name="T:NCS.UI.Controls.DecimalTextBox">
            <summary>
            用于限制和返回decimal(金额等)的文本框
            </summary>
        </member>
        <member name="T:NCS.UI.Controls.OrderByOption">
            <summary>
            排序选项控件
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.OrderByOption.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.OrderByOption.OrderByProperties">
            <summary>
            用于描述排序的字段信息集合
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.OrderByOption.IsPopup">
            <summary>
            是否是选择模式
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.OrderByOption.ShowErrorTipIfOrderByListIsEmpty">
            <summary>
            若待选字段为空，则显示错误提示
            </summary>
            <returns></returns>
        </member>
        <member name="T:NCS.UI.Controls.PagerOption">
            <summary>
            分页控件
            </summary>
        </member>
        <member name="E:NCS.UI.Controls.PagerOption.PageIndexChanged">
            <summary>
            页号改变时触发
            </summary>
        </member>
        <member name="F:NCS.UI.Controls.PagerOption.RecordCountProperty">
            <summary>
            用于描述记录总数的属性定义
            </summary>
        </member>
        <member name="F:NCS.UI.Controls.PagerOption.PageSizeProperty">
            <summary>
            用于描述页总数的属性定义
            </summary>
        </member>
        <member name="F:NCS.UI.Controls.PagerOption.PageIndexProperty">
            <summary>
            用于描述页号的属性定义
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.PagerOption.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.PagerOption.PageSizeMaximum">
            <summary>
            页数据量最大值
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.PagerOption.PageSizeMinimum">
            <summary>
            页数据量最小值
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.PagerOption.RecordCount">
            <summary>
            数据不分页情况下的总数
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.PagerOption.PageSize">
            <summary>
            每页数据量
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.PagerOption.PageIndex">
            <summary>
            页号
            </summary>
        </member>
        <member name="T:NCS.UI.Controls.ControlPicker`1">
            <summary>
            用于包裹一个控件为弹出式选择控件的基类
            </summary>
            <typeparam name="V">用于设置或获取的值的类型，需要与被包裹的控件的值类型保持一致</typeparam>
        </member>
        <member name="F:NCS.UI.Controls.ControlPicker`1.ValueProperty">
            <summary>
            用于描述值的属性的定义
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.ControlPicker`1.ValueToDisplay(`0)">
            <summary>
            当值属性发生变化时，使用该属性将值转换为在UI上显示的内容
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:NCS.UI.Controls.ControlPicker`1.#ctor(System.Windows.FrameworkElement,System.Windows.DependencyProperty)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.ControlPicker`1.#ctor(System.Windows.FrameworkElement,System.Windows.DependencyProperty,System.Boolean)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.ControlPicker`1.Value">
            <summary>
            表示 使用 SplitValuesChar 分割的选中项目的字符串
            </summary>
        </member>
        <member name="T:NCS.UI.Controls.QueryForm">
            <summary>
            集成查询条件，排序选项，结果呈现的统一控件
            </summary>
        </member>
        <member name="E:NCS.UI.Controls.QueryForm.ExportButtonHandler">
            <summary>
            导出按钮点击时触发，使用此事件将覆盖默认逻辑，默认将当前结果集导出到兼容Excel的XML中。
            </summary>
        </member>
        <member name="E:NCS.UI.Controls.QueryForm.PageIndexChanged">
            <summary>
            当分页页号变化时触发
            </summary>
        </member>
        <member name="E:NCS.UI.Controls.QueryForm.StartQuery">
            <summary>
            开始查询时触发该事件，包括点击查询按钮，翻页等操作。
            </summary>
        </member>
        <member name="F:NCS.UI.Controls.QueryForm.HeaderProperty">
            <summary>
            表示控件列头显示的内容的属性定义
            </summary>
        </member>
        <member name="F:NCS.UI.Controls.QueryForm.ResultTypeProperty">
            <summary>
            表示结果集类型的属性定义
            </summary>
        </member>
        <member name="F:NCS.UI.Controls.QueryForm.ResultDataGridProperty">
            <summary>
            表示控件结果集DataGrid的属性定义
            </summary>
        </member>
        <member name="F:NCS.UI.Controls.QueryForm.OrderByBarVisibleProperty">
            <summary>
            表示控件排序工具条可见性的属性定义
            </summary>
        </member>
        <member name="F:NCS.UI.Controls.QueryForm.OrderByBarEnabledProperty">
            <summary>
            表示控件排序工具条可编辑与否的属性定义
            </summary>
        </member>
        <member name="F:NCS.UI.Controls.QueryForm.ExecuteQueryOnLoadProperty">
            <summary>
            表示是否在载入控件时就执行查询的属性定义
            </summary>
        </member>
        <member name="F:NCS.UI.Controls.QueryForm.ConditionBarMaximumHeightProperty">
            <summary>
            表示条件选择控件最大高度的属性定义
            </summary>
        </member>
        <member name="F:NCS.UI.Controls.QueryForm.EntityCheckedPropertyNameProperty">
            <summary>
            表示绑定的实体中表示“选中”的属性名称的属性定义
            </summary>
        </member>
        <member name="F:NCS.UI.Controls.QueryForm.QueryConditionEntityProperty">
            <summary>
            表示用于描述条件的实体类的属性定义
            </summary>
        </member>
        <member name="F:NCS.UI.Controls.QueryForm.QueryOrderByPropertiesProperty">
            <summary>
            表示用于描述排序选项的属性定义
            </summary>
        </member>
        <member name="F:NCS.UI.Controls.QueryForm.CustomControlBottomPanelProperty">
            <summary>
            用于表示底部扩展控件的属性定义
            </summary>
        </member>
        <member name="F:NCS.UI.Controls.QueryForm.CustomControlRightPanelProperty">
            <summary>
            用于表示右边扩展控件的属性定义
            </summary>
        </member>
        <member name="F:NCS.UI.Controls.QueryForm.MulitSelectProperty">
            <summary>
            用于表示是否使用用户自定义模板，而不自动根据数据类型或ResultType生成模板的属性定义
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.QueryForm.#ctor">
            <summary>
            构造函数，初始化控件内容。
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.QueryForm.ResultDataGrid">
            <summary>
            表示接收显示结果集的DataGrid控件，默认将创建一个DataGridEx
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.QueryForm.ExecuteQuery">
            <summary>
            执行查询操作，相当于点击 查询 按钮
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.QueryForm.CheckQueryConditionsValidate">
            <summary>
            用于在查询之前，自行添加的验证条件的逻辑
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.QueryForm.OnStartQuery">
            <summary>
            触发StartQuery事件，当需要执行查询时，调用此事件
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.QueryForm.FinishedQuery(System.Collections.IEnumerable,System.Int32)">
            <summary>
            结束查询，并成功时，执行本函数，将更新结果集和分页控件内容
            </summary>
            <param name="queryresultdata">结果集</param>
            <param name="recordcount">数据不分页情况下的记录总数</param>
        </member>
        <member name="M:NCS.UI.Controls.QueryForm.FinishedQuery(System.Collections.IEnumerable,System.Int32,System.String[])">
            <summary>
            结束查询，并成功时，执行本函数，将更新结果集和分页控件内容
            </summary>
            <param name="queryresultdata">结果集</param>
            <param name="groups">分组设置</param>
            <param name="recordcount">数据不分页情况下的记录总数</param>
        </member>
        <member name="M:NCS.UI.Controls.QueryForm.FinishedQuery(System.Collections.IEnumerable,System.Int32,NCS.UI.Controls.DataGridGroupSetting[])">
            <summary>
            结束查询，并成功时，执行本函数，将更新结果集和分页控件内容
            </summary>
            <param name="queryresultdata">结果集</param>
            <param name="groups">分组设置</param>
            <param name="recordcount">数据不分页情况下的记录总数</param>
        </member>
        <member name="M:NCS.UI.Controls.QueryForm.FinishedQuery(System.Collections.IEnumerable,System.Int32,NCS.UI.Controls.DataGridGroupSetting[],System.Boolean)">
            <summary>
            结束查询，并成功时，执行本函数，将更新结果集和分页控件内容
            </summary>
            <param name="queryresultdata">结果集</param>
            <param name="groups">分组设置</param>
            <param name="recordcount">数据不分页情况下的记录总数</param>
        </member>
        <member name="P:NCS.UI.Controls.QueryForm.ResultCollection">
            <summary>
            获取当前QueryForm中ResultDataGrid中的结果集
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.QueryForm.GetCheckedResultCollection``1">
            <summary>
            获取当前QueryForm中ResultDataGrid中，EntityCheckedPropertyName指定的属性=true的结果集
            </summary>
            <typeparam name="T">结果集中实体类的实际类型</typeparam>
            <returns>被选中的结果集</returns>
        </member>
        <member name="M:NCS.UI.Controls.QueryForm.GetHighlightCollection``1">
            <summary>
            获取用户选择高亮的数据，注意，使用高亮功能需要满足2个条件：结果集的实体类继承自 EntityViewBase，所有可见字段至少有一个字段的DataGridViewAttribute的PanelType为默认值（或手工设置为MarkHighlightGrid）
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:NCS.UI.Controls.QueryForm.FailedQuery(System.Boolean)">
            <summary>
            查询结束，但查询失败时调用本函数，并可以指定是否需要清空原有结果集。
            </summary>
            <param name="clearFormerResult">是否清楚原有结果集</param>
        </member>
        <member name="P:NCS.UI.Controls.QueryForm.Header">
            <summary>
            表示控件顶部显示的标题
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.QueryForm.QueryDataForm">
            <summary>
            获取表示查询条件的DataForm对象
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.QueryForm.ResultType">
            <summary>
            表示结果集类型，如果ResultDataGrid控件是DataGridEx类型或默认值，将根据此处指定的类型，创建实体类各个字段的的模板。实体类请使用 NCS.View.DataAnnotations.DataGrid相关Attribute做列的定义
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.QueryForm.HideConditionBar">
            <summary>
            隐藏选择条件的面板
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.QueryForm.OrderByBarVisible">
            <summary>
            排序工具条是否可见
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.QueryForm.OrderByBarEnabled">
            <summary>
            排序工具条是否可以编辑
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.QueryForm.PageSizeMaximum">
            <summary>
            可以允许用户输入的每页最大记录数
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.QueryForm.PageSize">
            <summary>
            允许用户设置默认的分页大小
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.QueryForm.PageSizeMinimum">
            <summary>
            可以允许用户输入的每页最小记录数
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.QueryForm.ExecuteQueryOnLoad">
            <summary>
            指定是否在控件加载后理解执行查询操作（触发StartQuery事件）
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.QueryForm.ConditionBarMaximumHeight">
            <summary>
            条件工具条的最大高度，若实际字段数量较多，超过此高度，将显示滚动条
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.QueryForm.EntityCheckedPropertyName">
            <summary>
            指定返回的结果集中，用于表示“选中”状态的布尔型字段名。可以为空。若指定的正确，则返回结果集后，将在底部显示一个“全选”复选框。
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.QueryForm.MulitSelect">
            <summary>
            获取或设置查询框内的数据行是是否可以多选，默认为true，需要配合EntityCheckedPropertyName属性一起使用。
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.QueryForm.QueryConditionEntity">
            <summary>
            用于描述条件的实体类的实例。注意，实体类的所有属性必须使用实现 NCS.View.IQueryConditionItem 相关接口的类型定义，实体类本身必须是QueryConditionEntityViewBase的子类。
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.QueryForm.QueryOrderByProperties">
            <summary>
            用于描述排序字段的集合。
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.QueryForm.ExportButtonVisibility">
            <summary>
            导出按钮是否可见
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.QueryForm.QueryButtonVisibility">
            <summary>
            查询按钮是否可见
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.QueryForm.CustomControlBottomPanel">
            <summary>
            扩展底部，全选按钮处，可以在全选按钮后面添加自定义的控件，通常可以添加按钮等。（需要以Grid或StrackPanel作为容器）
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.QueryForm.CustomControlRightPanel">
            <summary>
            用于扩展绿色区域，可以在该区域加入自定义控件。（需要以Grid或者StrackPanel作为容器），主要可以用于大额/可疑的格式校验界面，改区域可以使用RightPanelVisibility属性控制其是否可见。
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.QueryForm.RightPanelVisibility">
            <summary>
            右边扩展控件的可见性
            </summary>
        </member>
        <member name="F:NCS.UI.Controls.QueryFormWithValidateBox.CustomCheckDataValid">
            <summary>
            自定义的检查数据行的验证函数，参数为一行数据对象本身，返回值为验证结果
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.QueryFormWithValidateBox.ValidateCheckedItems``1">
            <summary>
            检查所有被选中的行的数据，并返回验证结果。若有错误，将在右侧列表中予以显示
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:NCS.UI.Controls.QueryEventArgs">
            <summary>
            查询事件参数
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.QueryEventArgs.Conditions">
            <summary>
            查询条件，包含字段，操作符，数据值等属性的集合
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.QueryEventArgs.Cancel">
            <summary>
            取消查询操作
            </summary>
        </member>
        <member name="T:NCS.UI.Controls.PageIndexChangedArgs">
            <summary>
            QueryFrom中分页页号变化时触发
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.PageIndexChangedArgs.PageIndex">
            <summary>
            页号
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.PageIndexChangedArgs.PageCount">
            <summary>
            总页数
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.PageIndexChangedArgs.PageSize">
            <summary>
            每页记录数
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.PageIndexChangedArgs.IsInitQuery">
            <summary>
            标识当前页号变化是由于点击查询按钮触发的还是条件不变，直接更改页号触发的
            </summary>
        </member>
        <member name="T:NCS.UI.Controls.DataGridGroupSetting">
            <summary>
            定义DataGrid中的分组字段，并提供方法，允许重写分组列头的内容
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.DataGridGroupSetting.PropertyName">
            <summary>
            被分组的属性名称
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.DataGridGroupSetting.OverwriteHeader">
            <summary>
            重写列头内容的函数委托
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.DataGridGroupSetting.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="property"></param>
        </member>
        <member name="T:NCS.UI.Controls.DataGridGroupItem">
            <summary>
            描述分组过程中，每个分组的内容
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.DataGridGroupItem.GroupProperty">
            <summary>
            分组属性名称
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.DataGridGroupItem.GroupPropertyText">
            <summary>
            分组属性的值
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.DataGridGroupItem.GroupHeader">
            <summary>
            分组属性列头内容
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.DataGridGroupItem.GetGroupItems``1">
            <summary>
            获取分组后，当前分组中的数据集合
            </summary>
        </member>
        <member name="T:NCS.UI.Controls.TextBoxEN">
            <summary>
            限制输入，只接受Ascii字符的文本框
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.TextBoxEN.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="T:NCS.UI.Controls.TextBoxGB2312Length">
            <summary>
            输入长度限制根据字节计算，而非字符数量。使用GB2312编码，中文占2字节，英文占1个字节
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.TextBoxGB2312Length.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="T:NCS.UI.Controls.TextBoxAutoSelectAll">
            <summary>
            点击文本框即可默认全选
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.TextBoxAutoSelectAll.OnGotFocus(System.Windows.RoutedEventArgs)">
            <summary>
            当获取焦点时
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:NCS.UI.Controls.TileImage">
            <summary>
            用于显示平铺图片的控件
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.TileImage.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.TileImage.Source">
            <summary>
            被平铺的图像
            </summary>
        </member>
        <member name="T:NCS.UI.Controls.RangeField`2">
            <summary>
            用于获取用户输入一个数值区间的控件，抽象类，必须实现
            </summary>
            <typeparam name="EditControl">控件类型</typeparam>
            <typeparam name="VType"></typeparam>
        </member>
        <member name="E:NCS.UI.Controls.RangeField`2.PropertyChanged">
            <summary>
            当属性变化是触发
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.RangeField`2.OnPropertyChanged(System.String)">
            <summary>
            触发PropertyChanged事件
            </summary>
            <param name="property">变化的属性名称</param>
        </member>
        <member name="F:NCS.UI.Controls.RangeField`2.Value1Property">
            <summary>
            用于描述第一个值的属性定义
            </summary>
        </member>
        <member name="F:NCS.UI.Controls.RangeField`2.Value2Property">
            <summary>
            用于描述第二个值的属性定义
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.RangeField`2.Value1">
            <summary>
            第一个值
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.RangeField`2.Value2">
            <summary>
            第二个值
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.RangeField`2.#ctor(System.Windows.DependencyProperty)">
            <summary>
            构造函数，指定EditControl类型的获取和接受值的DependencyProperty
            </summary>
            <param name="controlvalueproperty"></param>
        </member>
        <member name="P:NCS.UI.Controls.RangeField`2.EditControl1">
            <summary>
            第一个编辑控件
            </summary>
        </member>
        <member name="P:NCS.UI.Controls.RangeField`2.EditControl2">
            <summary>
            第二个编辑控件
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.RangeField`2.IsValue1BiggerThanValue2">
            <summary>
            判断Value1是否大于于Value2
            </summary>
            <returns></returns>
        </member>
        <member name="T:NCS.UI.Controls.DateRangeField">
            <summary>
            日期区间编辑控件
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.DateRangeField.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.DateRangeField.SetDateRange(System.DateTime,System.DateTime)">
            <summary>
            设置日期控件的可选范围
            </summary>
            <param name="min">最小可选日期</param>
            <param name="max">最大可选日期</param>
        </member>
        <member name="T:NCS.UI.Controls.NumberRangeField`1">
            <summary>
            数字区间控件基类
            </summary>
            <typeparam name="Val">数字类型</typeparam>
        </member>
        <member name="M:NCS.UI.Controls.NumberRangeField`1.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.NumberRangeField`1.SetNumberFormat(System.String)">
            <summary>
            设置数值格式
            </summary>
            <param name="format">格式</param>
        </member>
        <member name="M:NCS.UI.Controls.NumberRangeField`1.SetNumberRange(System.String,System.String)">
            <summary>
            设置数值区间
            </summary>
            <param name="min">最小值</param>
            <param name="max">最大值</param>
        </member>
        <member name="T:NCS.UI.Controls.Int32RangeField">
            <summary>
            int32区间编辑控件
            </summary>
        </member>
        <member name="T:NCS.UI.Controls.Int64RangeField">
            <summary>
            int64(long)区间编辑控件
            </summary>
        </member>
        <member name="T:NCS.UI.Controls.DoubleRangeField">
            <summary>
            double(浮点)区间编辑控件
            </summary>
        </member>
        <member name="T:NCS.UI.Controls.DecimalRangeField">
            <summary>
            decimal(金额等)区间编辑控件
            </summary>
        </member>
        <member name="T:NCS.UI.Controls.DiffForm">
            <summary>
            对比2个对象，通过Compare方法以第一个对象的字段为基准，和第二个对象的同名字段做对比，并列出不同的内容
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.DiffForm.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:NCS.UI.Controls.DiffForm.Compare(System.Object,System.Object)">
            <summary>
            对比2个对象，对象类型可以不同，但需要有
            </summary>
            <param name="currentobject"></param>
            <param name="oldobject"></param>
        </member>
        <member name="T:NCS.UI.DesignerProperties">
            <summary>
            Provides a custom implementation of DesignerProperties.GetIsInDesignMode
            to work around an issue.
            </summary>
        </member>
        <member name="M:NCS.UI.DesignerProperties.GetIsInDesignMode(System.Windows.DependencyObject)">
            <summary>
            Returns whether the control is in design mode (running under Blend
            or Visual Studio).
            </summary>
            <param name="element">The element from which the property value is
            read.</param>
            <returns>True if in design mode.</returns>
        </member>
        <member name="F:NCS.UI.DesignerProperties._isInDesignMode">
            <summary>
            Stores the computed InDesignMode value.
            </summary>
        </member>
        <member name="T:NCS.UI.Utility">
            <summary>
            包含UI相关的工具函数
            </summary>
        </member>
        <member name="M:NCS.UI.Utility.GetXamlNameSpaceDeclaration(System.Type,System.String)">
            <summary>
            获取声明指定类型所在namespace的xaml声明字符窜
            </summary>
            <param name="type">类型</param>
            <param name="alias">别名</param>
            <returns>xaml声明字符窜</returns>
        </member>
        <member name="M:NCS.UI.Utility.GetParent``1(System.Windows.DependencyObject)">
            <summary>
            读取指定类型的父控件，通过不断向上级循环，直到父级的类型符合指定类型位置。若找不到返回空
            </summary>
            <typeparam name="T">要返回的父级类型</typeparam>
            <param name="source">子对象</param>
            <returns>父级对象</returns>
        </member>
        <member name="T:NCS.Utility">
            <summary>
            工具类，包含各种常用的杂类函数
            </summary>
        </member>
        <member name="M:NCS.Utility.GetDataAfterChar(System.String,System.Char)">
            <summary>
            获取第一个c之后的内容
            </summary>
            <param name="strExp">字符串</param>
            <param name="c">分隔符</param>
            <returns>首个c参数指定字符之后的内容</returns>
        </member>
        <member name="M:NCS.Utility.ArrayToString``1(``0[],System.String)">
            <summary>
            将数组内的元素组成一个字符串，以指定符号分割。
            </summary>
            <typeparam name="T">数组元素的类型</typeparam>
            <param name="array">数组</param>
            <param name="splitChar">用来分隔各个项的字符</param>
            <returns>包含所有元素的字符串</returns>
        </member>
        <member name="M:NCS.Utility.ArrayToString``1(``0[],System.Boolean,System.String)">
            <summary>
            将数组内的元素组成一个字符串，以指定符号分割。
            </summary>
            <typeparam name="T">数组元素的类型</typeparam>
            <param name="array">数组</param>
            <param name="isNumberType">是否作为数值型处理，字符型会加上''，数字型不会</param>
            <param name="splitChar">用来分隔各个项的字符</param>
            <returns>包含所有元素的字符串</returns>
        </member>
        <member name="M:NCS.Utility.Convert``1(System.String,``0)">
            <summary>
            将指定的字符串转换为指定的类型，若失败则返回指定默认值
            </summary>
            <typeparam name="T">要转换的类型，必须支持TryParse方法</typeparam>
            <param name="s">要转换的字符串</param>
            <param name="defautvalue">默认值</param>
            <returns>若成功，返回转换后的值，否则返回指定的默认值</returns>
        </member>
        <member name="M:NCS.Utility.Convert``1(System.String)">
            <summary>
            将字符串转换为指定的类型
            </summary>
            <typeparam name="T">目标类型</typeparam>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:NCS.Utility.CanConvert``1(System.String)">
            <summary>
            判断字符窜是否可以转换为指定的类型
            </summary>
            <typeparam name="T"></typeparam>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:NCS.Utility.SetProperty(System.Object,System.String,System.Object)">
            <summary>
            通过反射，设置对象的属性，通常用于不确定类型的对象或私有属性
            </summary>
            <param name="instance">对象实例</param>
            <param name="PropertyName">属性名</param>
            <param name="value">要设置的值</param>
            <returns>设置是否成功</returns>
        </member>
        <member name="M:NCS.Utility.GetProperty(System.Object,System.String)">
            <summary>
            通过反射，获取对象的属性，通常用于不确定类型的对象或私有属性
            </summary>
            <param name="instance">对象实例</param>
            <param name="PropertyName">属性名</param>
            <returns>属性值，不存在该属性返回null</returns>
        </member>
        <member name="M:NCS.Utility.ConvertEntityAndCollection2(System.Collections.IEnumerable,System.Type,System.String[])">
            <summary>
            ConvertEntityAndCollection 的非泛型版本，将自动识别传入的源类型
            </summary>
            <param name="sourcelist">数据源，需要是一个经过封箱泛型集合，否则可能无法实际工作</param>
            <param name="target">目标类型，如果是一个泛型集合类型，则将生成相应的集合，如果是非集合类型，将生成包含指定类型数据的ObservableCollection集合</param>
            <param name="exclude">排除的字段</param>
            <returns>返回的集合，通常需要拆箱使用，实际类型为target指定的类型</returns>
        </member>
        <member name="M:NCS.Utility.ConvertEntityAndCollection``3(System.Collections.Generic.IEnumerable{``2},System.String[])">
            <summary>
            快速将一个列表的内容复制到一个新列表中，目标类型可以与原类型不同，将自动复制属性
            </summary>
            <typeparam name="L">新列表集合类型</typeparam>
            <typeparam name="T">目标类型</typeparam>
            <typeparam name="S">原类型</typeparam>
            <param name="exclude">排除的属性名列表，可选</param>
            <param name="sourcelist">原列表集合</param>
            <returns></returns>
        </member>
        <member name="M:NCS.Utility.ConvertNullable2Value``1(System.Nullable{``0})">
            <summary>
            将可空类型转换为实际值类型，或值为空，则返回默认值
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:NCS.Utility.Invoke(System.Object,System.String,System.Type[],System.Type[],System.Object[])">
            <summary>
            根据传入的对象，执行指定的某个非静态方法，通常用于执行私有方法。
            </summary>
            <param name="obj">方法所在的对象实例</param>
            <param name="functionName">函数名称</param>
            <param name="paramTypes">函数的参数类型，可以为null</param>
            <param name="genericTypes">若方法为泛型方法，可设置此参数</param>
            <param name="paramVals">执行方法时，要传入的参数</param>
            <returns>返回值</returns>
        </member>
        <member name="M:NCS.Utility.Invoke(System.Type,System.String,System.Type[],System.Type[],System.Object[])">
            <summary>
            根据方法名称，执行某个类中对应的静态方法
            </summary>
            <param name="t">类型</param>
            <param name="functionName">函数名称</param>
            <param name="paramTypes">函数的参数类型，可以为null</param>
            <param name="genericTypes">若方法为泛型方法，可设置此参数</param>
            <param name="paramVals">执行方法时，要传入的参数</param>
            <returns>返回值</returns>
        </member>
        <member name="M:NCS.Utility.Invoke(System.Type,System.String,System.Type[],System.Object[])">
            <summary>
            根据方法名称，执行某个类中对应的静态方法
            </summary>
            <param name="t">类型</param>
            <param name="functionName">函数名称</param>
            <param name="paramTypes">函数的参数类型，可以为null</param>
            <param name="paramVals">执行方法时，要传入的参数</param>
            <returns>返回值</returns>
        </member>
        <member name="M:NCS.Utility.Invoke(System.Object,System.String,System.Type[],System.Object[])">
            <summary>
            根据传入的对象，执行指定的某个非静态方法，通常用于执行私有方法。
            </summary>
            <param name="obj">方法所在的对象实例</param>
            <param name="functionName">函数名称</param>
            <param name="paramTypes">函数的参数类型，可以为null</param>
            <param name="paramVals">执行方法时，要传入的参数</param>
            <returns>返回值</returns>
        </member>
        <member name="M:NCS.Utility.Invoke(System.Type,System.String,System.Object[])">
            <summary>
            根据方法名称，执行某个类中对应的静态方法
            </summary>
            <param name="t">类型</param>
            <param name="functionName">函数名称</param>
            <param name="paramVals">执行方法时，要传入的参数</param>
            <returns>返回值</returns>
        </member>
        <member name="M:NCS.Utility.Invoke(System.Object,System.String,System.Object[])">
            <summary>
            根据传入的对象，执行指定的某个非静态方法，通常用于执行私有方法。
            </summary>
            <param name="obj">方法所在的对象实例</param>
            <param name="functionName">函数名称</param>
            <param name="paramVals">执行方法时，要传入的参数</param>
            <returns>返回值</returns>
        </member>
        <member name="M:NCS.Utility.CheckEnumIsFlag(System.Type)">
            <summary>
            检查传入的枚举类型是否是标志位（即声明中带Flag标签）
            </summary>
            <param name="t">枚举类型</param>
            <returns>返回值，若类型不是枚举，则返回false</returns>
        </member>
        <member name="M:NCS.Utility.CopyObjectProperties``2(``0,``1,System.String[])">
            <summary>
            在2个不同的对象间复制同名兼容类型的属性值
            </summary>
            <param name="obj">源对象</param>
            <param name="target">目标对象</param>
            <param name="exclude">排除的属性</param>
        </member>
        <member name="M:NCS.Utility.GetEscapeCharacter(System.String)">
            <summary>
            根据字符前2位所表示的转义符，返回对应的char，只支持\t\0\v\f\\
            </summary>
            <param name="s">以\起始的转义符，至少包含2个字符，空字符串将返回\0，否则将返回第一个字符</param>
            <returns></returns>
        </member>
        <member name="M:NCS.Utility.RemoveDoubleByteAlphabet(System.String)">
            <summary>
            将字符串中的全角字母/数字替换为半角
            </summary>
            <param name="s">可能包含全角字母或数字的字符串</param>
            <returns>替换后的字符串</returns>
        </member>
        <member name="M:NCS.Utility.PeelOffMeaninglessException(System.Exception)">
            <summary>
            如果异常是“调用事发生异常”这类无助于分析出错信息的异常，将返回该异常的InnerException
            </summary>
            <param name="ex"></param>
            <returns></returns>
        </member>
        <member name="M:NCS.Utility.GetValue``1(System.Object,``0)">
            <summary>
            泛型方法，返回一个被装箱的数据的强类型值，同时，将检查数据是否为空或无效（此时返回默认值）
            </summary>
            <typeparam name="T">将返回的数据类型</typeparam>
            <param name="dbobj">被装箱的数据</param>
            <param name="defaultvalue">默认值</param>
            <returns>强类型数据</returns>
        </member>
        <member name="M:NCS.Utility.Zip(System.String,System.Byte[])">
            <summary>
            使用zip方式压缩数据流
            </summary>
            <param name="filename">将数据流保存到zip包中使用的文件名</param>
            <param name="filecontent">数据内容</param>
            <returns>压缩后的zip数据</returns>
        </member>
        <member name="M:NCS.Utility.UnZip(System.String,System.Byte[])">
            <summary>
            解压
            </summary>
            <param name="filename">要解压的zip包中的文件名</param>
            <param name="zipdata">zip数据</param>
            <returns>解压后的数据</returns>
        </member>
        <member name="M:NCS.Utility.Serializer``1(``0)">
            <summary>
            序列化对象（需要使用Unicode存储序列化后的数据）
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="obj">对象实例</param>
            <returns>序列化后的文本</returns>
        </member>
        <member name="M:NCS.Utility.Deserializer``1(System.String)">
            <summary>
            反序列化，需要Unicode编码的序列化字符串
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="xml">序列化字符串</param>
            <returns>反序列化后的对象</returns>
        </member>
        <member name="M:NCS.Utility.DataContractSerializer``1(``0)">
            <summary>
            使用DataContract方式序列化对象（需要使用Unicode存储序列化后的数据）
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="obj">对象实例</param>
            <returns>序列化后的文本</returns>
        </member>
        <member name="M:NCS.Utility.DataContractDeserializer``1(System.String)">
            <summary>
            使用DataContract方式反序列化，需要Unicode编码的序列化字符串
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="xml">序列化字符串</param>
            <returns>反序列化后的对象</returns>
        </member>
        <member name="M:NCS.Utility.SaveObject2IsoFile``1(``0,System.String)">
            <summary>
            将数据对象序列化后保存到文件中
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="obj">对象实例</param>
            <param name="filename">文件名</param>
        </member>
        <member name="M:NCS.Utility.LoadIsoFile2Object``1(System.String)">
            <summary>
            将文件内容读取后反序列化还原成对象
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="filename">文件名</param>
            <returns></returns>
        </member>
        <member name="M:NCS.Utility.SHA256(System.String)">
            <summary>
            HASH加密，可替代MD5
            </summary>
            <param name="src"></param>
            <returns></returns>
        </member>
        <member name="M:NCS.Utility.SHA256(System.Byte[])">
            <summary>
            HASH加密，可替代MD5
            </summary>
            <param name="src"></param>
            <returns></returns>
        </member>
        <member name="M:NCS.Utility.UI_BeginInvoke(System.Delegate,System.Object[])">
            <summary>
            使用UI线程执行指定的委托，用于多线程间对UI控件操作操作
            </summary>
            <param name="d">委托</param>
            <param name="args">委托指向的函数所需的参数</param>
        </member>
        <member name="M:NCS.Utility.UI_BeginInvoke(System.Delegate,System.Int32,System.Object[])">
            <summary>
            延迟n毫秒后，使用UI线程执行指定的委托，用于多线程间对UI控件操作操作
            </summary>
            <param name="d">委托</param>
            <param name="delayMillisecond">延迟时间</param>
            <param name="args">委托指向的函数所需的参数</param>
        </member>
        <member name="M:NCS.Utility.IsSubTypeOf(System.Type,System.Type)">
            <summary>
            判断指定类型是否为另一个类型的父类，支持不带类型参数的泛型父类的判断
            </summary>
            <param name="type"></param>
            <param name="parent"></param>
            <returns></returns>
        </member>
        <member name="M:NCS.Utility.GetGenericParentType(System.Type,System.Type)">
            <summary>
            使用反射将指定，获取指定类型父类的泛型类型
            </summary>
            <param name="type"></param>
            <param name="genericparent"></param>
            <returns></returns>
        </member>
        <member name="M:NCS.Utility.GetResourceUri(System.Reflection.Assembly,System.String)">
            <summary>
            获取指定程序集中，指向指定资源的Uri
            </summary>
            <param name="assembly"></param>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:NCS.Utility.GetResourceUri(System.String)">
            <summary>
            获取当前程序集中，指向指定资源的Uri
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:NCS.Utility.SaveList2ExcelXML``1(System.Collections.Generic.IEnumerable{``0},System.String[],System.String[],System.IO.Stream)">
            <summary>
            将列表数据保存到Excel中
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
            <param name="outputfields"></param>
            <param name="filedsdisplayname"></param>
            <param name="outputstream"></param>
        </member>
        <member name="M:NCS.Utility.SaveList2Excel``1(System.Collections.Generic.IEnumerable{``0},System.String[],System.String[],System.IO.Stream)">
            <summary>
            将列表数据保存到Excel中
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
            <param name="outputfields"></param>
            <param name="filedsdisplayname"></param>
            <param name="outputstream"></param>
        </member>
        <member name="M:NCS.Utility.GetChineseFristAlphabet(System.Char)">
            <summary>
            获取指定汉字的首字母，若是非中文直接返回字母，无法识别则返回?
            </summary>
            <param name="c">要识别的字符</param>
            <returns>首字母</returns>
        </member>
        <member name="M:NCS.Utility.GetLogicPathObject(System.Object,System.String,System.Boolean)">
            <summary>
            根据逻辑路径，一层层获取指定的对象。如：“form.UserControl1.List.this[2].Value.GetDetail(System.String|zhangsan,System.Int32|2).Name”
            表示，获取form对象的UserControl1属性的List对象的第三个元素的Value属性，并执行Value中的GetDetail方法，方法包含两个参数string和int，最终获取GetDtail执行结果对象的Name并返回。
            </summary>
            <param name="rootObject">根对象</param>
            <param name="logicPath">逻辑路径</param>
            <param name="pathIncludeRootObject">逻辑路径是否包含根对象，若为true，则忽略逻辑路径的第一级</param>
            <returns>最终得到的对象，若中途出错，或中途某一级对象为空，为将返回空</returns>
        </member>
        <member name="M:NCS.Utility.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            对集合中的每一个元素执行指定的操作
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
            <param name="action"></param>
        </member>
        <member name="M:NCS.Utility.ToObservableCollection``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            将指定的集合转换为ObservableCollection集合
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:NCS.Utility.AddRange``1(System.Collections.ObjectModel.Collection{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            为 System.Collections.ObjectModel.Collection 集合添加 AddRange方法，用于批量添加数据
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
            <param name="elements"></param>
        </member>
        <member name="M:NCS.Utility.DataContractSerializerAndZip``1(``0)">
            <summary>
            将指定的对象序列化并使用zip压缩，返回压缩后的数据流，请使用DataContractUnzipAndDeserializer逆运算。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:NCS.Utility.DataContractUnzipAndDeserializer``1(System.Byte[])">
            <summary>
            将通过DataContractSerializerAndZip处理的数据流还原为对象
            </summary>
            <typeparam name="T"></typeparam>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="T:NCS.CopyPropertiesAttribute">
            <summary>
            执行NCS.Utility.CopyProperties等方法时，定义额外行为
            </summary>
        </member>
        <member name="P:NCS.CopyPropertiesAttribute.ExcludeAsSource">
            <summary>
            当作为数据源时自动排除该字段
            </summary>
        </member>
        <member name="P:NCS.CopyPropertiesAttribute.ExcludeAsTarget">
            <summary>
            当作为目标数据时，排除该字段
            </summary>
        </member>
        <member name="T:NCS.View.DataAnnotations.SizeInDataFormAttribute">
            <summary>
            控制在DataFormEx中的高度和宽度
            </summary>
        </member>
        <member name="P:NCS.View.DataAnnotations.SizeInDataFormAttribute.Size">
            <summary>
            尺寸
            </summary>
        </member>
        <member name="M:NCS.View.DataAnnotations.SizeInDataFormAttribute.#ctor(NCS.View.DataAnnotations.SizeInDataForm)">
            <summary>
            构造函数
            </summary>
            <param name="size">在DataFormEx中的尺寸</param>
        </member>
        <member name="T:NCS.View.DataAnnotations.PrimaryKeyAttribute">
            <summary>
            标识字段是主键字段
            </summary>
        </member>
        <member name="T:NCS.View.DataAnnotations.SizeInDataForm">
            <summary>
            在DataFormEx中的尺寸
            </summary>
        </member>
        <member name="F:NCS.View.DataAnnotations.SizeInDataForm.Normal">
            <summary>
            普通，根据DataFormEx的设置，可能占整行或半行货1/3行等……
            </summary>
        </member>
        <member name="F:NCS.View.DataAnnotations.SizeInDataForm.FullLine">
            <summary>
            无条件占据整行
            </summary>
        </member>
        <member name="F:NCS.View.DataAnnotations.SizeInDataForm.TwoLines">
            <summary>
            编辑模式下占据2行，查询模式下1行
            </summary>
        </member>
        <member name="F:NCS.View.DataAnnotations.SizeInDataForm.FourLines">
            <summary>
            编辑模式下占据4行，查询模式下1行
            </summary>
        </member>
        <member name="T:NCS.View.DataAnnotations.UIControlAttribute">
            <summary>
            在DataFormEx中，定义使用的控件
            </summary>
        </member>
        <member name="F:NCS.View.DataAnnotations.UIControlAttribute._uicontroltype">
            <summary>
            使用的控件类型
            </summary>
        </member>
        <member name="P:NCS.View.DataAnnotations.UIControlAttribute.BindProperty">
            <summary>
            获取绑定属性定义
            </summary>
        </member>
        <member name="P:NCS.View.DataAnnotations.UIControlAttribute.BindPropertyName">
            <summary>
            绑定的字段名
            </summary>
        </member>
        <member name="P:NCS.View.DataAnnotations.UIControlAttribute.ExtraProperties">
            <summary>
            针对需要对指定的控件设置额外的一个或多个属性时使用，非必要不建议使用。语法：属性=值；如：Text=test
            </summary>
        </member>
        <member name="M:NCS.View.DataAnnotations.UIControlAttribute.#ctor(System.Type,System.String,System.String[])">
            <summary>
            构造函数，指定使用的控件类型和绑定值属性
            </summary>
            <param name="uicontroltype">控件类型</param>
            <param name="binddependencyproperty">值属性名称</param>
            <param name="extraProperties">针对需要对指定的控件设置额外的一个或多个属性时使用，非必要不建议使用。语法：属性=值；如：Text=test</param>
        </member>
        <member name="T:NCS.View.DataAnnotations.ItemsControlAttribute">
            <summary>
            针对 Selector 类型控件（ListBox/ComboBox等），设置这些控件的Itemssource，DispalyPath/ValuePath等属性
            </summary>
        </member>
        <member name="M:NCS.View.DataAnnotations.ItemsControlAttribute.#ctor(System.Type,System.String,System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="bindtype">数据源所在类型</param>
            <param name="sourcepath">数据源属性名，可以为空，若为空则直接使用数据源类型的实例作为源</param>
            <param name="displaypath">用于显示的字段</param>
            <param name="valuepath">作为值返回的字段</param>
        </member>
        <member name="M:NCS.View.DataAnnotations.ItemsControlAttribute.#ctor(System.Type,System.String)">
            <summary>
            构造函数，只指定数据源，主要针对string数组类数据源
            </summary>
            <param name="bindtype">源类型</param>
            <param name="sourcepath">源属性</param>
        </member>
        <member name="M:NCS.View.DataAnnotations.ItemsControlAttribute.#ctor(System.Type)">
            <summary>
            构造函数，只指定数据源，主要针对本身就是集合的对象。
            </summary>
            <param name="bindtype">源对象</param>
        </member>
        <member name="M:NCS.View.DataAnnotations.ItemsControlAttribute.SetSelectorControlSource(System.Windows.Controls.Primitives.Selector)">
            <summary>
            为Selector类型控件设置属性和绑定
            </summary>
            <param name="control"></param>
        </member>
        <member name="M:NCS.View.DataAnnotations.ItemsControlAttribute.SetSelectorControlSource(NCS.UI.Controls.MulitChoose)">
            <summary>
            为MulitChoose控件设置属性和绑定
            </summary>
            <param name="control"></param>
        </member>
        <member name="M:NCS.View.DataAnnotations.ItemsControlAttribute.SetSelectorControlSource(System.Windows.Controls.AutoCompleteBox)">
            <summary>
            为AutoCompleteBox控件设置属性和绑定
            </summary>
            <param name="control"></param>
        </member>
        <member name="T:NCS.View.DataAnnotations.DisplayConverterAttribute">
            <summary>
            为字段设置用于显示的转换器，主要用于DataFormEx中的展示。
            </summary>
        </member>
        <member name="P:NCS.View.DataAnnotations.DisplayConverterAttribute.ConvertorParameter">
            <summary>
            用于传入转换器的参数值
            </summary>
        </member>
        <member name="M:NCS.View.DataAnnotations.DisplayConverterAttribute.#ctor(System.Type)">
            <summary>
            构造函数，使用一个转换器初始化
            </summary>
            <param name="valueconvertertype">转换器</param>
        </member>
        <member name="T:NCS.View.DataAnnotations.QueryConditionOperatorAttribute">
            <summary>
            针对查询条件字段，设置操作符。（默认为等于）
            </summary>
        </member>
        <member name="P:NCS.View.DataAnnotations.QueryConditionOperatorAttribute.Operator">
            <summary>
            操作符
            </summary>
        </member>
        <member name="M:NCS.View.DataAnnotations.QueryConditionOperatorAttribute.#ctor(NCS.DataAccess.QueryConditionOperator)">
            <summary>
            构造函数
            </summary>
            <param name="op"></param>
        </member>
        <member name="T:NCS.View.DataAnnotations.AutoGenerateBehaviorAttribute">
            <summary>
            设置字段是否可见/可用，包括DataFormEx，DataGridEx，DiffForm，QueryForm（Export）
            </summary>
        </member>
        <member name="P:NCS.View.DataAnnotations.AutoGenerateBehaviorAttribute.ExportVisibility">
            <summary>
            针对QueryForm中Export按钮的默认实现
            </summary>
        </member>
        <member name="P:NCS.View.DataAnnotations.AutoGenerateBehaviorAttribute.DataFormExVisibility">
            <summary>
            DataFormEx可见性，注意，该属性的优先级低于DisplayAttribute.AutoGenerateField属性，若该属性=False，则无视本属性的设置。
            </summary>
        </member>
        <member name="P:NCS.View.DataAnnotations.AutoGenerateBehaviorAttribute.DataFormExEnabled">
            <summary>
            DataFormEx是否可编辑
            </summary>
        </member>
        <member name="P:NCS.View.DataAnnotations.AutoGenerateBehaviorAttribute.DataGridExVisibility">
            <summary>
            DataGridEx可见性，注意，该属性的优先级低于DisplayAttribute.AutoGenerateField属性，若该属性=False，则无视本属性的设置。
            </summary>
        </member>
        <member name="P:NCS.View.DataAnnotations.AutoGenerateBehaviorAttribute.DiffFormVisibility">
            <summary>
            DiffForm可见性
            </summary>
        </member>
        <member name="M:NCS.View.DataAnnotations.AutoGenerateBehaviorAttribute.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="T:NCS.View.DataAnnotations.SortAbilityAttribute">
            <summary>
            用于制定字段是否是可排序字段，可以制定默认排序方式，主要用于QueryOrderByProperty.GetOrderByPropertiesByConditions()或GetOrderByPropertiesByEntity()方法
            </summary>
        </member>
        <member name="P:NCS.View.DataAnnotations.SortAbilityAttribute.DefaultSortMode">
            <summary>
            默认排序方式，升序/降序/默认；默认=升序
            </summary>
        </member>
        <member name="P:NCS.View.DataAnnotations.SortAbilityAttribute.Priority">
            <summary>
            优先级，数字越小，优先级越高，默认=1
            </summary>
        </member>
        <member name="P:NCS.View.DataAnnotations.SortAbilityAttribute.DefaultSortField">
            <summary>
            默认生效的排序字段，=True时，默认出现在排序列表中，否则默认出现在待选列表中
            </summary>
        </member>
        <member name="P:NCS.View.DataAnnotations.SortAbilityAttribute.Sortable">
            <summary>
            可排序性，决定指定的字段是否支持排序
            </summary>
        </member>
        <member name="M:NCS.View.DataAnnotations.SortAbilityAttribute.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="T:NCS.View.DataAnnotations.DataGridViewAttribute">
            <summary>
            用于描述DataGridEx中自动生成字段的查看模式中使用的控件和样式
            </summary>
        </member>
        <member name="P:NCS.View.DataAnnotations.DataGridViewAttribute.TextAlignment">
            <summary>
            内容的对齐方式，默认为左对齐
            </summary>
        </member>
        <member name="P:NCS.View.DataAnnotations.DataGridViewAttribute.Height">
            <summary>
            单元格的高度，默认为25
            </summary>
        </member>
        <member name="P:NCS.View.DataAnnotations.DataGridViewAttribute.Format">
            <summary>
            Format和ConverterType，只能使用一种，以ConverterType为准
            </summary>
        </member>
        <member name="M:NCS.View.DataAnnotations.DataGridViewAttribute.#ctor(System.Type,System.String,System.String[])">
            <summary>
            构造函数，指定展现控件类型和用于数据绑定的属性
            </summary>
            <param name="uicontroltype">用于显示数据的控件的类型</param>
            <param name="binddependencyproperty">控件中用于接收和返回数据的属性名称</param>
            <param name="extraProperties">针对需要对指定的控件设置额外的一个或多个属性时使用，非必要不建议使用。语法：属性=值；如：Text=test</param>
        </member>
        <member name="M:NCS.View.DataAnnotations.DataGridViewAttribute.#ctor">
            <summary>
            构造函数，使用TextBlock显示数据
            </summary>
        </member>
        <member name="M:NCS.View.DataAnnotations.DataGridViewAttribute.GetDataTemplate(System.String,System.ComponentModel.DataAnnotations.DisplayFormatAttribute)">
            <summary>
            根据参数获取展现数据的模板
            </summary>
            <param name="bindpath">被绑定的字段</param>
            <param name="dfa">数据展现格式定义</param>
            <returns>数据模板</returns>
        </member>
        <member name="M:NCS.View.DataAnnotations.DataGridViewAttribute.GetClipBoardBinding(System.String)">
            <summary>
            获取用于剪贴板复制内容绑定项
            </summary>
            <param name="bindpath">被绑定的字段</param>
            <returns></returns>
        </member>
        <member name="T:NCS.View.DataAnnotations.DataGridEditAttribute">
            <summary>
            用于描述DataGridEx中自动生成字段的编辑模式中使用的控件
            </summary>
        </member>
        <member name="P:NCS.View.DataAnnotations.DataGridEditAttribute.ConverterType">
            <summary>
            转换器类型，必须是一个IValueConverter的实现
            </summary>
        </member>
        <member name="P:NCS.View.DataAnnotations.DataGridEditAttribute.PanelType">
            <summary>
            作为容器的控件类型，必须是Panel的子类，主要用于特殊化的样式需求，默认使用Grid布局
            </summary>
        </member>
        <member name="M:NCS.View.DataAnnotations.DataGridEditAttribute.#ctor(System.Type,System.String,System.String[])">
            <summary>
            构造函数，指定编辑控件类型和控件值属性
            </summary>
            <param name="uicontroltype">编辑控件类型</param>
            <param name="binddependencyproperty">编辑控件值属性名称</param>
            <param name="extraProperties">针对需要对指定的控件设置额外的一个或多个属性时使用，非必要不建议使用。语法：属性=值；如：Text=test</param>
        </member>
        <member name="M:NCS.View.DataAnnotations.DataGridEditAttribute.#ctor">
            <summary>
            构造函数，默认使用文本框作为默认编辑控件
            </summary>
        </member>
        <member name="M:NCS.View.DataAnnotations.DataGridEditAttribute.GetDataTemplate(System.String)">
            <summary>
            获取编辑模板
            </summary>
            <param name="bindpath">绑定的属性名</param>
            <returns></returns>
        </member>
        <member name="T:NCS.View.DataAnnotations.DataGridColumnSetupAttribute">
            <summary>
            设置DataGridEx中Column属性的限制条件
            </summary>
        </member>
        <member name="P:NCS.View.DataAnnotations.DataGridColumnSetupAttribute.CanReorder">
            <summary>
            可以拖拽Column
            </summary>
        </member>
        <member name="P:NCS.View.DataAnnotations.DataGridColumnSetupAttribute.CanSort">
            <summary>
            可以点击列头做排序操作
            </summary>
        </member>
        <member name="P:NCS.View.DataAnnotations.DataGridColumnSetupAttribute.CanResize">
            <summary>
            用户可以手工修改列宽
            </summary>
        </member>
        <member name="P:NCS.View.DataAnnotations.DataGridColumnSetupAttribute.Frozen">
            <summary>
            列将置于最前，并不随横滚动条滚动
            </summary>
        </member>
        <member name="P:NCS.View.DataAnnotations.DataGridColumnSetupAttribute.AllowFrozen">
            <summary>
            是否允许用户通过右键菜单锁定列，若 Frozen = true，则忽略该属性。
            </summary>
        </member>
        <member name="P:NCS.View.DataAnnotations.DataGridColumnSetupAttribute.IgnoreEditTemplate">
            <summary>
            忽略编辑模板（即不可编辑），主要用于按钮列等
            </summary>
        </member>
        <member name="P:NCS.View.DataAnnotations.DataGridColumnSetupAttribute.HeaderHorizontalAlignment">
            <summary>
            列头内容的对齐方式
            </summary>
        </member>
        <member name="P:NCS.View.DataAnnotations.DataGridColumnSetupAttribute.Width">
            <summary>
            列的默认宽度，默认为0=自动
            </summary>
        </member>
        <member name="P:NCS.View.DataAnnotations.DataGridColumnSetupAttribute.HeaderFontFamily">
            <summary>
            列头的字体，默认为null，表示默认字体
            </summary>
        </member>
        <member name="M:NCS.View.DataAnnotations.DataGridColumnSetupAttribute.#ctor">
            <summary>
            构造函数，默认：可拖拽，可排序，可修改列宽，非冻结列，可编辑
            </summary>
        </member>
        <member name="T:NCS.View.DataAnnotations.DataGridDetailCollectionTagAttribute">
            <summary>
            标记实体类中的一个集合属性，这个属性将作为DataGrid中的子项
            </summary>
        </member>
        <member name="T:NCS.View.CompareValueEntity">
            <summary>
            用于保存对比内容的实体类
            </summary>
        </member>
        <member name="E:NCS.View.CompareValueEntity.StatusChanged">
            <summary>
            状态改变时触发
            </summary>
        </member>
        <member name="P:NCS.View.CompareValueEntity.PropertyName">
            <summary>
            属性名
            </summary>
        </member>
        <member name="P:NCS.View.CompareValueEntity.DisplayName">
            <summary>
            显示的名称
            </summary>
        </member>
        <member name="P:NCS.View.CompareValueEntity.Value1">
            <summary>
            比较的值1，当前值
            </summary>
        </member>
        <member name="P:NCS.View.CompareValueEntity.Value2">
            <summary>
            比较的值2，被修改前的值
            </summary>
        </member>
        <member name="P:NCS.View.CompareValueEntity.Match">
            <summary>
            获取Value1和2是否相等
            </summary>
        </member>
        <member name="P:NCS.View.CompareValueEntity.Format">
            <summary>
            格式化输出格式，如 N2，D2，yyyyMMdd等
            </summary>
        </member>
        <member name="P:NCS.View.CompareValueEntity.FormatConvert">
            <summary>
            用于转换格式或类型的转换器，主要针对复杂的格式输出
            </summary>
        </member>
        <member name="M:NCS.View.CompareValueEntity.GetValue1">
            <summary>
            获取被比较的值1，当前值
            </summary>
            <returns></returns>
        </member>
        <member name="M:NCS.View.CompareValueEntity.GetValue2">
            <summary>
            获取被比较的值2，被修改前的值
            </summary>
            <returns></returns>
        </member>
        <member name="T:NCS.View.ICompareEntityProperty">
            <summary>
            定义一个属性，包含当前对象需要对比的另一个实体对象的实例
            </summary>
        </member>
        <member name="T:NCS.View.EntityViewBase">
            <summary>
            为用于数据绑定且与实际EntityFramework实体类交互的中间层类提供基础功能和定义
            </summary>
        </member>
        <member name="M:NCS.View.EntityViewBase.LoadFrom(System.Object[],System.String[])">
            <summary>
            构造函数，针对部分中间层实体类偏向业务逻辑，与数据库定义可能不完全对应，可能对于多张表，
            允许传入多个类型的实体类，将自动复制这些类中的同名属性，若有重名属性，则以排在前面的类的属性值为准
            </summary>
            <param name="entity">用于初始化，从这些实体中将同名属性复制到当前类中</param>
            <param name="exclude">排除的属性</param>
        </member>
        <member name="M:NCS.View.EntityViewBase.LoadFrom(System.Object,System.String[])">
            <summary>
            构造函数，针对部分中间层实体类偏向业务逻辑，将自动复制entity中的同名属性
            </summary>
            <param name="entity">用于初始化，从这些实体中将同名属性复制到当前类中</param>
            <param name="exclude">排除的属性</param>
        </member>
        <member name="M:NCS.View.EntityViewBase.SaveTo(System.Object[],System.String[])">
            <summary>
            将当前对象中的属性值，复制到目标实体中
            </summary>
            <param name="entity">目标实体</param>
            <param name="exclude">要排除的属性</param>
        </member>
        <member name="M:NCS.View.EntityViewBase.SaveTo(System.Object,System.String[])">
            <summary>
            将当前对象中的属性值，复制到目标实体中
            </summary>
            <param name="entity">目标实体</param>
            <param name="exclude">要排除的属性</param>
        </member>
        <member name="M:NCS.View.EntityViewBase.Snapshot">
            <summary>
            为当前对象创建快照，保存快照后，对某些属性的修改可以通过 RollbackSnapShot得到还原；
            </summary>
        </member>
        <member name="M:NCS.View.EntityViewBase.CommitSnapShot">
            <summary>
            确认镜像后的更改。
            </summary>
        </member>
        <member name="M:NCS.View.EntityViewBase.RollbackSnapShot">
            <summary>
            将对象中的属性值恢复到调用Snapshot()时的状态。
            </summary>
        </member>
        <member name="M:NCS.View.EntityViewBase.GetPrimaryKeyHash">
            <summary>
            计算当前对象的主键的Hash值
            </summary>
            <returns></returns>
        </member>
        <member name="M:NCS.View.EntityViewBase.GetFirstBusinessField">
            <summary>
            获取第一个业务字段（排除功能性的字段，如各个接口）
            </summary>
            <returns></returns>
        </member>
        <member name="T:NCS.View.EntityEntireBindItem">
            <summary>
            实体类中用于声明绑定整个实体类的对象，主要应用场景为DataGrid某列中需要使用1个以上的字段计算显示内容。
            </summary>
        </member>
        <member name="T:NCS.View.PropertyChangedHelper">
            <summary>
            为属性更改提供额外的通知函数，使用lambda表达式表示字段，而不需要再使用字符串，避免拼写错误。
            </summary>
        </member>
        <member name="M:NCS.View.PropertyChangedHelper.OnPropertyChanged``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            使用lambda表达式指出属性变更
            </summary>
            <typeparam name="T">继承自EntityViewBase的类型</typeparam>
            <typeparam name="TProperty"></typeparam>
            <param name="propertyChangedBase">对象实例</param>
            <param name="expression">表示属性的lambda表达式</param>
        </member>
        <member name="T:NCS.View.DataBaseType">
            <summary>
            数据库类型
            </summary>
        </member>
        <member name="T:NCS.View.ExpressionItem">
            <summary>
            表示一个表达式对象（也可以表示字段或属性）
            </summary>
        </member>
        <member name="P:NCS.View.ExpressionItem.Expression">
            <summary>
            属性名称
            </summary>
        </member>
        <member name="P:NCS.View.ExpressionItem.DisplayName">
            <summary>
            显示名称
            </summary>
        </member>
        <member name="M:NCS.View.ExpressionItem.GetExpressionItemList``1(System.String[])">
            <summary>
            根据指定的字段名称，自动从制定的类型中读取属性名和显示名称
            </summary>
            <typeparam name="T"></typeparam>
            <param name="properties"></param>
            <returns></returns>
        </member>
        <member name="T:NCS.View.QueryConditionEntityViewBase">
            <summary>
            用于描述查询条件的实体类基类，实现INotifyPropertyChanged接口，并会自动初始化所含属性，不需要手工初始化。
            </summary>
        </member>
        <member name="E:NCS.View.QueryConditionEntityViewBase.PropertyChanged">
            <summary>
            当属性改变时触发
            </summary>
        </member>
        <member name="M:NCS.View.QueryConditionEntityViewBase.OnPropertyChanged(System.String)">
            <summary>
            触发PropertyChanged事件
            </summary>
            <param name="property"></param>
        </member>
        <member name="M:NCS.View.QueryConditionEntityViewBase.#ctor">
            <summary>
            构造函数，初始化所有查询条件属性
            </summary>
        </member>
        <member name="M:NCS.View.QueryConditionEntityViewBase.ToString">
            <summary>
            获取可描述包含条件的字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:NCS.View.QueryConditionEntityViewBase.ToString(System.String)">
            <summary>
            获取可描述包含条件的字符串
            </summary>
            <param name="splitconditions">各个条件之间的分隔符</param>
            <returns></returns>
        </member>
        <member name="T:NCS.View.IQueryConditionItem">
            <summary>
            表示一个查询条件项。
            </summary>
        </member>
        <member name="P:NCS.View.IQueryConditionItem.Checked">
            <summary>
            选中/有效
            </summary>
        </member>
        <member name="P:NCS.View.IQueryConditionItem.EnforceCondition">
            <summary>
            是否是强制条件
            </summary>
        </member>
        <member name="T:NCS.View.IQueryConditionValueItem`1">
            <summary>
            一个包含指定类型的值的查询条件项
            </summary>
            <typeparam name="T">类型</typeparam>
        </member>
        <member name="P:NCS.View.IQueryConditionValueItem`1.Value">
            <summary>
            值
            </summary>
        </member>
        <member name="T:NCS.View.IQueryConditionRangeItem`1">
            <summary>
            包含两个值，表示一个区间的查询条件项
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:NCS.View.IQueryConditionRangeItem`1.Value2">
            <summary>
            值2
            </summary>
        </member>
        <member name="T:NCS.View.QueryConditionItem`1">
            <summary>
            表示一个具体类型的查询项
            </summary>
            <typeparam name="T">具体的数据类型</typeparam>
        </member>
        <member name="E:NCS.View.QueryConditionItem`1.PropertyChanged">
            <summary>
            当有属性改变时触发
            </summary>
        </member>
        <member name="M:NCS.View.QueryConditionItem`1.OnPropertyChanged(System.String)">
            <summary>
            触发PropertyChanged事件
            </summary>
            <param name="property"></param>
        </member>
        <member name="P:NCS.View.QueryConditionItem`1.Value">
            <summary>
            值
            </summary>
        </member>
        <member name="P:NCS.View.QueryConditionItem`1.DisplayConverter">
            <summary>
            仅为内部转换Value内容为显示内容
            </summary>
        </member>
        <member name="P:NCS.View.QueryConditionItem`1.Checked">
            <summary>
            被选中
            </summary>
        </member>
        <member name="P:NCS.View.QueryConditionItem`1.EnforceCondition">
            <summary>
            是否强制选择
            </summary>
        </member>
        <member name="T:NCS.View.QueryConditionRangeItem`1">
            <summary>
            表示一个区间的属性
            </summary>
            <typeparam name="T">具体的数据类型，需要是值类型</typeparam>
        </member>
        <member name="P:NCS.View.QueryConditionRangeItem`1.Value2">
            <summary>
            第二个值
            </summary>
        </member>
        <member name="T:NCS.View.QueryConditionStringItem">
            <summary>
            字符串条件选项
            </summary>
        </member>
        <member name="T:NCS.View.QueryConditionGuidItem">
            <summary>
            Guid条件选项
            </summary>
        </member>
        <member name="T:NCS.View.QueryConditionInt32Item">
            <summary>
            int32条件选项
            </summary>
        </member>
        <member name="T:NCS.View.QueryConditionInt64Item">
            <summary>
            int64条件选项
            </summary>
        </member>
        <member name="T:NCS.View.QueryConditionDecimalItem">
            <summary>
            deciaml条件选项
            </summary>
        </member>
        <member name="T:NCS.View.QueryConditionDateTimeItem">
            <summary>
            日期条件选项
            </summary>
        </member>
        <member name="T:NCS.View.QueryConditionDoubleItem">
            <summary>
            double条件选项
            </summary>
        </member>
        <member name="T:NCS.View.QueryConditionInt32RangeItem">
            <summary>
            int32区间条件选项
            </summary>
        </member>
        <member name="T:NCS.View.QueryConditionInt64RangeItem">
            <summary>
            int64区间条件选项
            </summary>
        </member>
        <member name="T:NCS.View.QueryConditionDecimalRangeItem">
            <summary>
            decimal区间条件选项
            </summary>
        </member>
        <member name="T:NCS.View.QueryConditionDateTimeRangeItem">
            <summary>
            日期区间条件选项
            </summary>
        </member>
        <member name="T:NCS.View.QueryConditionDoubleRangeItem">
            <summary>
            double区间条件选项
            </summary>
        </member>
        <member name="T:NCS.View.QueryConditionMulitItem`1">
            <summary>
            不定项条件选项
            </summary>
            <typeparam name="T">数据类型</typeparam>
        </member>
        <member name="M:NCS.View.QueryConditionMulitItem`1.FormatOneItem2String(`0)">
            <summary>
            将单一一项转换为列表中的string
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="P:NCS.View.QueryConditionMulitItem`1.SplitCharInUI">
            <summary>
            界面上分割各个值的字符
            </summary>
        </member>
        <member name="P:NCS.View.QueryConditionMulitItem`1.SplitCharInDB">
            <summary>
            数据库中分割各个值的字符
            </summary>
        </member>
        <member name="M:NCS.View.QueryConditionMulitItem`1.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:NCS.View.QueryConditionMulitItem`1.ShowValuesInTextBox">
            <summary>
            在文本框中，显示选中的值还是友好的名称，默认为false。显示友好的名称
            </summary>
        </member>
        <member name="M:NCS.View.QueryConditionMulitItem`1.CheckOneItemValid(System.String)">
            <summary>
            检查拆分后的单个项目是否合法
            </summary>
            <param name="s">拆分后的单个项的字符串形式</param>
            <returns></returns>
        </member>
        <member name="M:NCS.View.QueryConditionMulitItem`1.GetOrganizedValue">
            <summary>
            组织各个项，拼接成SplitCharInDB连接的字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:NCS.View.QueryConditionMulitItem`1.GetOrganizedValue(System.Char)">
            <summary>
            组织各个项，拼接成传入字符c连接的字符串
            </summary>
            <param name="c">分隔符</param>
            <returns></returns>
        </member>
        <member name="T:NCS.View.QueryConditionMulitStringItem">
            <summary>
            字符串类型的不定数量选项条件
            </summary>
        </member>
        <member name="M:NCS.View.QueryConditionMulitStringItem.CheckOneItemValid(System.String)">
            <summary>
            检查一个被截取的对象是否合法
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="T:NCS.View.QueryConditionMulitValueItem`1">
            <summary>
            值类型的不定数量条件选项
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:NCS.View.QueryConditionMulitValueItem`1.CheckOneItemValid(System.String)">
            <summary>
            检查传入的字符串是否是T指定的值
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="T:NCS.View.QueryConditionMulitGuidItem">
            <summary>
            GUID类型的不定数量的条件选项
            </summary>
        </member>
        <member name="T:NCS.View.QueryCondtionMulitEnumItem`1">
            <summary>
            枚举类型的不定数量条件选项
            </summary>
            <typeparam name="T">枚举类型</typeparam>
        </member>
        <member name="T:NCS.View.QueryConditionExpressionItem">
            <summary>
            表达式类型字段，默认使用文本框控件，根据实际需要请指定下拉列表或其他自定义控件
            </summary>
        </member>
        <member name="P:NCS.View.QueryConditionExpressionItem.Type">
            <summary>
            表达式类型，字段或表达式
            </summary>
        </member>
        <member name="P:NCS.View.QueryConditionExpressionItem.Operators">
            <summary>
            支持的操作符列表
            </summary>
        </member>
        <member name="P:NCS.View.QueryConditionExpressionItem.Expressions">
            <summary>
            默认的表达式列表，若为空，则默认提供文本框输入
            </summary>
        </member>
        <member name="T:NCS.WCF.ContractProxyGenerate">
            <summary>
            service proxy Contracts
            </summary>
        </member>
        <member name="M:NCS.WCF.ContractProxyGenerate.CreateNewType(System.Reflection.Emit.ModuleBuilder,System.Type)">
            <summary>
            Creates the new type.
            </summary>
            <param name="moduleBuilder">The module builder.</param>
            <param name="serviceType">Type of the service.</param>
            <returns></returns>
        </member>
        <member name="M:NCS.WCF.ContractProxyGenerate.CreateEndMethod(System.Reflection.Emit.TypeBuilder,System.Reflection.MethodInfo)">
            <summary>
            Creates the end method.
            </summary>
            <param name="typeBuilder">The type builder.</param>
            <param name="methodInfo">The method info.</param>
        </member>
        <member name="M:NCS.WCF.ContractProxyGenerate.SettingEndMehotdParameterTypeNames(System.Reflection.Emit.MethodBuilder,System.Reflection.MethodInfo)">
            <summary>
            Settings the end mehotd parameter type names.
            </summary>
            <param name="methodBuilder">The method builder.</param>
            <param name="methodInfo">The method info.</param>
        </member>
        <member name="M:NCS.WCF.ContractProxyGenerate.CreateEndMehotdParameterTypes(System.Reflection.MethodInfo)">
            <summary>
            Creates the begin mehotd parameter types.
            </summary>
            <param name="memberInfo">The member info.</param>
            <returns></returns>
        </member>
        <member name="M:NCS.WCF.ContractProxyGenerate.CreateBeginMethod(System.Reflection.Emit.TypeBuilder,System.Reflection.MethodInfo)">
            <summary>
            Creates the begin mehtod.
            </summary>
            <param name="typeBuilder">The type builder.</param>
            <param name="methodInfo">The method info.</param>
            <returns></returns>
        </member>
        <member name="M:NCS.WCF.ContractProxyGenerate.CreateFaultAttributes(System.Reflection.MethodInfo)">
            <summary>
            Creates the fault attributes.
            </summary>
            <param name="methodInfo">The method info.</param>
            <returns></returns>
        </member>
        <member name="M:NCS.WCF.ContractProxyGenerate.CreateOperationAttribute(System.String)">
            <summary>
            Creates the operation attribute.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NCS.WCF.ContractProxyGenerate.CreateServiceContartsAttribute">
            <summary>
            Creates the service contarts attribute.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NCS.WCF.ContractProxyGenerate.SettingBeginMehotdParameterTypeNames(System.Reflection.Emit.MethodBuilder,System.Reflection.MethodInfo)">
            <summary>
            Settings the begin mehotd parameter type names.
            </summary>
            <param name="methodBuilder">The method builder.</param>
            <param name="memberInfo">The member info.</param>
        </member>
        <member name="M:NCS.WCF.ContractProxyGenerate.CreateBeginMehotdParameterTypes(System.Reflection.MethodInfo)">
            <summary>
            Creates the begin mehotd parameter types.
            </summary>
            <param name="memberInfo">The member info.</param>
            <returns></returns>
        </member>
        <member name="T:NCS.WCF.ServiceFactoryProxy">
            <summary>
                service proxy
            </summary>
        </member>
        <member name="M:NCS.WCF.ServiceFactoryProxy.GetAssmbleyBuilder">
            <summary>
            Gets the assmbley builder.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NCS.WCF.ServiceFactoryProxy.CreatServiceInvoke``1">
            <summary>
            Invokes the specified configuration name.
            </summary>
            <typeparam name="TService">The type of the service.</typeparam>
            <returns></returns>
        </member>
        <member name="M:NCS.WCF.ServiceFactoryProxy.CreatServiceInvoke``1(System.String,System.String)">
            <summary>
            Invokes the specified configuration name.
            </summary>
            <typeparam name="TService">The type of the service.</typeparam>
            <param name="endPointConfigname">The end point configname.</param>
            <param name="urlString">The URL string.</param>
            <returns></returns>
        </member>
        <member name="M:NCS.WCF.ServiceFactoryProxy.CreateServiceProxy``1(System.ServiceModel.Channels.IChannel,System.Type)">
            <summary>
            Creates the service proxy.
            </summary>
            <typeparam name="TService">The type of the service.</typeparam>
            <param name="channel">The channel.</param>
            <param name="newType">The new type.</param>
            <returns></returns>
        </member>
        <member name="T:NCS.WCF.ServiceInvoke`1">
            <summary>
            service invoke
            </summary>
            <typeparam name="TService">The type of the service.</typeparam>
        </member>
        <member name="F:NCS.WCF.ServiceInvoke`1._communicationObject">
            <summary>
            The _communication object
            </summary>
        </member>
        <member name="F:NCS.WCF.ServiceInvoke`1._serviceProxy">
            <summary>
                The _channel
            </summary>
        </member>
        <member name="M:NCS.WCF.ServiceInvoke`1.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:NCS.WCF.ServiceInvoke`1" /> class.
            </summary>
        </member>
        <member name="M:NCS.WCF.ServiceInvoke`1.Initialize(`0,System.ServiceModel.ICommunicationObject)">
            <summary>
            Initliazes the specified service proxy.
            </summary>
            <param name="serviceProxy">The service proxy.</param>
            <param name="communicationObject">The communication object.</param>
        </member>
        <member name="M:NCS.WCF.ServiceInvoke`1.InvokeAsync(System.Action{`0})">
            <summary>
            Invokes the specified action.
            </summary>
            <param name="action">The action.</param>
        </member>
        <member name="M:NCS.WCF.ServiceInvoke`1.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:NCS.WCF.ServiceProxyGenerate">
            <summary>
            service proxy generate
            </summary>
        </member>
        <member name="M:NCS.WCF.ServiceProxyGenerate.CreateServiceProxy``1(System.Reflection.Emit.ModuleBuilder,System.ServiceModel.Channels.IChannel,System.Type)">
            <summary>
            Creates the service proxy.
            </summary>
            <typeparam name="TServiceContart">The type of the service contart.</typeparam>
            <param name="moduleBuilder">The module builder.</param>
            <param name="channel">The channel.</param>
            <param name="asyncServiceContartType">Type of the async service contart.</param>
            <returns></returns>
        </member>
        <member name="M:NCS.WCF.ServiceProxyGenerate.CreateMehotd``1(System.Reflection.Emit.TypeBuilder)">
            <summary>
            Creates the mehotd.
            </summary>
            <typeparam name="TService">The type of the service.</typeparam>
            <param name="typeBuilder">The type builder.</param>
        </member>
        <member name="M:NCS.WCF.ServiceProxyGenerate.CreatePrivateActions(System.Reflection.Emit.TypeBuilder,System.Type)">
            <summary>
            Creates the private actions.
            </summary>
            <param name="typeBuilder">The type builder.</param>
            <param name="contartType">Type of the contart.</param>
        </member>
        <member name="M:NCS.WCF.ServiceProxyGenerate.DefineConstructor(System.Reflection.Emit.TypeBuilder,System.Type)">
            <summary>
            Defines the constructor.
            </summary>
            <param name="typeBuilder">The type builder.</param>
            <param name="contartType">Type of the contart.</param>
        </member>
        <member name="M:NCS.WCF.ServiceProxyGenerate.GetNewServiceFullName(System.String)">
            <summary>
            Gets the new name of the service full.
            </summary>
            <param name="orginerName">Name of the orginer.</param>
            <returns></returns>
        </member>
        <member name="M:NCS.WCF.Utility.GetFullUrl(System.String,System.String)">
            <summary>
            将当前站点路径与传入参数合并，拼成自适应的wcf网址
            </summary>
            <param name="virtualPath">Web站点虚拟目录（相应web应用的根目录对于站点根目录）</param>
            <param name="wcfpath_filename">wcf服务相对于web应用根目录的路径</param>
            <returns></returns>
        </member>
        <member name="T:System.Assembly.XapPackage">
            <summary>
            用于描述和加载一个xap包的类，从构造开始，就开始下载指定的包，若失败将尝试一共3次。
            </summary>
        </member>
        <member name="M:System.Assembly.XapPackage.#ctor(System.Uri)">
            <summary>
            构造函数，需要提供xap所在路径，需要加载的dll列表。
            </summary>
            <param name="url"></param>
            <param name="dlllist"></param>
        </member>
        <member name="T:System.Text.GB18030Encoding">
            <summary>
            符合GB18030标准的解码器
            </summary>
        </member>
        <member name="P:System.Text.GB18030Encoding.GB18030">
            <summary>
            GB18030解码器的静态实例
            </summary>
        </member>
        <member name="P:System.Text.GB18030Encoding.WebName">
            <summary>
            字符集的名称
            </summary>
        </member>
        <member name="M:System.Text.GB18030Encoding.GetDecoder">
            <summary>
            获取相应的默认解码器
            </summary>
            <returns></returns>
        </member>
        <member name="M:System.Text.GB18030Encoding.GetEncoder">
            <summary>
            获取相应的默认编码器
            </summary>
            <returns></returns>
        </member>
        <member name="M:System.Text.GB18030Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
            <summary>
            计算执行的字符编码后占用的字节长度
            </summary>
            <param name="chars"></param>
            <param name="index"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:System.Text.GB18030Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            将指定的字符数组按GB18030编码后，存到指定的bytes数组中
            </summary>
            <param name="chars"></param>
            <param name="charIndex"></param>
            <param name="charCount"></param>
            <param name="bytes"></param>
            <param name="byteIndex"></param>
            <returns></returns>
        </member>
        <member name="M:System.Text.GB18030Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
            <summary>
            根据传入的BG18030编码，计算其中包含的字符数量
            </summary>
            <param name="bytes"></param>
            <param name="index"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:System.Text.GB18030Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
            <summary>
            将传入的按GB18030编码的字节数组转换为字符串
            </summary>
            <param name="bytes"></param>
            <param name="byteIndex"></param>
            <param name="byteCount"></param>
            <param name="chars"></param>
            <param name="charIndex"></param>
            <returns></returns>
        </member>
        <member name="M:System.Text.GB18030Encoding.GetMaxByteCount(System.Int32)">
            <summary>
            获取指定数量字符经过GB18030编码可能占据的最大长度
            </summary>
            <param name="charCount"></param>
            <returns></returns>
        </member>
        <member name="M:System.Text.GB18030Encoding.GetMaxCharCount(System.Int32)">
            <summary>
            获取指定数量的字节数组若按GB18030解码，可能包含的最大字符数量
            </summary>
            <param name="byteCount"></param>
            <returns></returns>
        </member>
        <member name="T:System.Windows.Media.Effects.TileEffect">
            <summary>
            一个使用平铺效果的渲染器
            </summary>
        </member>
        <member name="F:System.Windows.Media.Effects.TileEffect.InputProperty">
            <summary>
            输入属性定义
            </summary>
        </member>
        <member name="F:System.Windows.Media.Effects.TileEffect.VerticalTileCountProperty">
            <summary>
            横向重复数量属性定义
            </summary>
        </member>
        <member name="F:System.Windows.Media.Effects.TileEffect.HorizontalTileCountProperty">
            <summary>
            纵向重复数量属性定义
            </summary>
        </member>
        <member name="M:System.Windows.Media.Effects.TileEffect.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:System.Windows.Media.Effects.TileEffect.Input">
            <summary>
            Gets or sets the input.
            </summary>
            <value>The input.</value>
        </member>
        <member name="P:System.Windows.Media.Effects.TileEffect.VerticalTileCount">
            <summary>
            Gets or sets the vertical tile count.
            </summary>
            <value>The vertical tile count.</value>
        </member>
        <member name="P:System.Windows.Media.Effects.TileEffect.HorizontalTileCount">
            <summary>
            Gets or sets the horizontal tile count.
            </summary>
            <value>The horizontal tile count.</value>
        </member>
    </members>
</doc>

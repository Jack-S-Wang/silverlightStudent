//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace SilverlightData.ServiceReference2 {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QuerySubConditions", Namespace="http://schemas.ncsi.com.cn/2012/12/NCS.DataAccess.QuerySubConditions", IsReference=true)]
    public partial class QuerySubConditions : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<NCS.DataAccess.QueryCondition> ListField;
        
        private NCS.DataAccess.ConditionRelation SubConditonsRelationField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<NCS.DataAccess.QueryCondition> List {
            get {
                return this.ListField;
            }
            set {
                if ((object.ReferenceEquals(this.ListField, value) != true)) {
                    this.ListField = value;
                    this.RaisePropertyChanged("List");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public NCS.DataAccess.ConditionRelation SubConditonsRelation {
            get {
                return this.SubConditonsRelationField;
            }
            set {
                if ((this.SubConditonsRelationField.Equals(value) != true)) {
                    this.SubConditonsRelationField = value;
                    this.RaisePropertyChanged("SubConditonsRelation");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Student", Namespace="http://schemas.datacontract.org/2004/07/SilverlightData.Web", IsReference=true)]
    public partial class Student : System.Data.Objects.DataClasses.EntityObject {
        
        private string CHECK_OPERATOR_IDField;
        
        private System.Nullable<System.DateTime> CHECK_OPERATOR_TIMEField;
        
        private string CREATE_OPERATOR_IDField;
        
        private System.Nullable<System.DateTime> CREATE_TIMEField;
        
        private System.Nullable<int> StudentAgeField;
        
        private string StudentClassField;
        
        private int StudentIdField;
        
        private string StudentNameField;
        
        private System.Nullable<int> StudentSexField;
        
        private string UPDATE_OPERATOR_IDField;
        
        private System.Nullable<System.DateTime> UPDATE_TIMEField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CHECK_OPERATOR_ID {
            get {
                return this.CHECK_OPERATOR_IDField;
            }
            set {
                this.CHECK_OPERATOR_IDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CHECK_OPERATOR_TIME {
            get {
                return this.CHECK_OPERATOR_TIMEField;
            }
            set {
                this.CHECK_OPERATOR_TIMEField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATE_OPERATOR_ID {
            get {
                return this.CREATE_OPERATOR_IDField;
            }
            set {
                this.CREATE_OPERATOR_IDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CREATE_TIME {
            get {
                return this.CREATE_TIMEField;
            }
            set {
                this.CREATE_TIMEField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> StudentAge {
            get {
                return this.StudentAgeField;
            }
            set {
                this.StudentAgeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StudentClass {
            get {
                return this.StudentClassField;
            }
            set {
                this.StudentClassField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StudentId {
            get {
                return this.StudentIdField;
            }
            set {
                this.StudentIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StudentName {
            get {
                return this.StudentNameField;
            }
            set {
                this.StudentNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> StudentSex {
            get {
                return this.StudentSexField;
            }
            set {
                this.StudentSexField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPDATE_OPERATOR_ID {
            get {
                return this.UPDATE_OPERATOR_IDField;
            }
            set {
                this.UPDATE_OPERATOR_IDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UPDATE_TIME {
            get {
                return this.UPDATE_TIMEField;
            }
            set {
                this.UPDATE_TIMEField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StudentPending", Namespace="http://schemas.datacontract.org/2004/07/SilverlightData.Web", IsReference=true)]
    public partial class StudentPending : System.Data.Objects.DataClasses.EntityObject {
        
        private System.Nullable<int> AUDIT_STATEField;
        
        private string CHECK_OPERATOR_IDField;
        
        private System.Nullable<System.DateTime> CHECK_OPERATOR_TIMEField;
        
        private string CREATE_OPERATOR_IDField;
        
        private System.Nullable<System.DateTime> CREATE_TIMEField;
        
        private System.Nullable<int> OPERATOR_TYPEField;
        
        private System.Nullable<int> StudentAgeField;
        
        private string StudentClassField;
        
        private int StudentIdField;
        
        private string StudentNameField;
        
        private System.Nullable<int> StudentSexField;
        
        private string UPDATE_OPERATOR_IDField;
        
        private System.Nullable<System.DateTime> UPDATE_TIMEField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AUDIT_STATE {
            get {
                return this.AUDIT_STATEField;
            }
            set {
                this.AUDIT_STATEField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CHECK_OPERATOR_ID {
            get {
                return this.CHECK_OPERATOR_IDField;
            }
            set {
                this.CHECK_OPERATOR_IDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CHECK_OPERATOR_TIME {
            get {
                return this.CHECK_OPERATOR_TIMEField;
            }
            set {
                this.CHECK_OPERATOR_TIMEField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATE_OPERATOR_ID {
            get {
                return this.CREATE_OPERATOR_IDField;
            }
            set {
                this.CREATE_OPERATOR_IDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CREATE_TIME {
            get {
                return this.CREATE_TIMEField;
            }
            set {
                this.CREATE_TIMEField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OPERATOR_TYPE {
            get {
                return this.OPERATOR_TYPEField;
            }
            set {
                this.OPERATOR_TYPEField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> StudentAge {
            get {
                return this.StudentAgeField;
            }
            set {
                this.StudentAgeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StudentClass {
            get {
                return this.StudentClassField;
            }
            set {
                this.StudentClassField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StudentId {
            get {
                return this.StudentIdField;
            }
            set {
                this.StudentIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StudentName {
            get {
                return this.StudentNameField;
            }
            set {
                this.StudentNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> StudentSex {
            get {
                return this.StudentSexField;
            }
            set {
                this.StudentSexField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPDATE_OPERATOR_ID {
            get {
                return this.UPDATE_OPERATOR_IDField;
            }
            set {
                this.UPDATE_OPERATOR_IDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UPDATE_TIME {
            get {
                return this.UPDATE_TIMEField;
            }
            set {
                this.UPDATE_TIMEField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference2.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/Getstudent", ReplyAction="http://tempuri.org/IService1/GetstudentResponse")]
        System.IAsyncResult BeginGetstudent(NCS.DataAccess.QueryConditions querys, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SilverlightData.ServiceReference2.Student> EndGetstudent(out int recount, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetStudentPendings", ReplyAction="http://tempuri.org/IService1/GetStudentPendingsResponse")]
        System.IAsyncResult BeginGetStudentPendings(NCS.DataAccess.QueryConditions querys, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SilverlightData.ServiceReference2.StudentPending> EndGetStudentPendings(out int recount, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetRejectStudent", ReplyAction="http://tempuri.org/IService1/GetRejectStudentResponse")]
        System.IAsyncResult BeginGetRejectStudent(NCS.DataAccess.QueryConditions querys, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SilverlightData.ServiceReference2.StudentPending> EndGetRejectStudent(out int recount, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/addStudentPending", ReplyAction="http://tempuri.org/IService1/addStudentPendingResponse")]
        System.IAsyncResult BeginaddStudentPending(SilverlightData.ServiceReference2.StudentPending studentP, System.AsyncCallback callback, object asyncState);
        
        int EndaddStudentPending(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/updateStudentPendidngs", ReplyAction="http://tempuri.org/IService1/updateStudentPendidngsResponse")]
        System.IAsyncResult BeginupdateStudentPendidngs(System.Collections.ObjectModel.ObservableCollection<SilverlightData.ServiceReference2.StudentPending> studentPs, System.AsyncCallback callback, object asyncState);
        
        bool EndupdateStudentPendidngs(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/delStudentPending", ReplyAction="http://tempuri.org/IService1/delStudentPendingResponse")]
        System.IAsyncResult BegindelStudentPending(System.Collections.ObjectModel.ObservableCollection<SilverlightData.ServiceReference2.StudentPending> studentPs, System.AsyncCallback callback, object asyncState);
        
        bool EnddelStudentPending(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/Aduit", ReplyAction="http://tempuri.org/IService1/AduitResponse")]
        System.IAsyncResult BeginAduit(System.Collections.ObjectModel.ObservableCollection<SilverlightData.ServiceReference2.StudentPending> studentPs, System.AsyncCallback callback, object asyncState);
        
        bool EndAduit(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/UnAduit", ReplyAction="http://tempuri.org/IService1/UnAduitResponse")]
        System.IAsyncResult BeginUnAduit(System.Collections.ObjectModel.ObservableCollection<SilverlightData.ServiceReference2.StudentPending> studentPs, System.AsyncCallback callback, object asyncState);
        
        bool EndUnAduit(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/ReState", ReplyAction="http://tempuri.org/IService1/ReStateResponse")]
        System.IAsyncResult BeginReState(int StudentId, System.AsyncCallback callback, object asyncState);
        
        int EndReState(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : SilverlightData.ServiceReference2.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetstudentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetstudentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int recount {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SilverlightData.ServiceReference2.Student> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SilverlightData.ServiceReference2.Student>)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetStudentPendingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetStudentPendingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int recount {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SilverlightData.ServiceReference2.StudentPending> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SilverlightData.ServiceReference2.StudentPending>)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRejectStudentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRejectStudentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int recount {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SilverlightData.ServiceReference2.StudentPending> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SilverlightData.ServiceReference2.StudentPending>)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class addStudentPendingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public addStudentPendingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class updateStudentPendidngsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public updateStudentPendidngsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class delStudentPendingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public delStudentPendingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AduitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AduitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UnAduitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UnAduitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ReStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<SilverlightData.ServiceReference2.IService1>, SilverlightData.ServiceReference2.IService1 {
        
        private BeginOperationDelegate onBeginGetstudentDelegate;
        
        private EndOperationDelegate onEndGetstudentDelegate;
        
        private System.Threading.SendOrPostCallback onGetstudentCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetStudentPendingsDelegate;
        
        private EndOperationDelegate onEndGetStudentPendingsDelegate;
        
        private System.Threading.SendOrPostCallback onGetStudentPendingsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRejectStudentDelegate;
        
        private EndOperationDelegate onEndGetRejectStudentDelegate;
        
        private System.Threading.SendOrPostCallback onGetRejectStudentCompletedDelegate;
        
        private BeginOperationDelegate onBeginaddStudentPendingDelegate;
        
        private EndOperationDelegate onEndaddStudentPendingDelegate;
        
        private System.Threading.SendOrPostCallback onaddStudentPendingCompletedDelegate;
        
        private BeginOperationDelegate onBeginupdateStudentPendidngsDelegate;
        
        private EndOperationDelegate onEndupdateStudentPendidngsDelegate;
        
        private System.Threading.SendOrPostCallback onupdateStudentPendidngsCompletedDelegate;
        
        private BeginOperationDelegate onBegindelStudentPendingDelegate;
        
        private EndOperationDelegate onEnddelStudentPendingDelegate;
        
        private System.Threading.SendOrPostCallback ondelStudentPendingCompletedDelegate;
        
        private BeginOperationDelegate onBeginAduitDelegate;
        
        private EndOperationDelegate onEndAduitDelegate;
        
        private System.Threading.SendOrPostCallback onAduitCompletedDelegate;
        
        private BeginOperationDelegate onBeginUnAduitDelegate;
        
        private EndOperationDelegate onEndUnAduitDelegate;
        
        private System.Threading.SendOrPostCallback onUnAduitCompletedDelegate;
        
        private BeginOperationDelegate onBeginReStateDelegate;
        
        private EndOperationDelegate onEndReStateDelegate;
        
        private System.Threading.SendOrPostCallback onReStateCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetstudentCompletedEventArgs> GetstudentCompleted;
        
        public event System.EventHandler<GetStudentPendingsCompletedEventArgs> GetStudentPendingsCompleted;
        
        public event System.EventHandler<GetRejectStudentCompletedEventArgs> GetRejectStudentCompleted;
        
        public event System.EventHandler<addStudentPendingCompletedEventArgs> addStudentPendingCompleted;
        
        public event System.EventHandler<updateStudentPendidngsCompletedEventArgs> updateStudentPendidngsCompleted;
        
        public event System.EventHandler<delStudentPendingCompletedEventArgs> delStudentPendingCompleted;
        
        public event System.EventHandler<AduitCompletedEventArgs> AduitCompleted;
        
        public event System.EventHandler<UnAduitCompletedEventArgs> UnAduitCompleted;
        
        public event System.EventHandler<ReStateCompletedEventArgs> ReStateCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SilverlightData.ServiceReference2.IService1.BeginGetstudent(NCS.DataAccess.QueryConditions querys, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetstudent(querys, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SilverlightData.ServiceReference2.Student> SilverlightData.ServiceReference2.IService1.EndGetstudent(out int recount, System.IAsyncResult result) {
            return base.Channel.EndGetstudent(out recount, result);
        }
        
        private System.IAsyncResult OnBeginGetstudent(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NCS.DataAccess.QueryConditions querys = ((NCS.DataAccess.QueryConditions)(inValues[0]));
            return ((SilverlightData.ServiceReference2.IService1)(this)).BeginGetstudent(querys, callback, asyncState);
        }
        
        private object[] OnEndGetstudent(System.IAsyncResult result) {
            int recount = this.GetDefaultValueForInitialization<int>();
            System.Collections.ObjectModel.ObservableCollection<SilverlightData.ServiceReference2.Student> retVal = ((SilverlightData.ServiceReference2.IService1)(this)).EndGetstudent(out recount, result);
            return new object[] {
                    recount,
                    retVal};
        }
        
        private void OnGetstudentCompleted(object state) {
            if ((this.GetstudentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetstudentCompleted(this, new GetstudentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetstudentAsync(NCS.DataAccess.QueryConditions querys) {
            this.GetstudentAsync(querys, null);
        }
        
        public void GetstudentAsync(NCS.DataAccess.QueryConditions querys, object userState) {
            if ((this.onBeginGetstudentDelegate == null)) {
                this.onBeginGetstudentDelegate = new BeginOperationDelegate(this.OnBeginGetstudent);
            }
            if ((this.onEndGetstudentDelegate == null)) {
                this.onEndGetstudentDelegate = new EndOperationDelegate(this.OnEndGetstudent);
            }
            if ((this.onGetstudentCompletedDelegate == null)) {
                this.onGetstudentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetstudentCompleted);
            }
            base.InvokeAsync(this.onBeginGetstudentDelegate, new object[] {
                        querys}, this.onEndGetstudentDelegate, this.onGetstudentCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SilverlightData.ServiceReference2.IService1.BeginGetStudentPendings(NCS.DataAccess.QueryConditions querys, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetStudentPendings(querys, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SilverlightData.ServiceReference2.StudentPending> SilverlightData.ServiceReference2.IService1.EndGetStudentPendings(out int recount, System.IAsyncResult result) {
            return base.Channel.EndGetStudentPendings(out recount, result);
        }
        
        private System.IAsyncResult OnBeginGetStudentPendings(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NCS.DataAccess.QueryConditions querys = ((NCS.DataAccess.QueryConditions)(inValues[0]));
            return ((SilverlightData.ServiceReference2.IService1)(this)).BeginGetStudentPendings(querys, callback, asyncState);
        }
        
        private object[] OnEndGetStudentPendings(System.IAsyncResult result) {
            int recount = this.GetDefaultValueForInitialization<int>();
            System.Collections.ObjectModel.ObservableCollection<SilverlightData.ServiceReference2.StudentPending> retVal = ((SilverlightData.ServiceReference2.IService1)(this)).EndGetStudentPendings(out recount, result);
            return new object[] {
                    recount,
                    retVal};
        }
        
        private void OnGetStudentPendingsCompleted(object state) {
            if ((this.GetStudentPendingsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetStudentPendingsCompleted(this, new GetStudentPendingsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetStudentPendingsAsync(NCS.DataAccess.QueryConditions querys) {
            this.GetStudentPendingsAsync(querys, null);
        }
        
        public void GetStudentPendingsAsync(NCS.DataAccess.QueryConditions querys, object userState) {
            if ((this.onBeginGetStudentPendingsDelegate == null)) {
                this.onBeginGetStudentPendingsDelegate = new BeginOperationDelegate(this.OnBeginGetStudentPendings);
            }
            if ((this.onEndGetStudentPendingsDelegate == null)) {
                this.onEndGetStudentPendingsDelegate = new EndOperationDelegate(this.OnEndGetStudentPendings);
            }
            if ((this.onGetStudentPendingsCompletedDelegate == null)) {
                this.onGetStudentPendingsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetStudentPendingsCompleted);
            }
            base.InvokeAsync(this.onBeginGetStudentPendingsDelegate, new object[] {
                        querys}, this.onEndGetStudentPendingsDelegate, this.onGetStudentPendingsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SilverlightData.ServiceReference2.IService1.BeginGetRejectStudent(NCS.DataAccess.QueryConditions querys, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRejectStudent(querys, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SilverlightData.ServiceReference2.StudentPending> SilverlightData.ServiceReference2.IService1.EndGetRejectStudent(out int recount, System.IAsyncResult result) {
            return base.Channel.EndGetRejectStudent(out recount, result);
        }
        
        private System.IAsyncResult OnBeginGetRejectStudent(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NCS.DataAccess.QueryConditions querys = ((NCS.DataAccess.QueryConditions)(inValues[0]));
            return ((SilverlightData.ServiceReference2.IService1)(this)).BeginGetRejectStudent(querys, callback, asyncState);
        }
        
        private object[] OnEndGetRejectStudent(System.IAsyncResult result) {
            int recount = this.GetDefaultValueForInitialization<int>();
            System.Collections.ObjectModel.ObservableCollection<SilverlightData.ServiceReference2.StudentPending> retVal = ((SilverlightData.ServiceReference2.IService1)(this)).EndGetRejectStudent(out recount, result);
            return new object[] {
                    recount,
                    retVal};
        }
        
        private void OnGetRejectStudentCompleted(object state) {
            if ((this.GetRejectStudentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRejectStudentCompleted(this, new GetRejectStudentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRejectStudentAsync(NCS.DataAccess.QueryConditions querys) {
            this.GetRejectStudentAsync(querys, null);
        }
        
        public void GetRejectStudentAsync(NCS.DataAccess.QueryConditions querys, object userState) {
            if ((this.onBeginGetRejectStudentDelegate == null)) {
                this.onBeginGetRejectStudentDelegate = new BeginOperationDelegate(this.OnBeginGetRejectStudent);
            }
            if ((this.onEndGetRejectStudentDelegate == null)) {
                this.onEndGetRejectStudentDelegate = new EndOperationDelegate(this.OnEndGetRejectStudent);
            }
            if ((this.onGetRejectStudentCompletedDelegate == null)) {
                this.onGetRejectStudentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRejectStudentCompleted);
            }
            base.InvokeAsync(this.onBeginGetRejectStudentDelegate, new object[] {
                        querys}, this.onEndGetRejectStudentDelegate, this.onGetRejectStudentCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SilverlightData.ServiceReference2.IService1.BeginaddStudentPending(SilverlightData.ServiceReference2.StudentPending studentP, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginaddStudentPending(studentP, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int SilverlightData.ServiceReference2.IService1.EndaddStudentPending(System.IAsyncResult result) {
            return base.Channel.EndaddStudentPending(result);
        }
        
        private System.IAsyncResult OnBeginaddStudentPending(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SilverlightData.ServiceReference2.StudentPending studentP = ((SilverlightData.ServiceReference2.StudentPending)(inValues[0]));
            return ((SilverlightData.ServiceReference2.IService1)(this)).BeginaddStudentPending(studentP, callback, asyncState);
        }
        
        private object[] OnEndaddStudentPending(System.IAsyncResult result) {
            int retVal = ((SilverlightData.ServiceReference2.IService1)(this)).EndaddStudentPending(result);
            return new object[] {
                    retVal};
        }
        
        private void OnaddStudentPendingCompleted(object state) {
            if ((this.addStudentPendingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.addStudentPendingCompleted(this, new addStudentPendingCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void addStudentPendingAsync(SilverlightData.ServiceReference2.StudentPending studentP) {
            this.addStudentPendingAsync(studentP, null);
        }
        
        public void addStudentPendingAsync(SilverlightData.ServiceReference2.StudentPending studentP, object userState) {
            if ((this.onBeginaddStudentPendingDelegate == null)) {
                this.onBeginaddStudentPendingDelegate = new BeginOperationDelegate(this.OnBeginaddStudentPending);
            }
            if ((this.onEndaddStudentPendingDelegate == null)) {
                this.onEndaddStudentPendingDelegate = new EndOperationDelegate(this.OnEndaddStudentPending);
            }
            if ((this.onaddStudentPendingCompletedDelegate == null)) {
                this.onaddStudentPendingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnaddStudentPendingCompleted);
            }
            base.InvokeAsync(this.onBeginaddStudentPendingDelegate, new object[] {
                        studentP}, this.onEndaddStudentPendingDelegate, this.onaddStudentPendingCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SilverlightData.ServiceReference2.IService1.BeginupdateStudentPendidngs(System.Collections.ObjectModel.ObservableCollection<SilverlightData.ServiceReference2.StudentPending> studentPs, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginupdateStudentPendidngs(studentPs, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool SilverlightData.ServiceReference2.IService1.EndupdateStudentPendidngs(System.IAsyncResult result) {
            return base.Channel.EndupdateStudentPendidngs(result);
        }
        
        private System.IAsyncResult OnBeginupdateStudentPendidngs(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<SilverlightData.ServiceReference2.StudentPending> studentPs = ((System.Collections.ObjectModel.ObservableCollection<SilverlightData.ServiceReference2.StudentPending>)(inValues[0]));
            return ((SilverlightData.ServiceReference2.IService1)(this)).BeginupdateStudentPendidngs(studentPs, callback, asyncState);
        }
        
        private object[] OnEndupdateStudentPendidngs(System.IAsyncResult result) {
            bool retVal = ((SilverlightData.ServiceReference2.IService1)(this)).EndupdateStudentPendidngs(result);
            return new object[] {
                    retVal};
        }
        
        private void OnupdateStudentPendidngsCompleted(object state) {
            if ((this.updateStudentPendidngsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.updateStudentPendidngsCompleted(this, new updateStudentPendidngsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void updateStudentPendidngsAsync(System.Collections.ObjectModel.ObservableCollection<SilverlightData.ServiceReference2.StudentPending> studentPs) {
            this.updateStudentPendidngsAsync(studentPs, null);
        }
        
        public void updateStudentPendidngsAsync(System.Collections.ObjectModel.ObservableCollection<SilverlightData.ServiceReference2.StudentPending> studentPs, object userState) {
            if ((this.onBeginupdateStudentPendidngsDelegate == null)) {
                this.onBeginupdateStudentPendidngsDelegate = new BeginOperationDelegate(this.OnBeginupdateStudentPendidngs);
            }
            if ((this.onEndupdateStudentPendidngsDelegate == null)) {
                this.onEndupdateStudentPendidngsDelegate = new EndOperationDelegate(this.OnEndupdateStudentPendidngs);
            }
            if ((this.onupdateStudentPendidngsCompletedDelegate == null)) {
                this.onupdateStudentPendidngsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnupdateStudentPendidngsCompleted);
            }
            base.InvokeAsync(this.onBeginupdateStudentPendidngsDelegate, new object[] {
                        studentPs}, this.onEndupdateStudentPendidngsDelegate, this.onupdateStudentPendidngsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SilverlightData.ServiceReference2.IService1.BegindelStudentPending(System.Collections.ObjectModel.ObservableCollection<SilverlightData.ServiceReference2.StudentPending> studentPs, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegindelStudentPending(studentPs, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool SilverlightData.ServiceReference2.IService1.EnddelStudentPending(System.IAsyncResult result) {
            return base.Channel.EnddelStudentPending(result);
        }
        
        private System.IAsyncResult OnBegindelStudentPending(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<SilverlightData.ServiceReference2.StudentPending> studentPs = ((System.Collections.ObjectModel.ObservableCollection<SilverlightData.ServiceReference2.StudentPending>)(inValues[0]));
            return ((SilverlightData.ServiceReference2.IService1)(this)).BegindelStudentPending(studentPs, callback, asyncState);
        }
        
        private object[] OnEnddelStudentPending(System.IAsyncResult result) {
            bool retVal = ((SilverlightData.ServiceReference2.IService1)(this)).EnddelStudentPending(result);
            return new object[] {
                    retVal};
        }
        
        private void OndelStudentPendingCompleted(object state) {
            if ((this.delStudentPendingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.delStudentPendingCompleted(this, new delStudentPendingCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void delStudentPendingAsync(System.Collections.ObjectModel.ObservableCollection<SilverlightData.ServiceReference2.StudentPending> studentPs) {
            this.delStudentPendingAsync(studentPs, null);
        }
        
        public void delStudentPendingAsync(System.Collections.ObjectModel.ObservableCollection<SilverlightData.ServiceReference2.StudentPending> studentPs, object userState) {
            if ((this.onBegindelStudentPendingDelegate == null)) {
                this.onBegindelStudentPendingDelegate = new BeginOperationDelegate(this.OnBegindelStudentPending);
            }
            if ((this.onEnddelStudentPendingDelegate == null)) {
                this.onEnddelStudentPendingDelegate = new EndOperationDelegate(this.OnEnddelStudentPending);
            }
            if ((this.ondelStudentPendingCompletedDelegate == null)) {
                this.ondelStudentPendingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OndelStudentPendingCompleted);
            }
            base.InvokeAsync(this.onBegindelStudentPendingDelegate, new object[] {
                        studentPs}, this.onEnddelStudentPendingDelegate, this.ondelStudentPendingCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SilverlightData.ServiceReference2.IService1.BeginAduit(System.Collections.ObjectModel.ObservableCollection<SilverlightData.ServiceReference2.StudentPending> studentPs, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAduit(studentPs, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool SilverlightData.ServiceReference2.IService1.EndAduit(System.IAsyncResult result) {
            return base.Channel.EndAduit(result);
        }
        
        private System.IAsyncResult OnBeginAduit(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<SilverlightData.ServiceReference2.StudentPending> studentPs = ((System.Collections.ObjectModel.ObservableCollection<SilverlightData.ServiceReference2.StudentPending>)(inValues[0]));
            return ((SilverlightData.ServiceReference2.IService1)(this)).BeginAduit(studentPs, callback, asyncState);
        }
        
        private object[] OnEndAduit(System.IAsyncResult result) {
            bool retVal = ((SilverlightData.ServiceReference2.IService1)(this)).EndAduit(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAduitCompleted(object state) {
            if ((this.AduitCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AduitCompleted(this, new AduitCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AduitAsync(System.Collections.ObjectModel.ObservableCollection<SilverlightData.ServiceReference2.StudentPending> studentPs) {
            this.AduitAsync(studentPs, null);
        }
        
        public void AduitAsync(System.Collections.ObjectModel.ObservableCollection<SilverlightData.ServiceReference2.StudentPending> studentPs, object userState) {
            if ((this.onBeginAduitDelegate == null)) {
                this.onBeginAduitDelegate = new BeginOperationDelegate(this.OnBeginAduit);
            }
            if ((this.onEndAduitDelegate == null)) {
                this.onEndAduitDelegate = new EndOperationDelegate(this.OnEndAduit);
            }
            if ((this.onAduitCompletedDelegate == null)) {
                this.onAduitCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAduitCompleted);
            }
            base.InvokeAsync(this.onBeginAduitDelegate, new object[] {
                        studentPs}, this.onEndAduitDelegate, this.onAduitCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SilverlightData.ServiceReference2.IService1.BeginUnAduit(System.Collections.ObjectModel.ObservableCollection<SilverlightData.ServiceReference2.StudentPending> studentPs, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUnAduit(studentPs, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool SilverlightData.ServiceReference2.IService1.EndUnAduit(System.IAsyncResult result) {
            return base.Channel.EndUnAduit(result);
        }
        
        private System.IAsyncResult OnBeginUnAduit(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<SilverlightData.ServiceReference2.StudentPending> studentPs = ((System.Collections.ObjectModel.ObservableCollection<SilverlightData.ServiceReference2.StudentPending>)(inValues[0]));
            return ((SilverlightData.ServiceReference2.IService1)(this)).BeginUnAduit(studentPs, callback, asyncState);
        }
        
        private object[] OnEndUnAduit(System.IAsyncResult result) {
            bool retVal = ((SilverlightData.ServiceReference2.IService1)(this)).EndUnAduit(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUnAduitCompleted(object state) {
            if ((this.UnAduitCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UnAduitCompleted(this, new UnAduitCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UnAduitAsync(System.Collections.ObjectModel.ObservableCollection<SilverlightData.ServiceReference2.StudentPending> studentPs) {
            this.UnAduitAsync(studentPs, null);
        }
        
        public void UnAduitAsync(System.Collections.ObjectModel.ObservableCollection<SilverlightData.ServiceReference2.StudentPending> studentPs, object userState) {
            if ((this.onBeginUnAduitDelegate == null)) {
                this.onBeginUnAduitDelegate = new BeginOperationDelegate(this.OnBeginUnAduit);
            }
            if ((this.onEndUnAduitDelegate == null)) {
                this.onEndUnAduitDelegate = new EndOperationDelegate(this.OnEndUnAduit);
            }
            if ((this.onUnAduitCompletedDelegate == null)) {
                this.onUnAduitCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUnAduitCompleted);
            }
            base.InvokeAsync(this.onBeginUnAduitDelegate, new object[] {
                        studentPs}, this.onEndUnAduitDelegate, this.onUnAduitCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SilverlightData.ServiceReference2.IService1.BeginReState(int StudentId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReState(StudentId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int SilverlightData.ServiceReference2.IService1.EndReState(System.IAsyncResult result) {
            return base.Channel.EndReState(result);
        }
        
        private System.IAsyncResult OnBeginReState(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int StudentId = ((int)(inValues[0]));
            return ((SilverlightData.ServiceReference2.IService1)(this)).BeginReState(StudentId, callback, asyncState);
        }
        
        private object[] OnEndReState(System.IAsyncResult result) {
            int retVal = ((SilverlightData.ServiceReference2.IService1)(this)).EndReState(result);
            return new object[] {
                    retVal};
        }
        
        private void OnReStateCompleted(object state) {
            if ((this.ReStateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ReStateCompleted(this, new ReStateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ReStateAsync(int StudentId) {
            this.ReStateAsync(StudentId, null);
        }
        
        public void ReStateAsync(int StudentId, object userState) {
            if ((this.onBeginReStateDelegate == null)) {
                this.onBeginReStateDelegate = new BeginOperationDelegate(this.OnBeginReState);
            }
            if ((this.onEndReStateDelegate == null)) {
                this.onEndReStateDelegate = new EndOperationDelegate(this.OnEndReState);
            }
            if ((this.onReStateCompletedDelegate == null)) {
                this.onReStateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReStateCompleted);
            }
            base.InvokeAsync(this.onBeginReStateDelegate, new object[] {
                        StudentId}, this.onEndReStateDelegate, this.onReStateCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override SilverlightData.ServiceReference2.IService1 CreateChannel() {
            return new Service1ClientChannel(this);
        }
        
        private class Service1ClientChannel : ChannelBase<SilverlightData.ServiceReference2.IService1>, SilverlightData.ServiceReference2.IService1 {
            
            public Service1ClientChannel(System.ServiceModel.ClientBase<SilverlightData.ServiceReference2.IService1> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetstudent(NCS.DataAccess.QueryConditions querys, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = querys;
                System.IAsyncResult _result = base.BeginInvoke("Getstudent", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SilverlightData.ServiceReference2.Student> EndGetstudent(out int recount, System.IAsyncResult result) {
                object[] _args = new object[1];
                System.Collections.ObjectModel.ObservableCollection<SilverlightData.ServiceReference2.Student> _result = ((System.Collections.ObjectModel.ObservableCollection<SilverlightData.ServiceReference2.Student>)(base.EndInvoke("Getstudent", _args, result)));
                recount = ((int)(_args[0]));
                return _result;
            }
            
            public System.IAsyncResult BeginGetStudentPendings(NCS.DataAccess.QueryConditions querys, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = querys;
                System.IAsyncResult _result = base.BeginInvoke("GetStudentPendings", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SilverlightData.ServiceReference2.StudentPending> EndGetStudentPendings(out int recount, System.IAsyncResult result) {
                object[] _args = new object[1];
                System.Collections.ObjectModel.ObservableCollection<SilverlightData.ServiceReference2.StudentPending> _result = ((System.Collections.ObjectModel.ObservableCollection<SilverlightData.ServiceReference2.StudentPending>)(base.EndInvoke("GetStudentPendings", _args, result)));
                recount = ((int)(_args[0]));
                return _result;
            }
            
            public System.IAsyncResult BeginGetRejectStudent(NCS.DataAccess.QueryConditions querys, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = querys;
                System.IAsyncResult _result = base.BeginInvoke("GetRejectStudent", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SilverlightData.ServiceReference2.StudentPending> EndGetRejectStudent(out int recount, System.IAsyncResult result) {
                object[] _args = new object[1];
                System.Collections.ObjectModel.ObservableCollection<SilverlightData.ServiceReference2.StudentPending> _result = ((System.Collections.ObjectModel.ObservableCollection<SilverlightData.ServiceReference2.StudentPending>)(base.EndInvoke("GetRejectStudent", _args, result)));
                recount = ((int)(_args[0]));
                return _result;
            }
            
            public System.IAsyncResult BeginaddStudentPending(SilverlightData.ServiceReference2.StudentPending studentP, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = studentP;
                System.IAsyncResult _result = base.BeginInvoke("addStudentPending", _args, callback, asyncState);
                return _result;
            }
            
            public int EndaddStudentPending(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("addStudentPending", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginupdateStudentPendidngs(System.Collections.ObjectModel.ObservableCollection<SilverlightData.ServiceReference2.StudentPending> studentPs, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = studentPs;
                System.IAsyncResult _result = base.BeginInvoke("updateStudentPendidngs", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndupdateStudentPendidngs(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("updateStudentPendidngs", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegindelStudentPending(System.Collections.ObjectModel.ObservableCollection<SilverlightData.ServiceReference2.StudentPending> studentPs, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = studentPs;
                System.IAsyncResult _result = base.BeginInvoke("delStudentPending", _args, callback, asyncState);
                return _result;
            }
            
            public bool EnddelStudentPending(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("delStudentPending", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAduit(System.Collections.ObjectModel.ObservableCollection<SilverlightData.ServiceReference2.StudentPending> studentPs, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = studentPs;
                System.IAsyncResult _result = base.BeginInvoke("Aduit", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndAduit(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("Aduit", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUnAduit(System.Collections.ObjectModel.ObservableCollection<SilverlightData.ServiceReference2.StudentPending> studentPs, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = studentPs;
                System.IAsyncResult _result = base.BeginInvoke("UnAduit", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndUnAduit(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("UnAduit", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginReState(int StudentId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = StudentId;
                System.IAsyncResult _result = base.BeginInvoke("ReState", _args, callback, asyncState);
                return _result;
            }
            
            public int EndReState(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("ReState", _args, result)));
                return _result;
            }
        }
    }
}
